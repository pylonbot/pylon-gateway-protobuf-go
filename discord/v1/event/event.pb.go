// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: discord/v1/event.proto

package event

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	model "github.com/pylonbot/pylon-gateway-protobuf-go/discord/v1/model"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EventScope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId   uint64 `protobuf:"fixed64,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	GuildId uint64 `protobuf:"fixed64,2,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
}

func (x *EventScope) Reset() {
	*x = EventScope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventScope) ProtoMessage() {}

func (x *EventScope) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventScope.ProtoReflect.Descriptor instead.
func (*EventScope) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{0}
}

func (x *EventScope) GetBotId() uint64 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *EventScope) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

type GuildCreateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope      `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *model.GuildData `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *GuildCreateEvent) Reset() {
	*x = GuildCreateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildCreateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildCreateEvent) ProtoMessage() {}

func (x *GuildCreateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildCreateEvent.ProtoReflect.Descriptor instead.
func (*GuildCreateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{1}
}

func (x *GuildCreateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *GuildCreateEvent) GetPayload() *model.GuildData {
	if x != nil {
		return x.Payload
	}
	return nil
}

type GuildUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope            *EventScope      `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload          *model.GuildData `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	PreviouslyCached *model.GuildData `protobuf:"bytes,3,opt,name=previously_cached,json=previouslyCached,proto3" json:"previously_cached,omitempty"`
}

func (x *GuildUpdateEvent) Reset() {
	*x = GuildUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildUpdateEvent) ProtoMessage() {}

func (x *GuildUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildUpdateEvent.ProtoReflect.Descriptor instead.
func (*GuildUpdateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{2}
}

func (x *GuildUpdateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *GuildUpdateEvent) GetPayload() *model.GuildData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *GuildUpdateEvent) GetPreviouslyCached() *model.GuildData {
	if x != nil {
		return x.PreviouslyCached
	}
	return nil
}

type GuildDeleteEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope      `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *model.GuildData `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *GuildDeleteEvent) Reset() {
	*x = GuildDeleteEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildDeleteEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildDeleteEvent) ProtoMessage() {}

func (x *GuildDeleteEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildDeleteEvent.ProtoReflect.Descriptor instead.
func (*GuildDeleteEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{3}
}

func (x *GuildDeleteEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *GuildDeleteEvent) GetPayload() *model.GuildData {
	if x != nil {
		return x.Payload
	}
	return nil
}

type PresenceUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope            *EventScope         `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload          *model.PresenceData `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	PreviouslyCached *model.PresenceData `protobuf:"bytes,3,opt,name=previously_cached,json=previouslyCached,proto3" json:"previously_cached,omitempty"`
}

func (x *PresenceUpdateEvent) Reset() {
	*x = PresenceUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresenceUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresenceUpdateEvent) ProtoMessage() {}

func (x *PresenceUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresenceUpdateEvent.ProtoReflect.Descriptor instead.
func (*PresenceUpdateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{4}
}

func (x *PresenceUpdateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *PresenceUpdateEvent) GetPayload() *model.PresenceData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *PresenceUpdateEvent) GetPreviouslyCached() *model.PresenceData {
	if x != nil {
		return x.PreviouslyCached
	}
	return nil
}

type GuildMemberAddEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope       `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *model.MemberData `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *GuildMemberAddEvent) Reset() {
	*x = GuildMemberAddEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberAddEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberAddEvent) ProtoMessage() {}

func (x *GuildMemberAddEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberAddEvent.ProtoReflect.Descriptor instead.
func (*GuildMemberAddEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{5}
}

func (x *GuildMemberAddEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *GuildMemberAddEvent) GetPayload() *model.MemberData {
	if x != nil {
		return x.Payload
	}
	return nil
}

type GuildMemberUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope            *EventScope       `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload          *model.MemberData `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	PreviouslyCached *model.MemberData `protobuf:"bytes,3,opt,name=previously_cached,json=previouslyCached,proto3" json:"previously_cached,omitempty"`
}

func (x *GuildMemberUpdateEvent) Reset() {
	*x = GuildMemberUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberUpdateEvent) ProtoMessage() {}

func (x *GuildMemberUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberUpdateEvent.ProtoReflect.Descriptor instead.
func (*GuildMemberUpdateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{6}
}

func (x *GuildMemberUpdateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *GuildMemberUpdateEvent) GetPayload() *model.MemberData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *GuildMemberUpdateEvent) GetPreviouslyCached() *model.MemberData {
	if x != nil {
		return x.PreviouslyCached
	}
	return nil
}

type GuildMemberRemoveEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope       `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *model.MemberData `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *GuildMemberRemoveEvent) Reset() {
	*x = GuildMemberRemoveEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberRemoveEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberRemoveEvent) ProtoMessage() {}

func (x *GuildMemberRemoveEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberRemoveEvent.ProtoReflect.Descriptor instead.
func (*GuildMemberRemoveEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{7}
}

func (x *GuildMemberRemoveEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *GuildMemberRemoveEvent) GetPayload() *model.MemberData {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ChannelCreateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope        `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *model.ChannelData `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ChannelCreateEvent) Reset() {
	*x = ChannelCreateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelCreateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelCreateEvent) ProtoMessage() {}

func (x *ChannelCreateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelCreateEvent.ProtoReflect.Descriptor instead.
func (*ChannelCreateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{8}
}

func (x *ChannelCreateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *ChannelCreateEvent) GetPayload() *model.ChannelData {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ChannelUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope            *EventScope        `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload          *model.ChannelData `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	PreviouslyCached *model.ChannelData `protobuf:"bytes,3,opt,name=previously_cached,json=previouslyCached,proto3" json:"previously_cached,omitempty"`
}

func (x *ChannelUpdateEvent) Reset() {
	*x = ChannelUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelUpdateEvent) ProtoMessage() {}

func (x *ChannelUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelUpdateEvent.ProtoReflect.Descriptor instead.
func (*ChannelUpdateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{9}
}

func (x *ChannelUpdateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *ChannelUpdateEvent) GetPayload() *model.ChannelData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ChannelUpdateEvent) GetPreviouslyCached() *model.ChannelData {
	if x != nil {
		return x.PreviouslyCached
	}
	return nil
}

type ChannelDeleteEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope        `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *model.ChannelData `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ChannelDeleteEvent) Reset() {
	*x = ChannelDeleteEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelDeleteEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelDeleteEvent) ProtoMessage() {}

func (x *ChannelDeleteEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelDeleteEvent.ProtoReflect.Descriptor instead.
func (*ChannelDeleteEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{10}
}

func (x *ChannelDeleteEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *ChannelDeleteEvent) GetPayload() *model.ChannelData {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ChannelPinsUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope                     `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *ChannelPinsUpdateEvent_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ChannelPinsUpdateEvent) Reset() {
	*x = ChannelPinsUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelPinsUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelPinsUpdateEvent) ProtoMessage() {}

func (x *ChannelPinsUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelPinsUpdateEvent.ProtoReflect.Descriptor instead.
func (*ChannelPinsUpdateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{11}
}

func (x *ChannelPinsUpdateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *ChannelPinsUpdateEvent) GetPayload() *ChannelPinsUpdateEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type GuildRoleCreateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope     `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *model.RoleData `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *GuildRoleCreateEvent) Reset() {
	*x = GuildRoleCreateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildRoleCreateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRoleCreateEvent) ProtoMessage() {}

func (x *GuildRoleCreateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRoleCreateEvent.ProtoReflect.Descriptor instead.
func (*GuildRoleCreateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{12}
}

func (x *GuildRoleCreateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *GuildRoleCreateEvent) GetPayload() *model.RoleData {
	if x != nil {
		return x.Payload
	}
	return nil
}

type GuildRoleUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope            *EventScope     `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload          *model.RoleData `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	PreviouslyCached *model.RoleData `protobuf:"bytes,3,opt,name=previously_cached,json=previouslyCached,proto3" json:"previously_cached,omitempty"`
}

func (x *GuildRoleUpdateEvent) Reset() {
	*x = GuildRoleUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildRoleUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRoleUpdateEvent) ProtoMessage() {}

func (x *GuildRoleUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRoleUpdateEvent.ProtoReflect.Descriptor instead.
func (*GuildRoleUpdateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{13}
}

func (x *GuildRoleUpdateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *GuildRoleUpdateEvent) GetPayload() *model.RoleData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *GuildRoleUpdateEvent) GetPreviouslyCached() *model.RoleData {
	if x != nil {
		return x.PreviouslyCached
	}
	return nil
}

type GuildRoleDeleteEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope     `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *model.RoleData `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *GuildRoleDeleteEvent) Reset() {
	*x = GuildRoleDeleteEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildRoleDeleteEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRoleDeleteEvent) ProtoMessage() {}

func (x *GuildRoleDeleteEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRoleDeleteEvent.ProtoReflect.Descriptor instead.
func (*GuildRoleDeleteEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{14}
}

func (x *GuildRoleDeleteEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *GuildRoleDeleteEvent) GetPayload() *model.RoleData {
	if x != nil {
		return x.Payload
	}
	return nil
}

type MessageCreateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope        `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Message *model.MessageData `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MessageCreateEvent) Reset() {
	*x = MessageCreateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCreateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCreateEvent) ProtoMessage() {}

func (x *MessageCreateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageCreateEvent.ProtoReflect.Descriptor instead.
func (*MessageCreateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{15}
}

func (x *MessageCreateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *MessageCreateEvent) GetMessage() *model.MessageData {
	if x != nil {
		return x.Message
	}
	return nil
}

type MessageUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope            *EventScope        `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload          *model.MessageData `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	PreviouslyCached *model.MessageData `protobuf:"bytes,3,opt,name=previously_cached,json=previouslyCached,proto3" json:"previously_cached,omitempty"`
}

func (x *MessageUpdateEvent) Reset() {
	*x = MessageUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageUpdateEvent) ProtoMessage() {}

func (x *MessageUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageUpdateEvent.ProtoReflect.Descriptor instead.
func (*MessageUpdateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{16}
}

func (x *MessageUpdateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *MessageUpdateEvent) GetPayload() *model.MessageData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *MessageUpdateEvent) GetPreviouslyCached() *model.MessageData {
	if x != nil {
		return x.PreviouslyCached
	}
	return nil
}

type MessageDeleteEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope            *EventScope                 `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload          *MessageDeleteEvent_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	PreviouslyCached *model.MessageData          `protobuf:"bytes,3,opt,name=previously_cached,json=previouslyCached,proto3" json:"previously_cached,omitempty"`
}

func (x *MessageDeleteEvent) Reset() {
	*x = MessageDeleteEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageDeleteEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageDeleteEvent) ProtoMessage() {}

func (x *MessageDeleteEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageDeleteEvent.ProtoReflect.Descriptor instead.
func (*MessageDeleteEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{17}
}

func (x *MessageDeleteEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *MessageDeleteEvent) GetPayload() *MessageDeleteEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *MessageDeleteEvent) GetPreviouslyCached() *model.MessageData {
	if x != nil {
		return x.PreviouslyCached
	}
	return nil
}

type MessageDeleteBulkEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope                     `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *MessageDeleteBulkEvent_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *MessageDeleteBulkEvent) Reset() {
	*x = MessageDeleteBulkEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageDeleteBulkEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageDeleteBulkEvent) ProtoMessage() {}

func (x *MessageDeleteBulkEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageDeleteBulkEvent.ProtoReflect.Descriptor instead.
func (*MessageDeleteBulkEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{18}
}

func (x *MessageDeleteBulkEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *MessageDeleteBulkEvent) GetPayload() *MessageDeleteBulkEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type MessageReactionAddEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope                      `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *MessageReactionAddEvent_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *MessageReactionAddEvent) Reset() {
	*x = MessageReactionAddEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactionAddEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionAddEvent) ProtoMessage() {}

func (x *MessageReactionAddEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionAddEvent.ProtoReflect.Descriptor instead.
func (*MessageReactionAddEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{19}
}

func (x *MessageReactionAddEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *MessageReactionAddEvent) GetPayload() *MessageReactionAddEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type MessageReactionRemoveEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope                         `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *MessageReactionRemoveEvent_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *MessageReactionRemoveEvent) Reset() {
	*x = MessageReactionRemoveEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactionRemoveEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionRemoveEvent) ProtoMessage() {}

func (x *MessageReactionRemoveEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionRemoveEvent.ProtoReflect.Descriptor instead.
func (*MessageReactionRemoveEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{20}
}

func (x *MessageReactionRemoveEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *MessageReactionRemoveEvent) GetPayload() *MessageReactionRemoveEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type MessageReactionRemoveAllEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope                            `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *MessageReactionRemoveAllEvent_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *MessageReactionRemoveAllEvent) Reset() {
	*x = MessageReactionRemoveAllEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactionRemoveAllEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionRemoveAllEvent) ProtoMessage() {}

func (x *MessageReactionRemoveAllEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionRemoveAllEvent.ProtoReflect.Descriptor instead.
func (*MessageReactionRemoveAllEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{21}
}

func (x *MessageReactionRemoveAllEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *MessageReactionRemoveAllEvent) GetPayload() *MessageReactionRemoveAllEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type MessageReactionRemoveEmojiEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope                              `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *MessageReactionRemoveEmojiEvent_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *MessageReactionRemoveEmojiEvent) Reset() {
	*x = MessageReactionRemoveEmojiEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactionRemoveEmojiEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionRemoveEmojiEvent) ProtoMessage() {}

func (x *MessageReactionRemoveEmojiEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionRemoveEmojiEvent.ProtoReflect.Descriptor instead.
func (*MessageReactionRemoveEmojiEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{22}
}

func (x *MessageReactionRemoveEmojiEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *MessageReactionRemoveEmojiEvent) GetPayload() *MessageReactionRemoveEmojiEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TypingStartEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope               `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *TypingStartEvent_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *TypingStartEvent) Reset() {
	*x = TypingStartEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypingStartEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypingStartEvent) ProtoMessage() {}

func (x *TypingStartEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypingStartEvent.ProtoReflect.Descriptor instead.
func (*TypingStartEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{23}
}

func (x *TypingStartEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *TypingStartEvent) GetPayload() *TypingStartEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type VoiceStateUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope            *EventScope           `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload          *model.VoiceStateData `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	PreviouslyCached *model.VoiceStateData `protobuf:"bytes,3,opt,name=previously_cached,json=previouslyCached,proto3" json:"previously_cached,omitempty"`
}

func (x *VoiceStateUpdateEvent) Reset() {
	*x = VoiceStateUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceStateUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceStateUpdateEvent) ProtoMessage() {}

func (x *VoiceStateUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceStateUpdateEvent.ProtoReflect.Descriptor instead.
func (*VoiceStateUpdateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{24}
}

func (x *VoiceStateUpdateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *VoiceStateUpdateEvent) GetPayload() *model.VoiceStateData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *VoiceStateUpdateEvent) GetPreviouslyCached() *model.VoiceStateData {
	if x != nil {
		return x.PreviouslyCached
	}
	return nil
}

type VoiceServerUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope                     `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *VoiceServerUpdateEvent_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *VoiceServerUpdateEvent) Reset() {
	*x = VoiceServerUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceServerUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceServerUpdateEvent) ProtoMessage() {}

func (x *VoiceServerUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceServerUpdateEvent.ProtoReflect.Descriptor instead.
func (*VoiceServerUpdateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{25}
}

func (x *VoiceServerUpdateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *VoiceServerUpdateEvent) GetPayload() *VoiceServerUpdateEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type InviteCreateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope       `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *model.InviteData `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *InviteCreateEvent) Reset() {
	*x = InviteCreateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteCreateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteCreateEvent) ProtoMessage() {}

func (x *InviteCreateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteCreateEvent.ProtoReflect.Descriptor instead.
func (*InviteCreateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{26}
}

func (x *InviteCreateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *InviteCreateEvent) GetPayload() *model.InviteData {
	if x != nil {
		return x.Payload
	}
	return nil
}

type InviteDeleteEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope                `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *InviteDeleteEvent_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *InviteDeleteEvent) Reset() {
	*x = InviteDeleteEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteDeleteEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteDeleteEvent) ProtoMessage() {}

func (x *InviteDeleteEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteDeleteEvent.ProtoReflect.Descriptor instead.
func (*InviteDeleteEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{27}
}

func (x *InviteDeleteEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *InviteDeleteEvent) GetPayload() *InviteDeleteEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type GuildBanAddEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope               `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *GuildBanAddEvent_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *GuildBanAddEvent) Reset() {
	*x = GuildBanAddEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildBanAddEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildBanAddEvent) ProtoMessage() {}

func (x *GuildBanAddEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildBanAddEvent.ProtoReflect.Descriptor instead.
func (*GuildBanAddEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{28}
}

func (x *GuildBanAddEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *GuildBanAddEvent) GetPayload() *GuildBanAddEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type GuildBanRemoveEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope                  `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *GuildBanRemoveEvent_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *GuildBanRemoveEvent) Reset() {
	*x = GuildBanRemoveEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildBanRemoveEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildBanRemoveEvent) ProtoMessage() {}

func (x *GuildBanRemoveEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildBanRemoveEvent.ProtoReflect.Descriptor instead.
func (*GuildBanRemoveEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{29}
}

func (x *GuildBanRemoveEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *GuildBanRemoveEvent) GetPayload() *GuildBanRemoveEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type GuildEmojisUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope            *EventScope                     `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload          *GuildEmojisUpdateEvent_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	PreviouslyCached *GuildEmojisUpdateEvent_Payload `protobuf:"bytes,3,opt,name=previously_cached,json=previouslyCached,proto3" json:"previously_cached,omitempty"`
}

func (x *GuildEmojisUpdateEvent) Reset() {
	*x = GuildEmojisUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEmojisUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEmojisUpdateEvent) ProtoMessage() {}

func (x *GuildEmojisUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEmojisUpdateEvent.ProtoReflect.Descriptor instead.
func (*GuildEmojisUpdateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{30}
}

func (x *GuildEmojisUpdateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *GuildEmojisUpdateEvent) GetPayload() *GuildEmojisUpdateEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *GuildEmojisUpdateEvent) GetPreviouslyCached() *GuildEmojisUpdateEvent_Payload {
	if x != nil {
		return x.PreviouslyCached
	}
	return nil
}

type GuildIntegrationsUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope                           `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *GuildIntegrationsUpdateEvent_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *GuildIntegrationsUpdateEvent) Reset() {
	*x = GuildIntegrationsUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildIntegrationsUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildIntegrationsUpdateEvent) ProtoMessage() {}

func (x *GuildIntegrationsUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildIntegrationsUpdateEvent.ProtoReflect.Descriptor instead.
func (*GuildIntegrationsUpdateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{31}
}

func (x *GuildIntegrationsUpdateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *GuildIntegrationsUpdateEvent) GetPayload() *GuildIntegrationsUpdateEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type WebhooksUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope                  `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *WebhooksUpdateEvent_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *WebhooksUpdateEvent) Reset() {
	*x = WebhooksUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhooksUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhooksUpdateEvent) ProtoMessage() {}

func (x *WebhooksUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhooksUpdateEvent.ProtoReflect.Descriptor instead.
func (*WebhooksUpdateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{32}
}

func (x *WebhooksUpdateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *WebhooksUpdateEvent) GetPayload() *WebhooksUpdateEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type IntegrationCreateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope                     `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *IntegrationCreateEvent_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *IntegrationCreateEvent) Reset() {
	*x = IntegrationCreateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationCreateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationCreateEvent) ProtoMessage() {}

func (x *IntegrationCreateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationCreateEvent.ProtoReflect.Descriptor instead.
func (*IntegrationCreateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{33}
}

func (x *IntegrationCreateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *IntegrationCreateEvent) GetPayload() *IntegrationCreateEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type IntegrationUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope                     `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *IntegrationUpdateEvent_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *IntegrationUpdateEvent) Reset() {
	*x = IntegrationUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationUpdateEvent) ProtoMessage() {}

func (x *IntegrationUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationUpdateEvent.ProtoReflect.Descriptor instead.
func (*IntegrationUpdateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{34}
}

func (x *IntegrationUpdateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *IntegrationUpdateEvent) GetPayload() *IntegrationUpdateEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type IntegrationDeleteEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope                     `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *IntegrationDeleteEvent_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *IntegrationDeleteEvent) Reset() {
	*x = IntegrationDeleteEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationDeleteEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationDeleteEvent) ProtoMessage() {}

func (x *IntegrationDeleteEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationDeleteEvent.ProtoReflect.Descriptor instead.
func (*IntegrationDeleteEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{35}
}

func (x *IntegrationDeleteEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *IntegrationDeleteEvent) GetPayload() *IntegrationDeleteEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type InteractionCreateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   *EventScope                     `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Payload *InteractionCreateEvent_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *InteractionCreateEvent) Reset() {
	*x = InteractionCreateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionCreateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionCreateEvent) ProtoMessage() {}

func (x *InteractionCreateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionCreateEvent.ProtoReflect.Descriptor instead.
func (*InteractionCreateEvent) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{36}
}

func (x *InteractionCreateEvent) GetScope() *EventScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *InteractionCreateEvent) GetPayload() *InteractionCreateEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type EventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventResponse) Reset() {
	*x = EventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventResponse) ProtoMessage() {}

func (x *EventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventResponse.ProtoReflect.Descriptor instead.
func (*EventResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{37}
}

type InteractionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InteractionResponse) Reset() {
	*x = InteractionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionResponse) ProtoMessage() {}

func (x *InteractionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionResponse.ProtoReflect.Descriptor instead.
func (*InteractionResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{38}
}

type ChannelPinsUpdateEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId        uint64               `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	GuildId          uint64               `protobuf:"fixed64,2,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	LastPinTimestamp *timestamp.Timestamp `protobuf:"bytes,3,opt,name=last_pin_timestamp,json=lastPinTimestamp,proto3" json:"last_pin_timestamp,omitempty"`
}

func (x *ChannelPinsUpdateEvent_Payload) Reset() {
	*x = ChannelPinsUpdateEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelPinsUpdateEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelPinsUpdateEvent_Payload) ProtoMessage() {}

func (x *ChannelPinsUpdateEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelPinsUpdateEvent_Payload.ProtoReflect.Descriptor instead.
func (*ChannelPinsUpdateEvent_Payload) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ChannelPinsUpdateEvent_Payload) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *ChannelPinsUpdateEvent_Payload) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *ChannelPinsUpdateEvent_Payload) GetLastPinTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.LastPinTimestamp
	}
	return nil
}

type MessageDeleteEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"fixed64,1,opt,name=id,proto3" json:"id,omitempty"`
	ChannelId uint64 `protobuf:"fixed64,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	GuildId   uint64 `protobuf:"fixed64,3,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
}

func (x *MessageDeleteEvent_Payload) Reset() {
	*x = MessageDeleteEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageDeleteEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageDeleteEvent_Payload) ProtoMessage() {}

func (x *MessageDeleteEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageDeleteEvent_Payload.ProtoReflect.Descriptor instead.
func (*MessageDeleteEvent_Payload) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{17, 0}
}

func (x *MessageDeleteEvent_Payload) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MessageDeleteEvent_Payload) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *MessageDeleteEvent_Payload) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

type MessageDeleteBulkEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids       []uint64 `protobuf:"fixed64,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	ChannelId uint64   `protobuf:"fixed64,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	GuildId   uint64   `protobuf:"fixed64,3,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
}

func (x *MessageDeleteBulkEvent_Payload) Reset() {
	*x = MessageDeleteBulkEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageDeleteBulkEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageDeleteBulkEvent_Payload) ProtoMessage() {}

func (x *MessageDeleteBulkEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageDeleteBulkEvent_Payload.ProtoReflect.Descriptor instead.
func (*MessageDeleteBulkEvent_Payload) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{18, 0}
}

func (x *MessageDeleteBulkEvent_Payload) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *MessageDeleteBulkEvent_Payload) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *MessageDeleteBulkEvent_Payload) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

type MessageReactionAddEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    uint64                                      `protobuf:"fixed64,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ChannelId uint64                                      `protobuf:"fixed64,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId uint64                                      `protobuf:"fixed64,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	GuildId   uint64                                      `protobuf:"fixed64,4,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	Emoji     *model.MessageData_MessageReactionEmojiData `protobuf:"bytes,6,opt,name=emoji,proto3" json:"emoji,omitempty"`
}

func (x *MessageReactionAddEvent_Payload) Reset() {
	*x = MessageReactionAddEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactionAddEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionAddEvent_Payload) ProtoMessage() {}

func (x *MessageReactionAddEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionAddEvent_Payload.ProtoReflect.Descriptor instead.
func (*MessageReactionAddEvent_Payload) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{19, 0}
}

func (x *MessageReactionAddEvent_Payload) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MessageReactionAddEvent_Payload) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *MessageReactionAddEvent_Payload) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *MessageReactionAddEvent_Payload) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *MessageReactionAddEvent_Payload) GetEmoji() *model.MessageData_MessageReactionEmojiData {
	if x != nil {
		return x.Emoji
	}
	return nil
}

type MessageReactionRemoveEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    uint64                                      `protobuf:"fixed64,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ChannelId uint64                                      `protobuf:"fixed64,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId uint64                                      `protobuf:"fixed64,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	GuildId   uint64                                      `protobuf:"fixed64,4,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	Emoji     *model.MessageData_MessageReactionEmojiData `protobuf:"bytes,5,opt,name=emoji,proto3" json:"emoji,omitempty"`
}

func (x *MessageReactionRemoveEvent_Payload) Reset() {
	*x = MessageReactionRemoveEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactionRemoveEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionRemoveEvent_Payload) ProtoMessage() {}

func (x *MessageReactionRemoveEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionRemoveEvent_Payload.ProtoReflect.Descriptor instead.
func (*MessageReactionRemoveEvent_Payload) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{20, 0}
}

func (x *MessageReactionRemoveEvent_Payload) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MessageReactionRemoveEvent_Payload) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *MessageReactionRemoveEvent_Payload) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *MessageReactionRemoveEvent_Payload) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *MessageReactionRemoveEvent_Payload) GetEmoji() *model.MessageData_MessageReactionEmojiData {
	if x != nil {
		return x.Emoji
	}
	return nil
}

type MessageReactionRemoveAllEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId uint64 `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId uint64 `protobuf:"fixed64,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	GuildId   uint64 `protobuf:"fixed64,3,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
}

func (x *MessageReactionRemoveAllEvent_Payload) Reset() {
	*x = MessageReactionRemoveAllEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactionRemoveAllEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionRemoveAllEvent_Payload) ProtoMessage() {}

func (x *MessageReactionRemoveAllEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionRemoveAllEvent_Payload.ProtoReflect.Descriptor instead.
func (*MessageReactionRemoveAllEvent_Payload) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{21, 0}
}

func (x *MessageReactionRemoveAllEvent_Payload) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *MessageReactionRemoveAllEvent_Payload) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *MessageReactionRemoveAllEvent_Payload) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

type MessageReactionRemoveEmojiEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId uint64                                      `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId uint64                                      `protobuf:"fixed64,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	GuildId   uint64                                      `protobuf:"fixed64,3,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	Emoji     *model.MessageData_MessageReactionEmojiData `protobuf:"bytes,4,opt,name=emoji,proto3" json:"emoji,omitempty"`
}

func (x *MessageReactionRemoveEmojiEvent_Payload) Reset() {
	*x = MessageReactionRemoveEmojiEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactionRemoveEmojiEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionRemoveEmojiEvent_Payload) ProtoMessage() {}

func (x *MessageReactionRemoveEmojiEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionRemoveEmojiEvent_Payload.ProtoReflect.Descriptor instead.
func (*MessageReactionRemoveEmojiEvent_Payload) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{22, 0}
}

func (x *MessageReactionRemoveEmojiEvent_Payload) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *MessageReactionRemoveEmojiEvent_Payload) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *MessageReactionRemoveEmojiEvent_Payload) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *MessageReactionRemoveEmojiEvent_Payload) GetEmoji() *model.MessageData_MessageReactionEmojiData {
	if x != nil {
		return x.Emoji
	}
	return nil
}

type TypingStartEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId uint64               `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	UserId    uint64               `protobuf:"fixed64,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Member    *model.MemberData    `protobuf:"bytes,4,opt,name=member,proto3" json:"member,omitempty"`
}

func (x *TypingStartEvent_Payload) Reset() {
	*x = TypingStartEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypingStartEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypingStartEvent_Payload) ProtoMessage() {}

func (x *TypingStartEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypingStartEvent_Payload.ProtoReflect.Descriptor instead.
func (*TypingStartEvent_Payload) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{23, 0}
}

func (x *TypingStartEvent_Payload) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *TypingStartEvent_Payload) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TypingStartEvent_Payload) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TypingStartEvent_Payload) GetMember() *model.MemberData {
	if x != nil {
		return x.Member
	}
	return nil
}

type VoiceServerUpdateEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId  uint64 `protobuf:"fixed64,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Endpoint string `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *VoiceServerUpdateEvent_Payload) Reset() {
	*x = VoiceServerUpdateEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceServerUpdateEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceServerUpdateEvent_Payload) ProtoMessage() {}

func (x *VoiceServerUpdateEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceServerUpdateEvent_Payload.ProtoReflect.Descriptor instead.
func (*VoiceServerUpdateEvent_Payload) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{25, 0}
}

func (x *VoiceServerUpdateEvent_Payload) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *VoiceServerUpdateEvent_Payload) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *VoiceServerUpdateEvent_Payload) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

type InviteDeleteEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId   uint64 `protobuf:"fixed64,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	ChannelId uint64 `protobuf:"fixed64,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Code      string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *InviteDeleteEvent_Payload) Reset() {
	*x = InviteDeleteEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteDeleteEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteDeleteEvent_Payload) ProtoMessage() {}

func (x *InviteDeleteEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteDeleteEvent_Payload.ProtoReflect.Descriptor instead.
func (*InviteDeleteEvent_Payload) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{27, 0}
}

func (x *InviteDeleteEvent_Payload) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *InviteDeleteEvent_Payload) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *InviteDeleteEvent_Payload) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GuildBanAddEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId uint64          `protobuf:"fixed64,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	User    *model.UserData `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GuildBanAddEvent_Payload) Reset() {
	*x = GuildBanAddEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildBanAddEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildBanAddEvent_Payload) ProtoMessage() {}

func (x *GuildBanAddEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildBanAddEvent_Payload.ProtoReflect.Descriptor instead.
func (*GuildBanAddEvent_Payload) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{28, 0}
}

func (x *GuildBanAddEvent_Payload) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *GuildBanAddEvent_Payload) GetUser() *model.UserData {
	if x != nil {
		return x.User
	}
	return nil
}

type GuildBanRemoveEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId uint64          `protobuf:"fixed64,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	User    *model.UserData `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GuildBanRemoveEvent_Payload) Reset() {
	*x = GuildBanRemoveEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildBanRemoveEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildBanRemoveEvent_Payload) ProtoMessage() {}

func (x *GuildBanRemoveEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildBanRemoveEvent_Payload.ProtoReflect.Descriptor instead.
func (*GuildBanRemoveEvent_Payload) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{29, 0}
}

func (x *GuildBanRemoveEvent_Payload) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *GuildBanRemoveEvent_Payload) GetUser() *model.UserData {
	if x != nil {
		return x.User
	}
	return nil
}

type GuildEmojisUpdateEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId uint64             `protobuf:"fixed64,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	Emojis  []*model.EmojiData `protobuf:"bytes,2,rep,name=emojis,proto3" json:"emojis,omitempty"`
}

func (x *GuildEmojisUpdateEvent_Payload) Reset() {
	*x = GuildEmojisUpdateEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEmojisUpdateEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEmojisUpdateEvent_Payload) ProtoMessage() {}

func (x *GuildEmojisUpdateEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEmojisUpdateEvent_Payload.ProtoReflect.Descriptor instead.
func (*GuildEmojisUpdateEvent_Payload) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{30, 0}
}

func (x *GuildEmojisUpdateEvent_Payload) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *GuildEmojisUpdateEvent_Payload) GetEmojis() []*model.EmojiData {
	if x != nil {
		return x.Emojis
	}
	return nil
}

type GuildIntegrationsUpdateEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId uint64 `protobuf:"fixed64,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
}

func (x *GuildIntegrationsUpdateEvent_Payload) Reset() {
	*x = GuildIntegrationsUpdateEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildIntegrationsUpdateEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildIntegrationsUpdateEvent_Payload) ProtoMessage() {}

func (x *GuildIntegrationsUpdateEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildIntegrationsUpdateEvent_Payload.ProtoReflect.Descriptor instead.
func (*GuildIntegrationsUpdateEvent_Payload) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{31, 0}
}

func (x *GuildIntegrationsUpdateEvent_Payload) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

type WebhooksUpdateEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId uint64 `protobuf:"fixed64,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
}

func (x *WebhooksUpdateEvent_Payload) Reset() {
	*x = WebhooksUpdateEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhooksUpdateEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhooksUpdateEvent_Payload) ProtoMessage() {}

func (x *WebhooksUpdateEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhooksUpdateEvent_Payload.ProtoReflect.Descriptor instead.
func (*WebhooksUpdateEvent_Payload) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{32, 0}
}

func (x *WebhooksUpdateEvent_Payload) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

type IntegrationCreateEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId uint64 `protobuf:"fixed64,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
}

func (x *IntegrationCreateEvent_Payload) Reset() {
	*x = IntegrationCreateEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationCreateEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationCreateEvent_Payload) ProtoMessage() {}

func (x *IntegrationCreateEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationCreateEvent_Payload.ProtoReflect.Descriptor instead.
func (*IntegrationCreateEvent_Payload) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{33, 0}
}

func (x *IntegrationCreateEvent_Payload) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

type IntegrationUpdateEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId uint64 `protobuf:"fixed64,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
}

func (x *IntegrationUpdateEvent_Payload) Reset() {
	*x = IntegrationUpdateEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationUpdateEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationUpdateEvent_Payload) ProtoMessage() {}

func (x *IntegrationUpdateEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationUpdateEvent_Payload.ProtoReflect.Descriptor instead.
func (*IntegrationUpdateEvent_Payload) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{34, 0}
}

func (x *IntegrationUpdateEvent_Payload) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

type IntegrationDeleteEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId uint64 `protobuf:"fixed64,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
}

func (x *IntegrationDeleteEvent_Payload) Reset() {
	*x = IntegrationDeleteEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationDeleteEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationDeleteEvent_Payload) ProtoMessage() {}

func (x *IntegrationDeleteEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationDeleteEvent_Payload.ProtoReflect.Descriptor instead.
func (*IntegrationDeleteEvent_Payload) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{35, 0}
}

func (x *IntegrationDeleteEvent_Payload) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

type InteractionCreateEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId int64 `protobuf:"fixed64,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
}

func (x *InteractionCreateEvent_Payload) Reset() {
	*x = InteractionCreateEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_event_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionCreateEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionCreateEvent_Payload) ProtoMessage() {}

func (x *InteractionCreateEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_event_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionCreateEvent_Payload.ProtoReflect.Descriptor instead.
func (*InteractionCreateEvent_Payload) Descriptor() ([]byte, []int) {
	return file_discord_v1_event_proto_rawDescGZIP(), []int{36, 0}
}

func (x *InteractionCreateEvent_Payload) GetGuildId() int64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

var File_discord_v1_event_proto protoreflect.FileDescriptor

var file_discord_v1_event_proto_rawDesc = []byte{
	0x0a, 0x16, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x1a, 0x16, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x46, 0x0a, 0x0a, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x05, 0x62, 0x6f, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x64, 0x22, 0x89, 0x01, 0x0a, 0x10, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x12, 0x3b, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xd9, 0x01,
	0x0a, 0x10, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4e, 0x0a, 0x11, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x6c, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x10, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x79, 0x6c, 0x6f,
	0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70,
	0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x51, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x6c, 0x79, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x6c, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x13, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xe1, 0x01, 0x0a, 0x16, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x3c, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4f, 0x0a,
	0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x5f, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x22, 0x90,
	0x01, 0x0a, 0x16, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0xdf, 0x01, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x50, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x5f,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70,
	0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f,
	0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0xbc, 0x02, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50,
	0x69, 0x6e, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x79, 0x6c, 0x6f,
	0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x69, 0x6e, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x95, 0x01, 0x0a, 0x07, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x08, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x70, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x8c, 0x01, 0x0a, 0x14, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c,
	0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0xdb, 0x01, 0x0a, 0x14, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f,
	0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x4d, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x5f, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79,
	0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x22,
	0x8c, 0x01, 0x0a, 0x14, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x8d,
	0x01, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x3d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xdf,
	0x01, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x3d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x50,
	0x0a, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x5f, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x79, 0x6c, 0x6f,
	0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64,
	0x22, 0xcf, 0x02, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x12, 0x4c, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x50, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x5f, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x79, 0x6c,
	0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x1a, 0x5f, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x64, 0x22, 0xff, 0x01, 0x0a, 0x16, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70,
	0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42,
	0x75, 0x6c, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x59, 0x0a, 0x07, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x64, 0x22, 0x88, 0x03, 0x0a, 0x17, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x51, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x70, 0x79,
	0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0xdf, 0x01,
	0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0a, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x08,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x05, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x70, 0x79, 0x6c,
	0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6d, 0x6f, 0x6a, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x22,
	0x8e, 0x03, 0x0a, 0x1a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x54, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x70, 0x79, 0x6c, 0x6f,
	0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0xdf,
	0x01, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0a, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x06, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x05,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x70, 0x79,
	0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69,
	0x22, 0xa2, 0x02, 0x0a, 0x1d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x57, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e,
	0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x6e, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x64, 0x22, 0xfb, 0x02, 0x0a, 0x1f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45,
	0x6d, 0x6f, 0x6a, 0x69, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x12, 0x59, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0xc2,
	0x01, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12,
	0x52, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c,
	0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x22, 0xda, 0x02, 0x0a, 0x10, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x79, 0x70,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0xbf,
	0x01, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x3a, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0xe8, 0x01, 0x0a, 0x15, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f,
	0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x53, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x6c, 0x79, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x6c, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x22, 0x80, 0x02, 0x0a, 0x16,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x12, 0x50, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x1a, 0x5a, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1d, 0x0a,
	0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x8b,
	0x01, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x3c,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xfb, 0x01, 0x0a,
	0x11, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x4b, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x5f, 0x0a, 0x07, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xf8, 0x01, 0x0a, 0x10, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x41, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x79, 0x6c,
	0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x41, 0x64, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x5e, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x1d, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12,
	0x34, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xfe, 0x01, 0x0a, 0x13, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42,
	0x61, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70,
	0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x4d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x5e, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x1d, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64,
	0x12, 0x34, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xee, 0x02, 0x0a, 0x16, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70,
	0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x63, 0x0a,
	0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x5f, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x1a, 0x63, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1d, 0x0a,
	0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x06,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70,
	0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x06, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x1c, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x56, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x28, 0x0a, 0x07, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x13, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79,
	0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x4d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x28, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x1d, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x22,
	0xce, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f,
	0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x28, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x1d, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64,
	0x22, 0xce, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c,
	0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x28, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x1d, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x64, 0x22, 0xce, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79,
	0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x28, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x64, 0x22, 0xce, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70,
	0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x28, 0x0a, 0x07, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x10, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x64, 0x0a, 0x20, 0x62,
	0x6f, 0x74, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x50,
	0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x79,
	0x6c, 0x6f, 0x6e, 0x62, 0x6f, 0x74, 0x2f, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2d, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x67, 0x6f,
	0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_discord_v1_event_proto_rawDescOnce sync.Once
	file_discord_v1_event_proto_rawDescData = file_discord_v1_event_proto_rawDesc
)

func file_discord_v1_event_proto_rawDescGZIP() []byte {
	file_discord_v1_event_proto_rawDescOnce.Do(func() {
		file_discord_v1_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_discord_v1_event_proto_rawDescData)
	})
	return file_discord_v1_event_proto_rawDescData
}

var file_discord_v1_event_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_discord_v1_event_proto_goTypes = []interface{}{
	(*EventScope)(nil),                                 // 0: pylon.discord.v1.event.EventScope
	(*GuildCreateEvent)(nil),                           // 1: pylon.discord.v1.event.GuildCreateEvent
	(*GuildUpdateEvent)(nil),                           // 2: pylon.discord.v1.event.GuildUpdateEvent
	(*GuildDeleteEvent)(nil),                           // 3: pylon.discord.v1.event.GuildDeleteEvent
	(*PresenceUpdateEvent)(nil),                        // 4: pylon.discord.v1.event.PresenceUpdateEvent
	(*GuildMemberAddEvent)(nil),                        // 5: pylon.discord.v1.event.GuildMemberAddEvent
	(*GuildMemberUpdateEvent)(nil),                     // 6: pylon.discord.v1.event.GuildMemberUpdateEvent
	(*GuildMemberRemoveEvent)(nil),                     // 7: pylon.discord.v1.event.GuildMemberRemoveEvent
	(*ChannelCreateEvent)(nil),                         // 8: pylon.discord.v1.event.ChannelCreateEvent
	(*ChannelUpdateEvent)(nil),                         // 9: pylon.discord.v1.event.ChannelUpdateEvent
	(*ChannelDeleteEvent)(nil),                         // 10: pylon.discord.v1.event.ChannelDeleteEvent
	(*ChannelPinsUpdateEvent)(nil),                     // 11: pylon.discord.v1.event.ChannelPinsUpdateEvent
	(*GuildRoleCreateEvent)(nil),                       // 12: pylon.discord.v1.event.GuildRoleCreateEvent
	(*GuildRoleUpdateEvent)(nil),                       // 13: pylon.discord.v1.event.GuildRoleUpdateEvent
	(*GuildRoleDeleteEvent)(nil),                       // 14: pylon.discord.v1.event.GuildRoleDeleteEvent
	(*MessageCreateEvent)(nil),                         // 15: pylon.discord.v1.event.MessageCreateEvent
	(*MessageUpdateEvent)(nil),                         // 16: pylon.discord.v1.event.MessageUpdateEvent
	(*MessageDeleteEvent)(nil),                         // 17: pylon.discord.v1.event.MessageDeleteEvent
	(*MessageDeleteBulkEvent)(nil),                     // 18: pylon.discord.v1.event.MessageDeleteBulkEvent
	(*MessageReactionAddEvent)(nil),                    // 19: pylon.discord.v1.event.MessageReactionAddEvent
	(*MessageReactionRemoveEvent)(nil),                 // 20: pylon.discord.v1.event.MessageReactionRemoveEvent
	(*MessageReactionRemoveAllEvent)(nil),              // 21: pylon.discord.v1.event.MessageReactionRemoveAllEvent
	(*MessageReactionRemoveEmojiEvent)(nil),            // 22: pylon.discord.v1.event.MessageReactionRemoveEmojiEvent
	(*TypingStartEvent)(nil),                           // 23: pylon.discord.v1.event.TypingStartEvent
	(*VoiceStateUpdateEvent)(nil),                      // 24: pylon.discord.v1.event.VoiceStateUpdateEvent
	(*VoiceServerUpdateEvent)(nil),                     // 25: pylon.discord.v1.event.VoiceServerUpdateEvent
	(*InviteCreateEvent)(nil),                          // 26: pylon.discord.v1.event.InviteCreateEvent
	(*InviteDeleteEvent)(nil),                          // 27: pylon.discord.v1.event.InviteDeleteEvent
	(*GuildBanAddEvent)(nil),                           // 28: pylon.discord.v1.event.GuildBanAddEvent
	(*GuildBanRemoveEvent)(nil),                        // 29: pylon.discord.v1.event.GuildBanRemoveEvent
	(*GuildEmojisUpdateEvent)(nil),                     // 30: pylon.discord.v1.event.GuildEmojisUpdateEvent
	(*GuildIntegrationsUpdateEvent)(nil),               // 31: pylon.discord.v1.event.GuildIntegrationsUpdateEvent
	(*WebhooksUpdateEvent)(nil),                        // 32: pylon.discord.v1.event.WebhooksUpdateEvent
	(*IntegrationCreateEvent)(nil),                     // 33: pylon.discord.v1.event.IntegrationCreateEvent
	(*IntegrationUpdateEvent)(nil),                     // 34: pylon.discord.v1.event.IntegrationUpdateEvent
	(*IntegrationDeleteEvent)(nil),                     // 35: pylon.discord.v1.event.IntegrationDeleteEvent
	(*InteractionCreateEvent)(nil),                     // 36: pylon.discord.v1.event.InteractionCreateEvent
	(*EventResponse)(nil),                              // 37: pylon.discord.v1.event.EventResponse
	(*InteractionResponse)(nil),                        // 38: pylon.discord.v1.event.InteractionResponse
	(*ChannelPinsUpdateEvent_Payload)(nil),             // 39: pylon.discord.v1.event.ChannelPinsUpdateEvent.Payload
	(*MessageDeleteEvent_Payload)(nil),                 // 40: pylon.discord.v1.event.MessageDeleteEvent.Payload
	(*MessageDeleteBulkEvent_Payload)(nil),             // 41: pylon.discord.v1.event.MessageDeleteBulkEvent.Payload
	(*MessageReactionAddEvent_Payload)(nil),            // 42: pylon.discord.v1.event.MessageReactionAddEvent.Payload
	(*MessageReactionRemoveEvent_Payload)(nil),         // 43: pylon.discord.v1.event.MessageReactionRemoveEvent.Payload
	(*MessageReactionRemoveAllEvent_Payload)(nil),      // 44: pylon.discord.v1.event.MessageReactionRemoveAllEvent.Payload
	(*MessageReactionRemoveEmojiEvent_Payload)(nil),    // 45: pylon.discord.v1.event.MessageReactionRemoveEmojiEvent.Payload
	(*TypingStartEvent_Payload)(nil),                   // 46: pylon.discord.v1.event.TypingStartEvent.Payload
	(*VoiceServerUpdateEvent_Payload)(nil),             // 47: pylon.discord.v1.event.VoiceServerUpdateEvent.Payload
	(*InviteDeleteEvent_Payload)(nil),                  // 48: pylon.discord.v1.event.InviteDeleteEvent.Payload
	(*GuildBanAddEvent_Payload)(nil),                   // 49: pylon.discord.v1.event.GuildBanAddEvent.Payload
	(*GuildBanRemoveEvent_Payload)(nil),                // 50: pylon.discord.v1.event.GuildBanRemoveEvent.Payload
	(*GuildEmojisUpdateEvent_Payload)(nil),             // 51: pylon.discord.v1.event.GuildEmojisUpdateEvent.Payload
	(*GuildIntegrationsUpdateEvent_Payload)(nil),       // 52: pylon.discord.v1.event.GuildIntegrationsUpdateEvent.Payload
	(*WebhooksUpdateEvent_Payload)(nil),                // 53: pylon.discord.v1.event.WebhooksUpdateEvent.Payload
	(*IntegrationCreateEvent_Payload)(nil),             // 54: pylon.discord.v1.event.IntegrationCreateEvent.Payload
	(*IntegrationUpdateEvent_Payload)(nil),             // 55: pylon.discord.v1.event.IntegrationUpdateEvent.Payload
	(*IntegrationDeleteEvent_Payload)(nil),             // 56: pylon.discord.v1.event.IntegrationDeleteEvent.Payload
	(*InteractionCreateEvent_Payload)(nil),             // 57: pylon.discord.v1.event.InteractionCreateEvent.Payload
	(*model.GuildData)(nil),                            // 58: pylon.discord.v1.model.GuildData
	(*model.PresenceData)(nil),                         // 59: pylon.discord.v1.model.PresenceData
	(*model.MemberData)(nil),                           // 60: pylon.discord.v1.model.MemberData
	(*model.ChannelData)(nil),                          // 61: pylon.discord.v1.model.ChannelData
	(*model.RoleData)(nil),                             // 62: pylon.discord.v1.model.RoleData
	(*model.MessageData)(nil),                          // 63: pylon.discord.v1.model.MessageData
	(*model.VoiceStateData)(nil),                       // 64: pylon.discord.v1.model.VoiceStateData
	(*model.InviteData)(nil),                           // 65: pylon.discord.v1.model.InviteData
	(*timestamp.Timestamp)(nil),                        // 66: google.protobuf.Timestamp
	(*model.MessageData_MessageReactionEmojiData)(nil), // 67: pylon.discord.v1.model.MessageData.MessageReactionEmojiData
	(*model.UserData)(nil),                             // 68: pylon.discord.v1.model.UserData
	(*model.EmojiData)(nil),                            // 69: pylon.discord.v1.model.EmojiData
}
var file_discord_v1_event_proto_depIdxs = []int32{
	0,  // 0: pylon.discord.v1.event.GuildCreateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	58, // 1: pylon.discord.v1.event.GuildCreateEvent.payload:type_name -> pylon.discord.v1.model.GuildData
	0,  // 2: pylon.discord.v1.event.GuildUpdateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	58, // 3: pylon.discord.v1.event.GuildUpdateEvent.payload:type_name -> pylon.discord.v1.model.GuildData
	58, // 4: pylon.discord.v1.event.GuildUpdateEvent.previously_cached:type_name -> pylon.discord.v1.model.GuildData
	0,  // 5: pylon.discord.v1.event.GuildDeleteEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	58, // 6: pylon.discord.v1.event.GuildDeleteEvent.payload:type_name -> pylon.discord.v1.model.GuildData
	0,  // 7: pylon.discord.v1.event.PresenceUpdateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	59, // 8: pylon.discord.v1.event.PresenceUpdateEvent.payload:type_name -> pylon.discord.v1.model.PresenceData
	59, // 9: pylon.discord.v1.event.PresenceUpdateEvent.previously_cached:type_name -> pylon.discord.v1.model.PresenceData
	0,  // 10: pylon.discord.v1.event.GuildMemberAddEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	60, // 11: pylon.discord.v1.event.GuildMemberAddEvent.payload:type_name -> pylon.discord.v1.model.MemberData
	0,  // 12: pylon.discord.v1.event.GuildMemberUpdateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	60, // 13: pylon.discord.v1.event.GuildMemberUpdateEvent.payload:type_name -> pylon.discord.v1.model.MemberData
	60, // 14: pylon.discord.v1.event.GuildMemberUpdateEvent.previously_cached:type_name -> pylon.discord.v1.model.MemberData
	0,  // 15: pylon.discord.v1.event.GuildMemberRemoveEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	60, // 16: pylon.discord.v1.event.GuildMemberRemoveEvent.payload:type_name -> pylon.discord.v1.model.MemberData
	0,  // 17: pylon.discord.v1.event.ChannelCreateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	61, // 18: pylon.discord.v1.event.ChannelCreateEvent.payload:type_name -> pylon.discord.v1.model.ChannelData
	0,  // 19: pylon.discord.v1.event.ChannelUpdateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	61, // 20: pylon.discord.v1.event.ChannelUpdateEvent.payload:type_name -> pylon.discord.v1.model.ChannelData
	61, // 21: pylon.discord.v1.event.ChannelUpdateEvent.previously_cached:type_name -> pylon.discord.v1.model.ChannelData
	0,  // 22: pylon.discord.v1.event.ChannelDeleteEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	61, // 23: pylon.discord.v1.event.ChannelDeleteEvent.payload:type_name -> pylon.discord.v1.model.ChannelData
	0,  // 24: pylon.discord.v1.event.ChannelPinsUpdateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	39, // 25: pylon.discord.v1.event.ChannelPinsUpdateEvent.payload:type_name -> pylon.discord.v1.event.ChannelPinsUpdateEvent.Payload
	0,  // 26: pylon.discord.v1.event.GuildRoleCreateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	62, // 27: pylon.discord.v1.event.GuildRoleCreateEvent.payload:type_name -> pylon.discord.v1.model.RoleData
	0,  // 28: pylon.discord.v1.event.GuildRoleUpdateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	62, // 29: pylon.discord.v1.event.GuildRoleUpdateEvent.payload:type_name -> pylon.discord.v1.model.RoleData
	62, // 30: pylon.discord.v1.event.GuildRoleUpdateEvent.previously_cached:type_name -> pylon.discord.v1.model.RoleData
	0,  // 31: pylon.discord.v1.event.GuildRoleDeleteEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	62, // 32: pylon.discord.v1.event.GuildRoleDeleteEvent.payload:type_name -> pylon.discord.v1.model.RoleData
	0,  // 33: pylon.discord.v1.event.MessageCreateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	63, // 34: pylon.discord.v1.event.MessageCreateEvent.message:type_name -> pylon.discord.v1.model.MessageData
	0,  // 35: pylon.discord.v1.event.MessageUpdateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	63, // 36: pylon.discord.v1.event.MessageUpdateEvent.payload:type_name -> pylon.discord.v1.model.MessageData
	63, // 37: pylon.discord.v1.event.MessageUpdateEvent.previously_cached:type_name -> pylon.discord.v1.model.MessageData
	0,  // 38: pylon.discord.v1.event.MessageDeleteEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	40, // 39: pylon.discord.v1.event.MessageDeleteEvent.payload:type_name -> pylon.discord.v1.event.MessageDeleteEvent.Payload
	63, // 40: pylon.discord.v1.event.MessageDeleteEvent.previously_cached:type_name -> pylon.discord.v1.model.MessageData
	0,  // 41: pylon.discord.v1.event.MessageDeleteBulkEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	41, // 42: pylon.discord.v1.event.MessageDeleteBulkEvent.payload:type_name -> pylon.discord.v1.event.MessageDeleteBulkEvent.Payload
	0,  // 43: pylon.discord.v1.event.MessageReactionAddEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	42, // 44: pylon.discord.v1.event.MessageReactionAddEvent.payload:type_name -> pylon.discord.v1.event.MessageReactionAddEvent.Payload
	0,  // 45: pylon.discord.v1.event.MessageReactionRemoveEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	43, // 46: pylon.discord.v1.event.MessageReactionRemoveEvent.payload:type_name -> pylon.discord.v1.event.MessageReactionRemoveEvent.Payload
	0,  // 47: pylon.discord.v1.event.MessageReactionRemoveAllEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	44, // 48: pylon.discord.v1.event.MessageReactionRemoveAllEvent.payload:type_name -> pylon.discord.v1.event.MessageReactionRemoveAllEvent.Payload
	0,  // 49: pylon.discord.v1.event.MessageReactionRemoveEmojiEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	45, // 50: pylon.discord.v1.event.MessageReactionRemoveEmojiEvent.payload:type_name -> pylon.discord.v1.event.MessageReactionRemoveEmojiEvent.Payload
	0,  // 51: pylon.discord.v1.event.TypingStartEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	46, // 52: pylon.discord.v1.event.TypingStartEvent.payload:type_name -> pylon.discord.v1.event.TypingStartEvent.Payload
	0,  // 53: pylon.discord.v1.event.VoiceStateUpdateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	64, // 54: pylon.discord.v1.event.VoiceStateUpdateEvent.payload:type_name -> pylon.discord.v1.model.VoiceStateData
	64, // 55: pylon.discord.v1.event.VoiceStateUpdateEvent.previously_cached:type_name -> pylon.discord.v1.model.VoiceStateData
	0,  // 56: pylon.discord.v1.event.VoiceServerUpdateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	47, // 57: pylon.discord.v1.event.VoiceServerUpdateEvent.payload:type_name -> pylon.discord.v1.event.VoiceServerUpdateEvent.Payload
	0,  // 58: pylon.discord.v1.event.InviteCreateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	65, // 59: pylon.discord.v1.event.InviteCreateEvent.payload:type_name -> pylon.discord.v1.model.InviteData
	0,  // 60: pylon.discord.v1.event.InviteDeleteEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	48, // 61: pylon.discord.v1.event.InviteDeleteEvent.payload:type_name -> pylon.discord.v1.event.InviteDeleteEvent.Payload
	0,  // 62: pylon.discord.v1.event.GuildBanAddEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	49, // 63: pylon.discord.v1.event.GuildBanAddEvent.payload:type_name -> pylon.discord.v1.event.GuildBanAddEvent.Payload
	0,  // 64: pylon.discord.v1.event.GuildBanRemoveEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	50, // 65: pylon.discord.v1.event.GuildBanRemoveEvent.payload:type_name -> pylon.discord.v1.event.GuildBanRemoveEvent.Payload
	0,  // 66: pylon.discord.v1.event.GuildEmojisUpdateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	51, // 67: pylon.discord.v1.event.GuildEmojisUpdateEvent.payload:type_name -> pylon.discord.v1.event.GuildEmojisUpdateEvent.Payload
	51, // 68: pylon.discord.v1.event.GuildEmojisUpdateEvent.previously_cached:type_name -> pylon.discord.v1.event.GuildEmojisUpdateEvent.Payload
	0,  // 69: pylon.discord.v1.event.GuildIntegrationsUpdateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	52, // 70: pylon.discord.v1.event.GuildIntegrationsUpdateEvent.payload:type_name -> pylon.discord.v1.event.GuildIntegrationsUpdateEvent.Payload
	0,  // 71: pylon.discord.v1.event.WebhooksUpdateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	53, // 72: pylon.discord.v1.event.WebhooksUpdateEvent.payload:type_name -> pylon.discord.v1.event.WebhooksUpdateEvent.Payload
	0,  // 73: pylon.discord.v1.event.IntegrationCreateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	54, // 74: pylon.discord.v1.event.IntegrationCreateEvent.payload:type_name -> pylon.discord.v1.event.IntegrationCreateEvent.Payload
	0,  // 75: pylon.discord.v1.event.IntegrationUpdateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	55, // 76: pylon.discord.v1.event.IntegrationUpdateEvent.payload:type_name -> pylon.discord.v1.event.IntegrationUpdateEvent.Payload
	0,  // 77: pylon.discord.v1.event.IntegrationDeleteEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	56, // 78: pylon.discord.v1.event.IntegrationDeleteEvent.payload:type_name -> pylon.discord.v1.event.IntegrationDeleteEvent.Payload
	0,  // 79: pylon.discord.v1.event.InteractionCreateEvent.scope:type_name -> pylon.discord.v1.event.EventScope
	57, // 80: pylon.discord.v1.event.InteractionCreateEvent.payload:type_name -> pylon.discord.v1.event.InteractionCreateEvent.Payload
	66, // 81: pylon.discord.v1.event.ChannelPinsUpdateEvent.Payload.last_pin_timestamp:type_name -> google.protobuf.Timestamp
	67, // 82: pylon.discord.v1.event.MessageReactionAddEvent.Payload.emoji:type_name -> pylon.discord.v1.model.MessageData.MessageReactionEmojiData
	67, // 83: pylon.discord.v1.event.MessageReactionRemoveEvent.Payload.emoji:type_name -> pylon.discord.v1.model.MessageData.MessageReactionEmojiData
	67, // 84: pylon.discord.v1.event.MessageReactionRemoveEmojiEvent.Payload.emoji:type_name -> pylon.discord.v1.model.MessageData.MessageReactionEmojiData
	66, // 85: pylon.discord.v1.event.TypingStartEvent.Payload.timestamp:type_name -> google.protobuf.Timestamp
	60, // 86: pylon.discord.v1.event.TypingStartEvent.Payload.member:type_name -> pylon.discord.v1.model.MemberData
	68, // 87: pylon.discord.v1.event.GuildBanAddEvent.Payload.user:type_name -> pylon.discord.v1.model.UserData
	68, // 88: pylon.discord.v1.event.GuildBanRemoveEvent.Payload.user:type_name -> pylon.discord.v1.model.UserData
	69, // 89: pylon.discord.v1.event.GuildEmojisUpdateEvent.Payload.emojis:type_name -> pylon.discord.v1.model.EmojiData
	90, // [90:90] is the sub-list for method output_type
	90, // [90:90] is the sub-list for method input_type
	90, // [90:90] is the sub-list for extension type_name
	90, // [90:90] is the sub-list for extension extendee
	0,  // [0:90] is the sub-list for field type_name
}

func init() { file_discord_v1_event_proto_init() }
func file_discord_v1_event_proto_init() {
	if File_discord_v1_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_discord_v1_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventScope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildCreateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildDeleteEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PresenceUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberAddEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberRemoveEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelCreateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelDeleteEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelPinsUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildRoleCreateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildRoleUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildRoleDeleteEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageCreateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageDeleteEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageDeleteBulkEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactionAddEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactionRemoveEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactionRemoveAllEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactionRemoveEmojiEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypingStartEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceStateUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceServerUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteCreateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteDeleteEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildBanAddEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildBanRemoveEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEmojisUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildIntegrationsUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhooksUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationCreateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationDeleteEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionCreateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelPinsUpdateEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageDeleteEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageDeleteBulkEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactionAddEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactionRemoveEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactionRemoveAllEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactionRemoveEmojiEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypingStartEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceServerUpdateEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteDeleteEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildBanAddEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildBanRemoveEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEmojisUpdateEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildIntegrationsUpdateEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhooksUpdateEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationCreateEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationUpdateEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationDeleteEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_event_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionCreateEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_discord_v1_event_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_discord_v1_event_proto_goTypes,
		DependencyIndexes: file_discord_v1_event_proto_depIdxs,
		MessageInfos:      file_discord_v1_event_proto_msgTypes,
	}.Build()
	File_discord_v1_event_proto = out.File
	file_discord_v1_event_proto_rawDesc = nil
	file_discord_v1_event_proto_goTypes = nil
	file_discord_v1_event_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: discord/v1/rest.proto

package rest

import (
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	model "github.com/pylonbot/pylon-gateway-protobuf-go/discord/v1/model"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RestError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ErrorType:
	//	*RestError_UnknownError_
	//	*RestError_ValidationError_
	//	*RestError_ResourceNotFound_
	//	*RestError_AccessDenied_
	//	*RestError_RateLimited_
	ErrorType isRestError_ErrorType `protobuf_oneof:"error_type"`
}

func (x *RestError) Reset() {
	*x = RestError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestError) ProtoMessage() {}

func (x *RestError) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestError.ProtoReflect.Descriptor instead.
func (*RestError) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{0}
}

func (m *RestError) GetErrorType() isRestError_ErrorType {
	if m != nil {
		return m.ErrorType
	}
	return nil
}

func (x *RestError) GetUnknownError() *RestError_UnknownError {
	if x, ok := x.GetErrorType().(*RestError_UnknownError_); ok {
		return x.UnknownError
	}
	return nil
}

func (x *RestError) GetValidationError() *RestError_ValidationError {
	if x, ok := x.GetErrorType().(*RestError_ValidationError_); ok {
		return x.ValidationError
	}
	return nil
}

func (x *RestError) GetResourceNotFound() *RestError_ResourceNotFound {
	if x, ok := x.GetErrorType().(*RestError_ResourceNotFound_); ok {
		return x.ResourceNotFound
	}
	return nil
}

func (x *RestError) GetAccessDenied() *RestError_AccessDenied {
	if x, ok := x.GetErrorType().(*RestError_AccessDenied_); ok {
		return x.AccessDenied
	}
	return nil
}

func (x *RestError) GetRateLimited() *RestError_RateLimited {
	if x, ok := x.GetErrorType().(*RestError_RateLimited_); ok {
		return x.RateLimited
	}
	return nil
}

type isRestError_ErrorType interface {
	isRestError_ErrorType()
}

type RestError_UnknownError_ struct {
	UnknownError *RestError_UnknownError `protobuf:"bytes,1,opt,name=unknown_error,json=unknownError,proto3,oneof"`
}

type RestError_ValidationError_ struct {
	ValidationError *RestError_ValidationError `protobuf:"bytes,2,opt,name=validation_error,json=validationError,proto3,oneof"`
}

type RestError_ResourceNotFound_ struct {
	ResourceNotFound *RestError_ResourceNotFound `protobuf:"bytes,3,opt,name=resource_not_found,json=resourceNotFound,proto3,oneof"`
}

type RestError_AccessDenied_ struct {
	AccessDenied *RestError_AccessDenied `protobuf:"bytes,4,opt,name=access_denied,json=accessDenied,proto3,oneof"`
}

type RestError_RateLimited_ struct {
	RateLimited *RestError_RateLimited `protobuf:"bytes,5,opt,name=rate_limited,json=rateLimited,proto3,oneof"`
}

func (*RestError_UnknownError_) isRestError_ErrorType() {}

func (*RestError_ValidationError_) isRestError_ErrorType() {}

func (*RestError_ResourceNotFound_) isRestError_ErrorType() {}

func (*RestError_AccessDenied_) isRestError_ErrorType() {}

func (*RestError_RateLimited_) isRestError_ErrorType() {}

type ModifyGuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                        *wrappers.StringValue `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Region                      *wrappers.StringValue `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	VerificationLevel           *wrappers.UInt32Value `protobuf:"bytes,3,opt,name=verification_level,json=verificationLevel,proto3" json:"verification_level,omitempty"`
	DefaultMessageNotifications *wrappers.UInt32Value `protobuf:"bytes,4,opt,name=default_message_notifications,json=defaultMessageNotifications,proto3" json:"default_message_notifications,omitempty"`
	ExplicitContentFilter       *wrappers.UInt32Value `protobuf:"bytes,5,opt,name=explicit_content_filter,json=explicitContentFilter,proto3" json:"explicit_content_filter,omitempty"`
	AfkChannelId                *model.SnowflakeValue `protobuf:"bytes,6,opt,name=afk_channel_id,json=afkChannelId,proto3" json:"afk_channel_id,omitempty"`
	AfkTimeout                  *wrappers.UInt32Value `protobuf:"bytes,7,opt,name=afk_timeout,json=afkTimeout,proto3" json:"afk_timeout,omitempty"`
	Icon                        *wrappers.BytesValue  `protobuf:"bytes,8,opt,name=icon,proto3" json:"icon,omitempty"`
	OwnerId                     *model.SnowflakeValue `protobuf:"bytes,9,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Splash                      *wrappers.BytesValue  `protobuf:"bytes,10,opt,name=splash,proto3" json:"splash,omitempty"`
	Banner                      *wrappers.BytesValue  `protobuf:"bytes,11,opt,name=banner,proto3" json:"banner,omitempty"`
	SystemChannelId             *model.SnowflakeValue `protobuf:"bytes,12,opt,name=system_channel_id,json=systemChannelId,proto3" json:"system_channel_id,omitempty"`
	RulesChannelId              *model.SnowflakeValue `protobuf:"bytes,13,opt,name=rules_channel_id,json=rulesChannelId,proto3" json:"rules_channel_id,omitempty"`
	PublicUpdatesChannelId      *model.SnowflakeValue `protobuf:"bytes,14,opt,name=public_updates_channel_id,json=publicUpdatesChannelId,proto3" json:"public_updates_channel_id,omitempty"`
	PreferredLocale             *wrappers.StringValue `protobuf:"bytes,15,opt,name=preferred_locale,json=preferredLocale,proto3" json:"preferred_locale,omitempty"`
	AuditLogReason              *wrappers.StringValue `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *ModifyGuildRequest) Reset() {
	*x = ModifyGuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGuildRequest) ProtoMessage() {}

func (x *ModifyGuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGuildRequest.ProtoReflect.Descriptor instead.
func (*ModifyGuildRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{1}
}

func (x *ModifyGuildRequest) GetName() *wrappers.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ModifyGuildRequest) GetRegion() *wrappers.StringValue {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *ModifyGuildRequest) GetVerificationLevel() *wrappers.UInt32Value {
	if x != nil {
		return x.VerificationLevel
	}
	return nil
}

func (x *ModifyGuildRequest) GetDefaultMessageNotifications() *wrappers.UInt32Value {
	if x != nil {
		return x.DefaultMessageNotifications
	}
	return nil
}

func (x *ModifyGuildRequest) GetExplicitContentFilter() *wrappers.UInt32Value {
	if x != nil {
		return x.ExplicitContentFilter
	}
	return nil
}

func (x *ModifyGuildRequest) GetAfkChannelId() *model.SnowflakeValue {
	if x != nil {
		return x.AfkChannelId
	}
	return nil
}

func (x *ModifyGuildRequest) GetAfkTimeout() *wrappers.UInt32Value {
	if x != nil {
		return x.AfkTimeout
	}
	return nil
}

func (x *ModifyGuildRequest) GetIcon() *wrappers.BytesValue {
	if x != nil {
		return x.Icon
	}
	return nil
}

func (x *ModifyGuildRequest) GetOwnerId() *model.SnowflakeValue {
	if x != nil {
		return x.OwnerId
	}
	return nil
}

func (x *ModifyGuildRequest) GetSplash() *wrappers.BytesValue {
	if x != nil {
		return x.Splash
	}
	return nil
}

func (x *ModifyGuildRequest) GetBanner() *wrappers.BytesValue {
	if x != nil {
		return x.Banner
	}
	return nil
}

func (x *ModifyGuildRequest) GetSystemChannelId() *model.SnowflakeValue {
	if x != nil {
		return x.SystemChannelId
	}
	return nil
}

func (x *ModifyGuildRequest) GetRulesChannelId() *model.SnowflakeValue {
	if x != nil {
		return x.RulesChannelId
	}
	return nil
}

func (x *ModifyGuildRequest) GetPublicUpdatesChannelId() *model.SnowflakeValue {
	if x != nil {
		return x.PublicUpdatesChannelId
	}
	return nil
}

func (x *ModifyGuildRequest) GetPreferredLocale() *wrappers.StringValue {
	if x != nil {
		return x.PreferredLocale
	}
	return nil
}

func (x *ModifyGuildRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type ModifyGuildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*ModifyGuildResponse_Error
	//	*ModifyGuildResponse_Data_
	Response isModifyGuildResponse_Response `protobuf_oneof:"response"`
}

func (x *ModifyGuildResponse) Reset() {
	*x = ModifyGuildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGuildResponse) ProtoMessage() {}

func (x *ModifyGuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGuildResponse.ProtoReflect.Descriptor instead.
func (*ModifyGuildResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{2}
}

func (m *ModifyGuildResponse) GetResponse() isModifyGuildResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ModifyGuildResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*ModifyGuildResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ModifyGuildResponse) GetData() *ModifyGuildResponse_Data {
	if x, ok := x.GetResponse().(*ModifyGuildResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isModifyGuildResponse_Response interface {
	isModifyGuildResponse_Response()
}

type ModifyGuildResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ModifyGuildResponse_Data_ struct {
	Data *ModifyGuildResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*ModifyGuildResponse_Error) isModifyGuildResponse_Response() {}

func (*ModifyGuildResponse_Data_) isModifyGuildResponse_Response() {}

type CreateGuildChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                 string                                              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 model.ChannelData_ChannelType                       `protobuf:"varint,2,opt,name=type,proto3,enum=pylon.discord.v1.model.ChannelData_ChannelType" json:"type,omitempty"`
	Topic                *wrappers.StringValue                               `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	Bitrate              *wrappers.UInt32Value                               `protobuf:"bytes,4,opt,name=bitrate,proto3" json:"bitrate,omitempty"`
	UserLimit            *wrappers.UInt32Value                               `protobuf:"bytes,5,opt,name=user_limit,json=userLimit,proto3" json:"user_limit,omitempty"`
	RateLimitPerUser     *wrappers.UInt32Value                               `protobuf:"bytes,6,opt,name=rate_limit_per_user,json=rateLimitPerUser,proto3" json:"rate_limit_per_user,omitempty"`
	Position             *wrappers.UInt32Value                               `protobuf:"bytes,7,opt,name=position,proto3" json:"position,omitempty"`
	PermissionOverwrites []*model.ChannelData_ChannelPermissionOverwriteData `protobuf:"bytes,8,rep,name=permission_overwrites,json=permissionOverwrites,proto3" json:"permission_overwrites,omitempty"`
	ParentId             *model.SnowflakeValue                               `protobuf:"bytes,9,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Nsfw                 *wrappers.BoolValue                                 `protobuf:"bytes,10,opt,name=nsfw,proto3" json:"nsfw,omitempty"`
	AuditLogReason       *wrappers.StringValue                               `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *CreateGuildChannelRequest) Reset() {
	*x = CreateGuildChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGuildChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGuildChannelRequest) ProtoMessage() {}

func (x *CreateGuildChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGuildChannelRequest.ProtoReflect.Descriptor instead.
func (*CreateGuildChannelRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{3}
}

func (x *CreateGuildChannelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateGuildChannelRequest) GetType() model.ChannelData_ChannelType {
	if x != nil {
		return x.Type
	}
	return model.ChannelData_UNKNOWN
}

func (x *CreateGuildChannelRequest) GetTopic() *wrappers.StringValue {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *CreateGuildChannelRequest) GetBitrate() *wrappers.UInt32Value {
	if x != nil {
		return x.Bitrate
	}
	return nil
}

func (x *CreateGuildChannelRequest) GetUserLimit() *wrappers.UInt32Value {
	if x != nil {
		return x.UserLimit
	}
	return nil
}

func (x *CreateGuildChannelRequest) GetRateLimitPerUser() *wrappers.UInt32Value {
	if x != nil {
		return x.RateLimitPerUser
	}
	return nil
}

func (x *CreateGuildChannelRequest) GetPosition() *wrappers.UInt32Value {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *CreateGuildChannelRequest) GetPermissionOverwrites() []*model.ChannelData_ChannelPermissionOverwriteData {
	if x != nil {
		return x.PermissionOverwrites
	}
	return nil
}

func (x *CreateGuildChannelRequest) GetParentId() *model.SnowflakeValue {
	if x != nil {
		return x.ParentId
	}
	return nil
}

func (x *CreateGuildChannelRequest) GetNsfw() *wrappers.BoolValue {
	if x != nil {
		return x.Nsfw
	}
	return nil
}

func (x *CreateGuildChannelRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type CreateGuildChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*CreateGuildChannelResponse_Error
	//	*CreateGuildChannelResponse_Data_
	Response isCreateGuildChannelResponse_Response `protobuf_oneof:"response"`
}

func (x *CreateGuildChannelResponse) Reset() {
	*x = CreateGuildChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGuildChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGuildChannelResponse) ProtoMessage() {}

func (x *CreateGuildChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGuildChannelResponse.ProtoReflect.Descriptor instead.
func (*CreateGuildChannelResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{4}
}

func (m *CreateGuildChannelResponse) GetResponse() isCreateGuildChannelResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CreateGuildChannelResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*CreateGuildChannelResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CreateGuildChannelResponse) GetData() *CreateGuildChannelResponse_Data {
	if x, ok := x.GetResponse().(*CreateGuildChannelResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isCreateGuildChannelResponse_Response interface {
	isCreateGuildChannelResponse_Response()
}

type CreateGuildChannelResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CreateGuildChannelResponse_Data_ struct {
	Data *CreateGuildChannelResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*CreateGuildChannelResponse_Error) isCreateGuildChannelResponse_Response() {}

func (*CreateGuildChannelResponse_Data_) isCreateGuildChannelResponse_Response() {}

type ModifyGuildChannelPositionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelPositions []*ModifyGuildChannelPositionsRequest_ChannelPosition `protobuf:"bytes,1,rep,name=channel_positions,json=channelPositions,proto3" json:"channel_positions,omitempty"`
}

func (x *ModifyGuildChannelPositionsRequest) Reset() {
	*x = ModifyGuildChannelPositionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGuildChannelPositionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGuildChannelPositionsRequest) ProtoMessage() {}

func (x *ModifyGuildChannelPositionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGuildChannelPositionsRequest.ProtoReflect.Descriptor instead.
func (*ModifyGuildChannelPositionsRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{5}
}

func (x *ModifyGuildChannelPositionsRequest) GetChannelPositions() []*ModifyGuildChannelPositionsRequest_ChannelPosition {
	if x != nil {
		return x.ChannelPositions
	}
	return nil
}

type ModifyGuildChannelPositionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*ModifyGuildChannelPositionsResponse_Error
	//	*ModifyGuildChannelPositionsResponse_Data
	Response isModifyGuildChannelPositionsResponse_Response `protobuf_oneof:"response"`
}

func (x *ModifyGuildChannelPositionsResponse) Reset() {
	*x = ModifyGuildChannelPositionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGuildChannelPositionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGuildChannelPositionsResponse) ProtoMessage() {}

func (x *ModifyGuildChannelPositionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGuildChannelPositionsResponse.ProtoReflect.Descriptor instead.
func (*ModifyGuildChannelPositionsResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{6}
}

func (m *ModifyGuildChannelPositionsResponse) GetResponse() isModifyGuildChannelPositionsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ModifyGuildChannelPositionsResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*ModifyGuildChannelPositionsResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ModifyGuildChannelPositionsResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*ModifyGuildChannelPositionsResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isModifyGuildChannelPositionsResponse_Response interface {
	isModifyGuildChannelPositionsResponse_Response()
}

type ModifyGuildChannelPositionsResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ModifyGuildChannelPositionsResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*ModifyGuildChannelPositionsResponse_Error) isModifyGuildChannelPositionsResponse_Response() {}

func (*ModifyGuildChannelPositionsResponse_Data) isModifyGuildChannelPositionsResponse_Response() {}

type AddGuildMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      uint64                    `protobuf:"fixed64,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AccessToken string                    `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Nick        *wrappers.StringValue     `protobuf:"bytes,3,opt,name=nick,proto3" json:"nick,omitempty"`
	Roles       *model.SnowflakeListValue `protobuf:"bytes,4,opt,name=roles,proto3" json:"roles,omitempty"`
	Mute        *wrappers.BoolValue       `protobuf:"bytes,5,opt,name=mute,proto3" json:"mute,omitempty"`
	Deaf        *wrappers.BoolValue       `protobuf:"bytes,6,opt,name=deaf,proto3" json:"deaf,omitempty"`
}

func (x *AddGuildMemberRequest) Reset() {
	*x = AddGuildMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGuildMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGuildMemberRequest) ProtoMessage() {}

func (x *AddGuildMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGuildMemberRequest.ProtoReflect.Descriptor instead.
func (*AddGuildMemberRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{7}
}

func (x *AddGuildMemberRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddGuildMemberRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *AddGuildMemberRequest) GetNick() *wrappers.StringValue {
	if x != nil {
		return x.Nick
	}
	return nil
}

func (x *AddGuildMemberRequest) GetRoles() *model.SnowflakeListValue {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *AddGuildMemberRequest) GetMute() *wrappers.BoolValue {
	if x != nil {
		return x.Mute
	}
	return nil
}

func (x *AddGuildMemberRequest) GetDeaf() *wrappers.BoolValue {
	if x != nil {
		return x.Deaf
	}
	return nil
}

type AddGuildMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*AddGuildMemberResponse_Error
	//	*AddGuildMemberResponse_Data_
	Response isAddGuildMemberResponse_Response `protobuf_oneof:"response"`
}

func (x *AddGuildMemberResponse) Reset() {
	*x = AddGuildMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGuildMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGuildMemberResponse) ProtoMessage() {}

func (x *AddGuildMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGuildMemberResponse.ProtoReflect.Descriptor instead.
func (*AddGuildMemberResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{8}
}

func (m *AddGuildMemberResponse) GetResponse() isAddGuildMemberResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *AddGuildMemberResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*AddGuildMemberResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *AddGuildMemberResponse) GetData() *AddGuildMemberResponse_Data {
	if x, ok := x.GetResponse().(*AddGuildMemberResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isAddGuildMemberResponse_Response interface {
	isAddGuildMemberResponse_Response()
}

type AddGuildMemberResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type AddGuildMemberResponse_Data_ struct {
	Data *AddGuildMemberResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*AddGuildMemberResponse_Error) isAddGuildMemberResponse_Response() {}

func (*AddGuildMemberResponse_Data_) isAddGuildMemberResponse_Response() {}

type ModifyGuildMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         uint64                    `protobuf:"fixed64,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Nick           *wrappers.StringValue     `protobuf:"bytes,2,opt,name=nick,proto3" json:"nick,omitempty"`
	Roles          *model.SnowflakeListValue `protobuf:"bytes,3,opt,name=roles,proto3" json:"roles,omitempty"`
	Mute           *wrappers.BoolValue       `protobuf:"bytes,4,opt,name=mute,proto3" json:"mute,omitempty"`
	Deaf           *wrappers.BoolValue       `protobuf:"bytes,5,opt,name=deaf,proto3" json:"deaf,omitempty"`
	ChannelId      *model.SnowflakeValue     `protobuf:"bytes,6,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	AuditLogReason *wrappers.StringValue     `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *ModifyGuildMemberRequest) Reset() {
	*x = ModifyGuildMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGuildMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGuildMemberRequest) ProtoMessage() {}

func (x *ModifyGuildMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGuildMemberRequest.ProtoReflect.Descriptor instead.
func (*ModifyGuildMemberRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{9}
}

func (x *ModifyGuildMemberRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ModifyGuildMemberRequest) GetNick() *wrappers.StringValue {
	if x != nil {
		return x.Nick
	}
	return nil
}

func (x *ModifyGuildMemberRequest) GetRoles() *model.SnowflakeListValue {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *ModifyGuildMemberRequest) GetMute() *wrappers.BoolValue {
	if x != nil {
		return x.Mute
	}
	return nil
}

func (x *ModifyGuildMemberRequest) GetDeaf() *wrappers.BoolValue {
	if x != nil {
		return x.Deaf
	}
	return nil
}

func (x *ModifyGuildMemberRequest) GetChannelId() *model.SnowflakeValue {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

func (x *ModifyGuildMemberRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type ModifyGuildMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*ModifyGuildMemberResponse_Error
	//	*ModifyGuildMemberResponse_Data
	Response isModifyGuildMemberResponse_Response `protobuf_oneof:"response"`
}

func (x *ModifyGuildMemberResponse) Reset() {
	*x = ModifyGuildMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGuildMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGuildMemberResponse) ProtoMessage() {}

func (x *ModifyGuildMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGuildMemberResponse.ProtoReflect.Descriptor instead.
func (*ModifyGuildMemberResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{10}
}

func (m *ModifyGuildMemberResponse) GetResponse() isModifyGuildMemberResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ModifyGuildMemberResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*ModifyGuildMemberResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ModifyGuildMemberResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*ModifyGuildMemberResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isModifyGuildMemberResponse_Response interface {
	isModifyGuildMemberResponse_Response()
}

type ModifyGuildMemberResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ModifyGuildMemberResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*ModifyGuildMemberResponse_Error) isModifyGuildMemberResponse_Response() {}

func (*ModifyGuildMemberResponse_Data) isModifyGuildMemberResponse_Response() {}

type ModifyCurrentUserNickRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nick *wrappers.StringValue `protobuf:"bytes,1,opt,name=nick,proto3" json:"nick,omitempty"`
}

func (x *ModifyCurrentUserNickRequest) Reset() {
	*x = ModifyCurrentUserNickRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyCurrentUserNickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyCurrentUserNickRequest) ProtoMessage() {}

func (x *ModifyCurrentUserNickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyCurrentUserNickRequest.ProtoReflect.Descriptor instead.
func (*ModifyCurrentUserNickRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{11}
}

func (x *ModifyCurrentUserNickRequest) GetNick() *wrappers.StringValue {
	if x != nil {
		return x.Nick
	}
	return nil
}

type ModifyCurrentUserNickResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*ModifyCurrentUserNickResponse_Error
	//	*ModifyCurrentUserNickResponse_Data
	Response isModifyCurrentUserNickResponse_Response `protobuf_oneof:"response"`
}

func (x *ModifyCurrentUserNickResponse) Reset() {
	*x = ModifyCurrentUserNickResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyCurrentUserNickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyCurrentUserNickResponse) ProtoMessage() {}

func (x *ModifyCurrentUserNickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyCurrentUserNickResponse.ProtoReflect.Descriptor instead.
func (*ModifyCurrentUserNickResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{12}
}

func (m *ModifyCurrentUserNickResponse) GetResponse() isModifyCurrentUserNickResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ModifyCurrentUserNickResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*ModifyCurrentUserNickResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ModifyCurrentUserNickResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*ModifyCurrentUserNickResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isModifyCurrentUserNickResponse_Response interface {
	isModifyCurrentUserNickResponse_Response()
}

type ModifyCurrentUserNickResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ModifyCurrentUserNickResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*ModifyCurrentUserNickResponse_Error) isModifyCurrentUserNickResponse_Response() {}

func (*ModifyCurrentUserNickResponse_Data) isModifyCurrentUserNickResponse_Response() {}

type AddGuildMemberRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         uint64                `protobuf:"fixed64,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleId         uint64                `protobuf:"fixed64,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	AuditLogReason *wrappers.StringValue `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *AddGuildMemberRoleRequest) Reset() {
	*x = AddGuildMemberRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGuildMemberRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGuildMemberRoleRequest) ProtoMessage() {}

func (x *AddGuildMemberRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGuildMemberRoleRequest.ProtoReflect.Descriptor instead.
func (*AddGuildMemberRoleRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{13}
}

func (x *AddGuildMemberRoleRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddGuildMemberRoleRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *AddGuildMemberRoleRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type AddGuildMemberRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*AddGuildMemberRoleResponse_Error
	//	*AddGuildMemberRoleResponse_Data
	Response isAddGuildMemberRoleResponse_Response `protobuf_oneof:"response"`
}

func (x *AddGuildMemberRoleResponse) Reset() {
	*x = AddGuildMemberRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGuildMemberRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGuildMemberRoleResponse) ProtoMessage() {}

func (x *AddGuildMemberRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGuildMemberRoleResponse.ProtoReflect.Descriptor instead.
func (*AddGuildMemberRoleResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{14}
}

func (m *AddGuildMemberRoleResponse) GetResponse() isAddGuildMemberRoleResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *AddGuildMemberRoleResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*AddGuildMemberRoleResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *AddGuildMemberRoleResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*AddGuildMemberRoleResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isAddGuildMemberRoleResponse_Response interface {
	isAddGuildMemberRoleResponse_Response()
}

type AddGuildMemberRoleResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type AddGuildMemberRoleResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*AddGuildMemberRoleResponse_Error) isAddGuildMemberRoleResponse_Response() {}

func (*AddGuildMemberRoleResponse_Data) isAddGuildMemberRoleResponse_Response() {}

type RemoveGuildMemberRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         uint64                `protobuf:"fixed64,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleId         uint64                `protobuf:"fixed64,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	AuditLogReason *wrappers.StringValue `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *RemoveGuildMemberRoleRequest) Reset() {
	*x = RemoveGuildMemberRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGuildMemberRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGuildMemberRoleRequest) ProtoMessage() {}

func (x *RemoveGuildMemberRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGuildMemberRoleRequest.ProtoReflect.Descriptor instead.
func (*RemoveGuildMemberRoleRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{15}
}

func (x *RemoveGuildMemberRoleRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RemoveGuildMemberRoleRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RemoveGuildMemberRoleRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type RemoveGuildMemberRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*RemoveGuildMemberRoleResponse_Error
	//	*RemoveGuildMemberRoleResponse_Data
	Response isRemoveGuildMemberRoleResponse_Response `protobuf_oneof:"response"`
}

func (x *RemoveGuildMemberRoleResponse) Reset() {
	*x = RemoveGuildMemberRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGuildMemberRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGuildMemberRoleResponse) ProtoMessage() {}

func (x *RemoveGuildMemberRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGuildMemberRoleResponse.ProtoReflect.Descriptor instead.
func (*RemoveGuildMemberRoleResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{16}
}

func (m *RemoveGuildMemberRoleResponse) GetResponse() isRemoveGuildMemberRoleResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *RemoveGuildMemberRoleResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*RemoveGuildMemberRoleResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *RemoveGuildMemberRoleResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*RemoveGuildMemberRoleResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isRemoveGuildMemberRoleResponse_Response interface {
	isRemoveGuildMemberRoleResponse_Response()
}

type RemoveGuildMemberRoleResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type RemoveGuildMemberRoleResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*RemoveGuildMemberRoleResponse_Error) isRemoveGuildMemberRoleResponse_Response() {}

func (*RemoveGuildMemberRoleResponse_Data) isRemoveGuildMemberRoleResponse_Response() {}

type RemoveGuildMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         uint64                `protobuf:"fixed64,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AuditLogReason *wrappers.StringValue `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *RemoveGuildMemberRequest) Reset() {
	*x = RemoveGuildMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGuildMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGuildMemberRequest) ProtoMessage() {}

func (x *RemoveGuildMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGuildMemberRequest.ProtoReflect.Descriptor instead.
func (*RemoveGuildMemberRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{17}
}

func (x *RemoveGuildMemberRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RemoveGuildMemberRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type RemoveGuildMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*RemoveGuildMemberResponse_Error
	//	*RemoveGuildMemberResponse_Data
	Response isRemoveGuildMemberResponse_Response `protobuf_oneof:"response"`
}

func (x *RemoveGuildMemberResponse) Reset() {
	*x = RemoveGuildMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGuildMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGuildMemberResponse) ProtoMessage() {}

func (x *RemoveGuildMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGuildMemberResponse.ProtoReflect.Descriptor instead.
func (*RemoveGuildMemberResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{18}
}

func (m *RemoveGuildMemberResponse) GetResponse() isRemoveGuildMemberResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *RemoveGuildMemberResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*RemoveGuildMemberResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *RemoveGuildMemberResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*RemoveGuildMemberResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isRemoveGuildMemberResponse_Response interface {
	isRemoveGuildMemberResponse_Response()
}

type RemoveGuildMemberResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type RemoveGuildMemberResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*RemoveGuildMemberResponse_Error) isRemoveGuildMemberResponse_Response() {}

func (*RemoveGuildMemberResponse_Data) isRemoveGuildMemberResponse_Response() {}

type GetGuildBansRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"fixed64,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetGuildBansRequest) Reset() {
	*x = GetGuildBansRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuildBansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildBansRequest) ProtoMessage() {}

func (x *GetGuildBansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildBansRequest.ProtoReflect.Descriptor instead.
func (*GetGuildBansRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{19}
}

func (x *GetGuildBansRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetGuildBansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetGuildBansResponse_Error
	//	*GetGuildBansResponse_Data_
	Response isGetGuildBansResponse_Response `protobuf_oneof:"response"`
}

func (x *GetGuildBansResponse) Reset() {
	*x = GetGuildBansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuildBansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildBansResponse) ProtoMessage() {}

func (x *GetGuildBansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildBansResponse.ProtoReflect.Descriptor instead.
func (*GetGuildBansResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{20}
}

func (m *GetGuildBansResponse) GetResponse() isGetGuildBansResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetGuildBansResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*GetGuildBansResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetGuildBansResponse) GetData() *GetGuildBansResponse_Data {
	if x, ok := x.GetResponse().(*GetGuildBansResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isGetGuildBansResponse_Response interface {
	isGetGuildBansResponse_Response()
}

type GetGuildBansResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetGuildBansResponse_Data_ struct {
	Data *GetGuildBansResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetGuildBansResponse_Error) isGetGuildBansResponse_Response() {}

func (*GetGuildBansResponse_Data_) isGetGuildBansResponse_Response() {}

type GetGuildBanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"fixed64,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetGuildBanRequest) Reset() {
	*x = GetGuildBanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuildBanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildBanRequest) ProtoMessage() {}

func (x *GetGuildBanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildBanRequest.ProtoReflect.Descriptor instead.
func (*GetGuildBanRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{21}
}

func (x *GetGuildBanRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetGuildBanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetGuildBanResponse_Error
	//	*GetGuildBanResponse_Data_
	Response isGetGuildBanResponse_Response `protobuf_oneof:"response"`
}

func (x *GetGuildBanResponse) Reset() {
	*x = GetGuildBanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuildBanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildBanResponse) ProtoMessage() {}

func (x *GetGuildBanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildBanResponse.ProtoReflect.Descriptor instead.
func (*GetGuildBanResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{22}
}

func (m *GetGuildBanResponse) GetResponse() isGetGuildBanResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetGuildBanResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*GetGuildBanResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetGuildBanResponse) GetData() *GetGuildBanResponse_Data {
	if x, ok := x.GetResponse().(*GetGuildBanResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isGetGuildBanResponse_Response interface {
	isGetGuildBanResponse_Response()
}

type GetGuildBanResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetGuildBanResponse_Data_ struct {
	Data *GetGuildBanResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetGuildBanResponse_Error) isGetGuildBanResponse_Response() {}

func (*GetGuildBanResponse_Data_) isGetGuildBanResponse_Response() {}

type CreateGuildBanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            uint64                `protobuf:"fixed64,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeleteMessageDays *wrappers.UInt32Value `protobuf:"bytes,2,opt,name=delete_message_days,json=deleteMessageDays,proto3" json:"delete_message_days,omitempty"`
	AuditLogReason    *wrappers.StringValue `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *CreateGuildBanRequest) Reset() {
	*x = CreateGuildBanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGuildBanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGuildBanRequest) ProtoMessage() {}

func (x *CreateGuildBanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGuildBanRequest.ProtoReflect.Descriptor instead.
func (*CreateGuildBanRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{23}
}

func (x *CreateGuildBanRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateGuildBanRequest) GetDeleteMessageDays() *wrappers.UInt32Value {
	if x != nil {
		return x.DeleteMessageDays
	}
	return nil
}

func (x *CreateGuildBanRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type CreateGuildBanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*CreateGuildBanResponse_Error
	//	*CreateGuildBanResponse_Data
	Response isCreateGuildBanResponse_Response `protobuf_oneof:"response"`
}

func (x *CreateGuildBanResponse) Reset() {
	*x = CreateGuildBanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGuildBanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGuildBanResponse) ProtoMessage() {}

func (x *CreateGuildBanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGuildBanResponse.ProtoReflect.Descriptor instead.
func (*CreateGuildBanResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{24}
}

func (m *CreateGuildBanResponse) GetResponse() isCreateGuildBanResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CreateGuildBanResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*CreateGuildBanResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CreateGuildBanResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*CreateGuildBanResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isCreateGuildBanResponse_Response interface {
	isCreateGuildBanResponse_Response()
}

type CreateGuildBanResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CreateGuildBanResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*CreateGuildBanResponse_Error) isCreateGuildBanResponse_Response() {}

func (*CreateGuildBanResponse_Data) isCreateGuildBanResponse_Response() {}

type RemoveGuildBanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         uint64                `protobuf:"fixed64,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AuditLogReason *wrappers.StringValue `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *RemoveGuildBanRequest) Reset() {
	*x = RemoveGuildBanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGuildBanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGuildBanRequest) ProtoMessage() {}

func (x *RemoveGuildBanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGuildBanRequest.ProtoReflect.Descriptor instead.
func (*RemoveGuildBanRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{25}
}

func (x *RemoveGuildBanRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RemoveGuildBanRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type RemoveGuildBanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*RemoveGuildBanResponse_Error
	//	*RemoveGuildBanResponse_Data
	Response isRemoveGuildBanResponse_Response `protobuf_oneof:"response"`
}

func (x *RemoveGuildBanResponse) Reset() {
	*x = RemoveGuildBanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGuildBanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGuildBanResponse) ProtoMessage() {}

func (x *RemoveGuildBanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGuildBanResponse.ProtoReflect.Descriptor instead.
func (*RemoveGuildBanResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{26}
}

func (m *RemoveGuildBanResponse) GetResponse() isRemoveGuildBanResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *RemoveGuildBanResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*RemoveGuildBanResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *RemoveGuildBanResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*RemoveGuildBanResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isRemoveGuildBanResponse_Response interface {
	isRemoveGuildBanResponse_Response()
}

type RemoveGuildBanResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type RemoveGuildBanResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*RemoveGuildBanResponse_Error) isRemoveGuildBanResponse_Response() {}

func (*RemoveGuildBanResponse_Data) isRemoveGuildBanResponse_Response() {}

type CreateGuildRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           *wrappers.StringValue   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Permissions    *model.PermissionsValue `protobuf:"bytes,2,opt,name=permissions,proto3" json:"permissions,omitempty"`
	Color          *wrappers.UInt32Value   `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Hoist          *wrappers.BoolValue     `protobuf:"bytes,4,opt,name=hoist,proto3" json:"hoist,omitempty"`
	Mentionable    *wrappers.BoolValue     `protobuf:"bytes,5,opt,name=mentionable,proto3" json:"mentionable,omitempty"`
	AuditLogReason *wrappers.StringValue   `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *CreateGuildRoleRequest) Reset() {
	*x = CreateGuildRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGuildRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGuildRoleRequest) ProtoMessage() {}

func (x *CreateGuildRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGuildRoleRequest.ProtoReflect.Descriptor instead.
func (*CreateGuildRoleRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{27}
}

func (x *CreateGuildRoleRequest) GetName() *wrappers.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *CreateGuildRoleRequest) GetPermissions() *model.PermissionsValue {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *CreateGuildRoleRequest) GetColor() *wrappers.UInt32Value {
	if x != nil {
		return x.Color
	}
	return nil
}

func (x *CreateGuildRoleRequest) GetHoist() *wrappers.BoolValue {
	if x != nil {
		return x.Hoist
	}
	return nil
}

func (x *CreateGuildRoleRequest) GetMentionable() *wrappers.BoolValue {
	if x != nil {
		return x.Mentionable
	}
	return nil
}

func (x *CreateGuildRoleRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type CreateGuildRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*CreateGuildRoleResponse_Error
	//	*CreateGuildRoleResponse_Data_
	Response isCreateGuildRoleResponse_Response `protobuf_oneof:"response"`
}

func (x *CreateGuildRoleResponse) Reset() {
	*x = CreateGuildRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGuildRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGuildRoleResponse) ProtoMessage() {}

func (x *CreateGuildRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGuildRoleResponse.ProtoReflect.Descriptor instead.
func (*CreateGuildRoleResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{28}
}

func (m *CreateGuildRoleResponse) GetResponse() isCreateGuildRoleResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CreateGuildRoleResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*CreateGuildRoleResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CreateGuildRoleResponse) GetData() *CreateGuildRoleResponse_Data {
	if x, ok := x.GetResponse().(*CreateGuildRoleResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isCreateGuildRoleResponse_Response interface {
	isCreateGuildRoleResponse_Response()
}

type CreateGuildRoleResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CreateGuildRoleResponse_Data_ struct {
	Data *CreateGuildRoleResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*CreateGuildRoleResponse_Error) isCreateGuildRoleResponse_Response() {}

func (*CreateGuildRoleResponse_Data_) isCreateGuildRoleResponse_Response() {}

type ModifyGuildRolePositionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RolePositions []*ModifyGuildRolePositionsRequest_RolePosition `protobuf:"bytes,1,rep,name=role_positions,json=rolePositions,proto3" json:"role_positions,omitempty"`
}

func (x *ModifyGuildRolePositionsRequest) Reset() {
	*x = ModifyGuildRolePositionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGuildRolePositionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGuildRolePositionsRequest) ProtoMessage() {}

func (x *ModifyGuildRolePositionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGuildRolePositionsRequest.ProtoReflect.Descriptor instead.
func (*ModifyGuildRolePositionsRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{29}
}

func (x *ModifyGuildRolePositionsRequest) GetRolePositions() []*ModifyGuildRolePositionsRequest_RolePosition {
	if x != nil {
		return x.RolePositions
	}
	return nil
}

type ModifyGuildRolePositionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*ModifyGuildRolePositionsResponse_Error
	//	*ModifyGuildRolePositionsResponse_Data_
	Response isModifyGuildRolePositionsResponse_Response `protobuf_oneof:"response"`
}

func (x *ModifyGuildRolePositionsResponse) Reset() {
	*x = ModifyGuildRolePositionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGuildRolePositionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGuildRolePositionsResponse) ProtoMessage() {}

func (x *ModifyGuildRolePositionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGuildRolePositionsResponse.ProtoReflect.Descriptor instead.
func (*ModifyGuildRolePositionsResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{30}
}

func (m *ModifyGuildRolePositionsResponse) GetResponse() isModifyGuildRolePositionsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ModifyGuildRolePositionsResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*ModifyGuildRolePositionsResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ModifyGuildRolePositionsResponse) GetData() *ModifyGuildRolePositionsResponse_Data {
	if x, ok := x.GetResponse().(*ModifyGuildRolePositionsResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isModifyGuildRolePositionsResponse_Response interface {
	isModifyGuildRolePositionsResponse_Response()
}

type ModifyGuildRolePositionsResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ModifyGuildRolePositionsResponse_Data_ struct {
	Data *ModifyGuildRolePositionsResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*ModifyGuildRolePositionsResponse_Error) isModifyGuildRolePositionsResponse_Response() {}

func (*ModifyGuildRolePositionsResponse_Data_) isModifyGuildRolePositionsResponse_Response() {}

type ModifyGuildRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId         uint64                  `protobuf:"fixed64,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Name           *wrappers.StringValue   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Permissions    *model.PermissionsValue `protobuf:"bytes,3,opt,name=permissions,proto3" json:"permissions,omitempty"`
	Color          *wrappers.UInt32Value   `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	Hoist          *wrappers.BoolValue     `protobuf:"bytes,5,opt,name=hoist,proto3" json:"hoist,omitempty"`
	Mentionable    *wrappers.BoolValue     `protobuf:"bytes,6,opt,name=mentionable,proto3" json:"mentionable,omitempty"`
	AuditLogReason *wrappers.StringValue   `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *ModifyGuildRoleRequest) Reset() {
	*x = ModifyGuildRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGuildRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGuildRoleRequest) ProtoMessage() {}

func (x *ModifyGuildRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGuildRoleRequest.ProtoReflect.Descriptor instead.
func (*ModifyGuildRoleRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{31}
}

func (x *ModifyGuildRoleRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *ModifyGuildRoleRequest) GetName() *wrappers.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ModifyGuildRoleRequest) GetPermissions() *model.PermissionsValue {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *ModifyGuildRoleRequest) GetColor() *wrappers.UInt32Value {
	if x != nil {
		return x.Color
	}
	return nil
}

func (x *ModifyGuildRoleRequest) GetHoist() *wrappers.BoolValue {
	if x != nil {
		return x.Hoist
	}
	return nil
}

func (x *ModifyGuildRoleRequest) GetMentionable() *wrappers.BoolValue {
	if x != nil {
		return x.Mentionable
	}
	return nil
}

func (x *ModifyGuildRoleRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type ModifyGuildRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*ModifyGuildRoleResponse_Error
	//	*ModifyGuildRoleResponse_Data_
	Response isModifyGuildRoleResponse_Response `protobuf_oneof:"response"`
}

func (x *ModifyGuildRoleResponse) Reset() {
	*x = ModifyGuildRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGuildRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGuildRoleResponse) ProtoMessage() {}

func (x *ModifyGuildRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGuildRoleResponse.ProtoReflect.Descriptor instead.
func (*ModifyGuildRoleResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{32}
}

func (m *ModifyGuildRoleResponse) GetResponse() isModifyGuildRoleResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ModifyGuildRoleResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*ModifyGuildRoleResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ModifyGuildRoleResponse) GetData() *ModifyGuildRoleResponse_Data {
	if x, ok := x.GetResponse().(*ModifyGuildRoleResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isModifyGuildRoleResponse_Response interface {
	isModifyGuildRoleResponse_Response()
}

type ModifyGuildRoleResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ModifyGuildRoleResponse_Data_ struct {
	Data *ModifyGuildRoleResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*ModifyGuildRoleResponse_Error) isModifyGuildRoleResponse_Response() {}

func (*ModifyGuildRoleResponse_Data_) isModifyGuildRoleResponse_Response() {}

type DeleteGuildRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId         uint64                `protobuf:"fixed64,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	AuditLogReason *wrappers.StringValue `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *DeleteGuildRoleRequest) Reset() {
	*x = DeleteGuildRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGuildRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGuildRoleRequest) ProtoMessage() {}

func (x *DeleteGuildRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGuildRoleRequest.ProtoReflect.Descriptor instead.
func (*DeleteGuildRoleRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteGuildRoleRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *DeleteGuildRoleRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type DeleteGuildRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*DeleteGuildRoleResponse_Error
	//	*DeleteGuildRoleResponse_Data
	Response isDeleteGuildRoleResponse_Response `protobuf_oneof:"response"`
}

func (x *DeleteGuildRoleResponse) Reset() {
	*x = DeleteGuildRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGuildRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGuildRoleResponse) ProtoMessage() {}

func (x *DeleteGuildRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGuildRoleResponse.ProtoReflect.Descriptor instead.
func (*DeleteGuildRoleResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{34}
}

func (m *DeleteGuildRoleResponse) GetResponse() isDeleteGuildRoleResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *DeleteGuildRoleResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*DeleteGuildRoleResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *DeleteGuildRoleResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*DeleteGuildRoleResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isDeleteGuildRoleResponse_Response interface {
	isDeleteGuildRoleResponse_Response()
}

type DeleteGuildRoleResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type DeleteGuildRoleResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*DeleteGuildRoleResponse_Error) isDeleteGuildRoleResponse_Response() {}

func (*DeleteGuildRoleResponse_Data) isDeleteGuildRoleResponse_Response() {}

type GetGuildPruneCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Days         *wrappers.UInt32Value     `protobuf:"bytes,1,opt,name=days,proto3" json:"days,omitempty"`
	IncludeRoles *model.SnowflakeListValue `protobuf:"bytes,2,opt,name=include_roles,json=includeRoles,proto3" json:"include_roles,omitempty"`
}

func (x *GetGuildPruneCountRequest) Reset() {
	*x = GetGuildPruneCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuildPruneCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildPruneCountRequest) ProtoMessage() {}

func (x *GetGuildPruneCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildPruneCountRequest.ProtoReflect.Descriptor instead.
func (*GetGuildPruneCountRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{35}
}

func (x *GetGuildPruneCountRequest) GetDays() *wrappers.UInt32Value {
	if x != nil {
		return x.Days
	}
	return nil
}

func (x *GetGuildPruneCountRequest) GetIncludeRoles() *model.SnowflakeListValue {
	if x != nil {
		return x.IncludeRoles
	}
	return nil
}

type GetGuildPruneCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetGuildPruneCountResponse_Error
	//	*GetGuildPruneCountResponse_Data
	Response isGetGuildPruneCountResponse_Response `protobuf_oneof:"response"`
}

func (x *GetGuildPruneCountResponse) Reset() {
	*x = GetGuildPruneCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuildPruneCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildPruneCountResponse) ProtoMessage() {}

func (x *GetGuildPruneCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildPruneCountResponse.ProtoReflect.Descriptor instead.
func (*GetGuildPruneCountResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{36}
}

func (m *GetGuildPruneCountResponse) GetResponse() isGetGuildPruneCountResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetGuildPruneCountResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*GetGuildPruneCountResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetGuildPruneCountResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*GetGuildPruneCountResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isGetGuildPruneCountResponse_Response interface {
	isGetGuildPruneCountResponse_Response()
}

type GetGuildPruneCountResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetGuildPruneCountResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetGuildPruneCountResponse_Error) isGetGuildPruneCountResponse_Response() {}

func (*GetGuildPruneCountResponse_Data) isGetGuildPruneCountResponse_Response() {}

type BeginGuildPruneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Days              *wrappers.UInt32Value     `protobuf:"bytes,1,opt,name=days,proto3" json:"days,omitempty"`
	IncludeRoles      *model.SnowflakeListValue `protobuf:"bytes,2,opt,name=include_roles,json=includeRoles,proto3" json:"include_roles,omitempty"`
	ComputePruneCount *wrappers.BoolValue       `protobuf:"bytes,3,opt,name=compute_prune_count,json=computePruneCount,proto3" json:"compute_prune_count,omitempty"`
	AuditLogReason    *wrappers.StringValue     `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *BeginGuildPruneRequest) Reset() {
	*x = BeginGuildPruneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginGuildPruneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginGuildPruneRequest) ProtoMessage() {}

func (x *BeginGuildPruneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginGuildPruneRequest.ProtoReflect.Descriptor instead.
func (*BeginGuildPruneRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{37}
}

func (x *BeginGuildPruneRequest) GetDays() *wrappers.UInt32Value {
	if x != nil {
		return x.Days
	}
	return nil
}

func (x *BeginGuildPruneRequest) GetIncludeRoles() *model.SnowflakeListValue {
	if x != nil {
		return x.IncludeRoles
	}
	return nil
}

func (x *BeginGuildPruneRequest) GetComputePruneCount() *wrappers.BoolValue {
	if x != nil {
		return x.ComputePruneCount
	}
	return nil
}

func (x *BeginGuildPruneRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type BeginGuildPruneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*BeginGuildPruneResponse_Error
	//	*BeginGuildPruneResponse_Data
	Response isBeginGuildPruneResponse_Response `protobuf_oneof:"response"`
}

func (x *BeginGuildPruneResponse) Reset() {
	*x = BeginGuildPruneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginGuildPruneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginGuildPruneResponse) ProtoMessage() {}

func (x *BeginGuildPruneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginGuildPruneResponse.ProtoReflect.Descriptor instead.
func (*BeginGuildPruneResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{38}
}

func (m *BeginGuildPruneResponse) GetResponse() isBeginGuildPruneResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *BeginGuildPruneResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*BeginGuildPruneResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *BeginGuildPruneResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*BeginGuildPruneResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isBeginGuildPruneResponse_Response interface {
	isBeginGuildPruneResponse_Response()
}

type BeginGuildPruneResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type BeginGuildPruneResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*BeginGuildPruneResponse_Error) isBeginGuildPruneResponse_Response() {}

func (*BeginGuildPruneResponse_Data) isBeginGuildPruneResponse_Response() {}

type GetGuildVoiceRegionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetGuildVoiceRegionsRequest) Reset() {
	*x = GetGuildVoiceRegionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuildVoiceRegionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildVoiceRegionsRequest) ProtoMessage() {}

func (x *GetGuildVoiceRegionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildVoiceRegionsRequest.ProtoReflect.Descriptor instead.
func (*GetGuildVoiceRegionsRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{39}
}

type GetGuildVoiceRegionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetGuildVoiceRegionsResponse_Error
	//	*GetGuildVoiceRegionsResponse_Data_
	Response isGetGuildVoiceRegionsResponse_Response `protobuf_oneof:"response"`
}

func (x *GetGuildVoiceRegionsResponse) Reset() {
	*x = GetGuildVoiceRegionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuildVoiceRegionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildVoiceRegionsResponse) ProtoMessage() {}

func (x *GetGuildVoiceRegionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildVoiceRegionsResponse.ProtoReflect.Descriptor instead.
func (*GetGuildVoiceRegionsResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{40}
}

func (m *GetGuildVoiceRegionsResponse) GetResponse() isGetGuildVoiceRegionsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetGuildVoiceRegionsResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*GetGuildVoiceRegionsResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetGuildVoiceRegionsResponse) GetData() *GetGuildVoiceRegionsResponse_Data {
	if x, ok := x.GetResponse().(*GetGuildVoiceRegionsResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isGetGuildVoiceRegionsResponse_Response interface {
	isGetGuildVoiceRegionsResponse_Response()
}

type GetGuildVoiceRegionsResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetGuildVoiceRegionsResponse_Data_ struct {
	Data *GetGuildVoiceRegionsResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetGuildVoiceRegionsResponse_Error) isGetGuildVoiceRegionsResponse_Response() {}

func (*GetGuildVoiceRegionsResponse_Data_) isGetGuildVoiceRegionsResponse_Response() {}

type GetGuildInvitesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetGuildInvitesRequest) Reset() {
	*x = GetGuildInvitesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuildInvitesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildInvitesRequest) ProtoMessage() {}

func (x *GetGuildInvitesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildInvitesRequest.ProtoReflect.Descriptor instead.
func (*GetGuildInvitesRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{41}
}

type GetGuildInvitesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetGuildInvitesResponse_Error
	//	*GetGuildInvitesResponse_Data_
	Response isGetGuildInvitesResponse_Response `protobuf_oneof:"response"`
}

func (x *GetGuildInvitesResponse) Reset() {
	*x = GetGuildInvitesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuildInvitesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildInvitesResponse) ProtoMessage() {}

func (x *GetGuildInvitesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildInvitesResponse.ProtoReflect.Descriptor instead.
func (*GetGuildInvitesResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{42}
}

func (m *GetGuildInvitesResponse) GetResponse() isGetGuildInvitesResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetGuildInvitesResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*GetGuildInvitesResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetGuildInvitesResponse) GetData() *GetGuildInvitesResponse_Data {
	if x, ok := x.GetResponse().(*GetGuildInvitesResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isGetGuildInvitesResponse_Response interface {
	isGetGuildInvitesResponse_Response()
}

type GetGuildInvitesResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetGuildInvitesResponse_Data_ struct {
	Data *GetGuildInvitesResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetGuildInvitesResponse_Error) isGetGuildInvitesResponse_Response() {}

func (*GetGuildInvitesResponse_Data_) isGetGuildInvitesResponse_Response() {}

type ModifyChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId            uint64                                                 `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Name                 *wrappers.StringValue                                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                 model.ChannelData_ChannelType                          `protobuf:"varint,3,opt,name=type,proto3,enum=pylon.discord.v1.model.ChannelData_ChannelType" json:"type,omitempty"`
	Position             *wrappers.UInt32Value                                  `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	Topic                *wrappers.StringValue                                  `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
	Nsfw                 *wrappers.BoolValue                                    `protobuf:"bytes,6,opt,name=nsfw,proto3" json:"nsfw,omitempty"`
	RateLimitPerUser     *wrappers.UInt32Value                                  `protobuf:"bytes,7,opt,name=rate_limit_per_user,json=rateLimitPerUser,proto3" json:"rate_limit_per_user,omitempty"`
	Bitrate              *wrappers.UInt32Value                                  `protobuf:"bytes,8,opt,name=bitrate,proto3" json:"bitrate,omitempty"`
	UserLimit            *wrappers.UInt32Value                                  `protobuf:"bytes,9,opt,name=user_limit,json=userLimit,proto3" json:"user_limit,omitempty"`
	PermissionOverwrites *ModifyChannelRequest_ChannelPermissionOverwritesValue `protobuf:"bytes,10,opt,name=permission_overwrites,json=permissionOverwrites,proto3" json:"permission_overwrites,omitempty"`
	ParentId             *model.SnowflakeValue                                  `protobuf:"bytes,11,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	AuditLogReason       *wrappers.StringValue                                  `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *ModifyChannelRequest) Reset() {
	*x = ModifyChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyChannelRequest) ProtoMessage() {}

func (x *ModifyChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyChannelRequest.ProtoReflect.Descriptor instead.
func (*ModifyChannelRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{43}
}

func (x *ModifyChannelRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *ModifyChannelRequest) GetName() *wrappers.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ModifyChannelRequest) GetType() model.ChannelData_ChannelType {
	if x != nil {
		return x.Type
	}
	return model.ChannelData_UNKNOWN
}

func (x *ModifyChannelRequest) GetPosition() *wrappers.UInt32Value {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *ModifyChannelRequest) GetTopic() *wrappers.StringValue {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *ModifyChannelRequest) GetNsfw() *wrappers.BoolValue {
	if x != nil {
		return x.Nsfw
	}
	return nil
}

func (x *ModifyChannelRequest) GetRateLimitPerUser() *wrappers.UInt32Value {
	if x != nil {
		return x.RateLimitPerUser
	}
	return nil
}

func (x *ModifyChannelRequest) GetBitrate() *wrappers.UInt32Value {
	if x != nil {
		return x.Bitrate
	}
	return nil
}

func (x *ModifyChannelRequest) GetUserLimit() *wrappers.UInt32Value {
	if x != nil {
		return x.UserLimit
	}
	return nil
}

func (x *ModifyChannelRequest) GetPermissionOverwrites() *ModifyChannelRequest_ChannelPermissionOverwritesValue {
	if x != nil {
		return x.PermissionOverwrites
	}
	return nil
}

func (x *ModifyChannelRequest) GetParentId() *model.SnowflakeValue {
	if x != nil {
		return x.ParentId
	}
	return nil
}

func (x *ModifyChannelRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type ModifyChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*ModifyChannelResponse_Error
	//	*ModifyChannelResponse_Data_
	Response isModifyChannelResponse_Response `protobuf_oneof:"response"`
}

func (x *ModifyChannelResponse) Reset() {
	*x = ModifyChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyChannelResponse) ProtoMessage() {}

func (x *ModifyChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyChannelResponse.ProtoReflect.Descriptor instead.
func (*ModifyChannelResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{44}
}

func (m *ModifyChannelResponse) GetResponse() isModifyChannelResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ModifyChannelResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*ModifyChannelResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ModifyChannelResponse) GetData() *ModifyChannelResponse_Data {
	if x, ok := x.GetResponse().(*ModifyChannelResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isModifyChannelResponse_Response interface {
	isModifyChannelResponse_Response()
}

type ModifyChannelResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ModifyChannelResponse_Data_ struct {
	Data *ModifyChannelResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*ModifyChannelResponse_Error) isModifyChannelResponse_Response() {}

func (*ModifyChannelResponse_Data_) isModifyChannelResponse_Response() {}

type DeleteChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId      uint64                `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	AuditLogReason *wrappers.StringValue `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *DeleteChannelRequest) Reset() {
	*x = DeleteChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChannelRequest) ProtoMessage() {}

func (x *DeleteChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChannelRequest.ProtoReflect.Descriptor instead.
func (*DeleteChannelRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{45}
}

func (x *DeleteChannelRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *DeleteChannelRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type DeleteChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*DeleteChannelResponse_Error
	//	*DeleteChannelResponse_Data
	Response isDeleteChannelResponse_Response `protobuf_oneof:"response"`
}

func (x *DeleteChannelResponse) Reset() {
	*x = DeleteChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChannelResponse) ProtoMessage() {}

func (x *DeleteChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChannelResponse.ProtoReflect.Descriptor instead.
func (*DeleteChannelResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{46}
}

func (m *DeleteChannelResponse) GetResponse() isDeleteChannelResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *DeleteChannelResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*DeleteChannelResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *DeleteChannelResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*DeleteChannelResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isDeleteChannelResponse_Response interface {
	isDeleteChannelResponse_Response()
}

type DeleteChannelResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type DeleteChannelResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*DeleteChannelResponse_Error) isDeleteChannelResponse_Response() {}

func (*DeleteChannelResponse_Data) isDeleteChannelResponse_Response() {}

type GetChannelMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId uint64                `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Around    *model.SnowflakeValue `protobuf:"bytes,2,opt,name=around,proto3" json:"around,omitempty"`
	Before    *model.SnowflakeValue `protobuf:"bytes,3,opt,name=before,proto3" json:"before,omitempty"`
	After     *model.SnowflakeValue `protobuf:"bytes,4,opt,name=after,proto3" json:"after,omitempty"`
	Limit     uint32                `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetChannelMessagesRequest) Reset() {
	*x = GetChannelMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelMessagesRequest) ProtoMessage() {}

func (x *GetChannelMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetChannelMessagesRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{47}
}

func (x *GetChannelMessagesRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *GetChannelMessagesRequest) GetAround() *model.SnowflakeValue {
	if x != nil {
		return x.Around
	}
	return nil
}

func (x *GetChannelMessagesRequest) GetBefore() *model.SnowflakeValue {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *GetChannelMessagesRequest) GetAfter() *model.SnowflakeValue {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *GetChannelMessagesRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetChannelMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetChannelMessagesResponse_Error
	//	*GetChannelMessagesResponse_Data_
	Response isGetChannelMessagesResponse_Response `protobuf_oneof:"response"`
}

func (x *GetChannelMessagesResponse) Reset() {
	*x = GetChannelMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelMessagesResponse) ProtoMessage() {}

func (x *GetChannelMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetChannelMessagesResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{48}
}

func (m *GetChannelMessagesResponse) GetResponse() isGetChannelMessagesResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetChannelMessagesResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*GetChannelMessagesResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetChannelMessagesResponse) GetData() *GetChannelMessagesResponse_Data {
	if x, ok := x.GetResponse().(*GetChannelMessagesResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isGetChannelMessagesResponse_Response interface {
	isGetChannelMessagesResponse_Response()
}

type GetChannelMessagesResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetChannelMessagesResponse_Data_ struct {
	Data *GetChannelMessagesResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetChannelMessagesResponse_Error) isGetChannelMessagesResponse_Response() {}

func (*GetChannelMessagesResponse_Data_) isGetChannelMessagesResponse_Response() {}

type GetChannelMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId uint64 `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId uint64 `protobuf:"fixed64,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (x *GetChannelMessageRequest) Reset() {
	*x = GetChannelMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelMessageRequest) ProtoMessage() {}

func (x *GetChannelMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelMessageRequest.ProtoReflect.Descriptor instead.
func (*GetChannelMessageRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{49}
}

func (x *GetChannelMessageRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *GetChannelMessageRequest) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

type GetChannelMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetChannelMessageResponse_Error
	//	*GetChannelMessageResponse_Data_
	Response isGetChannelMessageResponse_Response `protobuf_oneof:"response"`
}

func (x *GetChannelMessageResponse) Reset() {
	*x = GetChannelMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelMessageResponse) ProtoMessage() {}

func (x *GetChannelMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelMessageResponse.ProtoReflect.Descriptor instead.
func (*GetChannelMessageResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{50}
}

func (m *GetChannelMessageResponse) GetResponse() isGetChannelMessageResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetChannelMessageResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*GetChannelMessageResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetChannelMessageResponse) GetData() *GetChannelMessageResponse_Data {
	if x, ok := x.GetResponse().(*GetChannelMessageResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isGetChannelMessageResponse_Response interface {
	isGetChannelMessageResponse_Response()
}

type GetChannelMessageResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetChannelMessageResponse_Data_ struct {
	Data *GetChannelMessageResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetChannelMessageResponse_Error) isGetChannelMessageResponse_Response() {}

func (*GetChannelMessageResponse_Data_) isGetChannelMessageResponse_Response() {}

type CreateMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId       uint64                                `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Content         string                                `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Nonce           *wrappers.StringValue                 `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Tts             *wrappers.BoolValue                   `protobuf:"bytes,4,opt,name=tts,proto3" json:"tts,omitempty"`
	Embed           *model.MessageData_MessageEmbedData   `protobuf:"bytes,5,opt,name=embed,proto3" json:"embed,omitempty"`
	AllowedMentions *CreateMessageRequest_AllowedMentions `protobuf:"bytes,6,opt,name=allowed_mentions,json=allowedMentions,proto3" json:"allowed_mentions,omitempty"`
	Attachment      *CreateMessageRequest_Attachment      `protobuf:"bytes,7,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *CreateMessageRequest) Reset() {
	*x = CreateMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMessageRequest) ProtoMessage() {}

func (x *CreateMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMessageRequest.ProtoReflect.Descriptor instead.
func (*CreateMessageRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{51}
}

func (x *CreateMessageRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *CreateMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateMessageRequest) GetNonce() *wrappers.StringValue {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *CreateMessageRequest) GetTts() *wrappers.BoolValue {
	if x != nil {
		return x.Tts
	}
	return nil
}

func (x *CreateMessageRequest) GetEmbed() *model.MessageData_MessageEmbedData {
	if x != nil {
		return x.Embed
	}
	return nil
}

func (x *CreateMessageRequest) GetAllowedMentions() *CreateMessageRequest_AllowedMentions {
	if x != nil {
		return x.AllowedMentions
	}
	return nil
}

func (x *CreateMessageRequest) GetAttachment() *CreateMessageRequest_Attachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type CreateMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*CreateMessageResponse_Error
	//	*CreateMessageResponse_Data_
	Response isCreateMessageResponse_Response `protobuf_oneof:"response"`
}

func (x *CreateMessageResponse) Reset() {
	*x = CreateMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMessageResponse) ProtoMessage() {}

func (x *CreateMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMessageResponse.ProtoReflect.Descriptor instead.
func (*CreateMessageResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{52}
}

func (m *CreateMessageResponse) GetResponse() isCreateMessageResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CreateMessageResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*CreateMessageResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CreateMessageResponse) GetData() *CreateMessageResponse_Data {
	if x, ok := x.GetResponse().(*CreateMessageResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isCreateMessageResponse_Response interface {
	isCreateMessageResponse_Response()
}

type CreateMessageResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CreateMessageResponse_Data_ struct {
	Data *CreateMessageResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*CreateMessageResponse_Error) isCreateMessageResponse_Response() {}

func (*CreateMessageResponse_Data_) isCreateMessageResponse_Response() {}

type CrosspostMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId uint64 `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId uint64 `protobuf:"fixed64,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (x *CrosspostMessageRequest) Reset() {
	*x = CrosspostMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrosspostMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrosspostMessageRequest) ProtoMessage() {}

func (x *CrosspostMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrosspostMessageRequest.ProtoReflect.Descriptor instead.
func (*CrosspostMessageRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{53}
}

func (x *CrosspostMessageRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *CrosspostMessageRequest) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

type CrosspostMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*CrosspostMessageResponse_Error
	//	*CrosspostMessageResponse_Data_
	Response isCrosspostMessageResponse_Response `protobuf_oneof:"response"`
}

func (x *CrosspostMessageResponse) Reset() {
	*x = CrosspostMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrosspostMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrosspostMessageResponse) ProtoMessage() {}

func (x *CrosspostMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrosspostMessageResponse.ProtoReflect.Descriptor instead.
func (*CrosspostMessageResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{54}
}

func (m *CrosspostMessageResponse) GetResponse() isCrosspostMessageResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CrosspostMessageResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*CrosspostMessageResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CrosspostMessageResponse) GetData() *CrosspostMessageResponse_Data {
	if x, ok := x.GetResponse().(*CrosspostMessageResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isCrosspostMessageResponse_Response interface {
	isCrosspostMessageResponse_Response()
}

type CrosspostMessageResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CrosspostMessageResponse_Data_ struct {
	Data *CrosspostMessageResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*CrosspostMessageResponse_Error) isCrosspostMessageResponse_Response() {}

func (*CrosspostMessageResponse_Data_) isCrosspostMessageResponse_Response() {}

type CreateReactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId uint64 `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId uint64 `protobuf:"fixed64,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Emoji     string `protobuf:"bytes,3,opt,name=emoji,proto3" json:"emoji,omitempty"`
}

func (x *CreateReactionRequest) Reset() {
	*x = CreateReactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReactionRequest) ProtoMessage() {}

func (x *CreateReactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReactionRequest.ProtoReflect.Descriptor instead.
func (*CreateReactionRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{55}
}

func (x *CreateReactionRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *CreateReactionRequest) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *CreateReactionRequest) GetEmoji() string {
	if x != nil {
		return x.Emoji
	}
	return ""
}

type CreateReactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*CreateReactionResponse_Error
	//	*CreateReactionResponse_Data
	Response isCreateReactionResponse_Response `protobuf_oneof:"response"`
}

func (x *CreateReactionResponse) Reset() {
	*x = CreateReactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReactionResponse) ProtoMessage() {}

func (x *CreateReactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReactionResponse.ProtoReflect.Descriptor instead.
func (*CreateReactionResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{56}
}

func (m *CreateReactionResponse) GetResponse() isCreateReactionResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CreateReactionResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*CreateReactionResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CreateReactionResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*CreateReactionResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isCreateReactionResponse_Response interface {
	isCreateReactionResponse_Response()
}

type CreateReactionResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CreateReactionResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*CreateReactionResponse_Error) isCreateReactionResponse_Response() {}

func (*CreateReactionResponse_Data) isCreateReactionResponse_Response() {}

type DeleteOwnReactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId uint64 `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId uint64 `protobuf:"fixed64,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Emoji     string `protobuf:"bytes,3,opt,name=emoji,proto3" json:"emoji,omitempty"`
}

func (x *DeleteOwnReactionRequest) Reset() {
	*x = DeleteOwnReactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOwnReactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOwnReactionRequest) ProtoMessage() {}

func (x *DeleteOwnReactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOwnReactionRequest.ProtoReflect.Descriptor instead.
func (*DeleteOwnReactionRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{57}
}

func (x *DeleteOwnReactionRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *DeleteOwnReactionRequest) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *DeleteOwnReactionRequest) GetEmoji() string {
	if x != nil {
		return x.Emoji
	}
	return ""
}

type DeleteOwnReactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*DeleteOwnReactionResponse_Error
	//	*DeleteOwnReactionResponse_Data
	Response isDeleteOwnReactionResponse_Response `protobuf_oneof:"response"`
}

func (x *DeleteOwnReactionResponse) Reset() {
	*x = DeleteOwnReactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOwnReactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOwnReactionResponse) ProtoMessage() {}

func (x *DeleteOwnReactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOwnReactionResponse.ProtoReflect.Descriptor instead.
func (*DeleteOwnReactionResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{58}
}

func (m *DeleteOwnReactionResponse) GetResponse() isDeleteOwnReactionResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *DeleteOwnReactionResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*DeleteOwnReactionResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *DeleteOwnReactionResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*DeleteOwnReactionResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isDeleteOwnReactionResponse_Response interface {
	isDeleteOwnReactionResponse_Response()
}

type DeleteOwnReactionResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type DeleteOwnReactionResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*DeleteOwnReactionResponse_Error) isDeleteOwnReactionResponse_Response() {}

func (*DeleteOwnReactionResponse_Data) isDeleteOwnReactionResponse_Response() {}

type DeleteUserReactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId uint64 `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId uint64 `protobuf:"fixed64,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Emoji     string `protobuf:"bytes,3,opt,name=emoji,proto3" json:"emoji,omitempty"`
	UserId    uint64 `protobuf:"fixed64,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeleteUserReactionRequest) Reset() {
	*x = DeleteUserReactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserReactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserReactionRequest) ProtoMessage() {}

func (x *DeleteUserReactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserReactionRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserReactionRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{59}
}

func (x *DeleteUserReactionRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *DeleteUserReactionRequest) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *DeleteUserReactionRequest) GetEmoji() string {
	if x != nil {
		return x.Emoji
	}
	return ""
}

func (x *DeleteUserReactionRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DeleteUserReactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*DeleteUserReactionResponse_Error
	//	*DeleteUserReactionResponse_Data
	Response isDeleteUserReactionResponse_Response `protobuf_oneof:"response"`
}

func (x *DeleteUserReactionResponse) Reset() {
	*x = DeleteUserReactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserReactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserReactionResponse) ProtoMessage() {}

func (x *DeleteUserReactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserReactionResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserReactionResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{60}
}

func (m *DeleteUserReactionResponse) GetResponse() isDeleteUserReactionResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *DeleteUserReactionResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*DeleteUserReactionResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *DeleteUserReactionResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*DeleteUserReactionResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isDeleteUserReactionResponse_Response interface {
	isDeleteUserReactionResponse_Response()
}

type DeleteUserReactionResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type DeleteUserReactionResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*DeleteUserReactionResponse_Error) isDeleteUserReactionResponse_Response() {}

func (*DeleteUserReactionResponse_Data) isDeleteUserReactionResponse_Response() {}

type DeleteAllReactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId uint64 `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId uint64 `protobuf:"fixed64,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (x *DeleteAllReactionsRequest) Reset() {
	*x = DeleteAllReactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAllReactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllReactionsRequest) ProtoMessage() {}

func (x *DeleteAllReactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllReactionsRequest.ProtoReflect.Descriptor instead.
func (*DeleteAllReactionsRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{61}
}

func (x *DeleteAllReactionsRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *DeleteAllReactionsRequest) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

type DeleteAllReactionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*DeleteAllReactionsResponse_Error
	//	*DeleteAllReactionsResponse_Data
	Response isDeleteAllReactionsResponse_Response `protobuf_oneof:"response"`
}

func (x *DeleteAllReactionsResponse) Reset() {
	*x = DeleteAllReactionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAllReactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllReactionsResponse) ProtoMessage() {}

func (x *DeleteAllReactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllReactionsResponse.ProtoReflect.Descriptor instead.
func (*DeleteAllReactionsResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{62}
}

func (m *DeleteAllReactionsResponse) GetResponse() isDeleteAllReactionsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *DeleteAllReactionsResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*DeleteAllReactionsResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *DeleteAllReactionsResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*DeleteAllReactionsResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isDeleteAllReactionsResponse_Response interface {
	isDeleteAllReactionsResponse_Response()
}

type DeleteAllReactionsResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type DeleteAllReactionsResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*DeleteAllReactionsResponse_Error) isDeleteAllReactionsResponse_Response() {}

func (*DeleteAllReactionsResponse_Data) isDeleteAllReactionsResponse_Response() {}

type DeleteAllReactionsForEmojiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId uint64 `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId uint64 `protobuf:"fixed64,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Emoji     string `protobuf:"bytes,3,opt,name=emoji,proto3" json:"emoji,omitempty"`
}

func (x *DeleteAllReactionsForEmojiRequest) Reset() {
	*x = DeleteAllReactionsForEmojiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAllReactionsForEmojiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllReactionsForEmojiRequest) ProtoMessage() {}

func (x *DeleteAllReactionsForEmojiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllReactionsForEmojiRequest.ProtoReflect.Descriptor instead.
func (*DeleteAllReactionsForEmojiRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{63}
}

func (x *DeleteAllReactionsForEmojiRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *DeleteAllReactionsForEmojiRequest) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *DeleteAllReactionsForEmojiRequest) GetEmoji() string {
	if x != nil {
		return x.Emoji
	}
	return ""
}

type DeleteAllReactionsForEmojiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*DeleteAllReactionsForEmojiResponse_Error
	//	*DeleteAllReactionsForEmojiResponse_Data
	Response isDeleteAllReactionsForEmojiResponse_Response `protobuf_oneof:"response"`
}

func (x *DeleteAllReactionsForEmojiResponse) Reset() {
	*x = DeleteAllReactionsForEmojiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAllReactionsForEmojiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllReactionsForEmojiResponse) ProtoMessage() {}

func (x *DeleteAllReactionsForEmojiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllReactionsForEmojiResponse.ProtoReflect.Descriptor instead.
func (*DeleteAllReactionsForEmojiResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{64}
}

func (m *DeleteAllReactionsForEmojiResponse) GetResponse() isDeleteAllReactionsForEmojiResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *DeleteAllReactionsForEmojiResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*DeleteAllReactionsForEmojiResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *DeleteAllReactionsForEmojiResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*DeleteAllReactionsForEmojiResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isDeleteAllReactionsForEmojiResponse_Response interface {
	isDeleteAllReactionsForEmojiResponse_Response()
}

type DeleteAllReactionsForEmojiResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type DeleteAllReactionsForEmojiResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*DeleteAllReactionsForEmojiResponse_Error) isDeleteAllReactionsForEmojiResponse_Response() {}

func (*DeleteAllReactionsForEmojiResponse_Data) isDeleteAllReactionsForEmojiResponse_Response() {}

type EditMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId uint64                              `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId uint64                              `protobuf:"fixed64,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Content   *wrappers.StringValue               `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Embed     *model.MessageData_MessageEmbedData `protobuf:"bytes,4,opt,name=embed,proto3" json:"embed,omitempty"`
	Flags     *wrappers.UInt32Value               `protobuf:"bytes,5,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *EditMessageRequest) Reset() {
	*x = EditMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditMessageRequest) ProtoMessage() {}

func (x *EditMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditMessageRequest.ProtoReflect.Descriptor instead.
func (*EditMessageRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{65}
}

func (x *EditMessageRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *EditMessageRequest) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *EditMessageRequest) GetContent() *wrappers.StringValue {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *EditMessageRequest) GetEmbed() *model.MessageData_MessageEmbedData {
	if x != nil {
		return x.Embed
	}
	return nil
}

func (x *EditMessageRequest) GetFlags() *wrappers.UInt32Value {
	if x != nil {
		return x.Flags
	}
	return nil
}

type EditMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*EditMessageResponse_Error
	//	*EditMessageResponse_Data_
	Response isEditMessageResponse_Response `protobuf_oneof:"response"`
}

func (x *EditMessageResponse) Reset() {
	*x = EditMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditMessageResponse) ProtoMessage() {}

func (x *EditMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditMessageResponse.ProtoReflect.Descriptor instead.
func (*EditMessageResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{66}
}

func (m *EditMessageResponse) GetResponse() isEditMessageResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *EditMessageResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*EditMessageResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *EditMessageResponse) GetData() *EditMessageResponse_Data {
	if x, ok := x.GetResponse().(*EditMessageResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isEditMessageResponse_Response interface {
	isEditMessageResponse_Response()
}

type EditMessageResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type EditMessageResponse_Data_ struct {
	Data *EditMessageResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*EditMessageResponse_Error) isEditMessageResponse_Response() {}

func (*EditMessageResponse_Data_) isEditMessageResponse_Response() {}

type DeleteMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId      uint64                `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId      uint64                `protobuf:"fixed64,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	AuditLogReason *wrappers.StringValue `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *DeleteMessageRequest) Reset() {
	*x = DeleteMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageRequest) ProtoMessage() {}

func (x *DeleteMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageRequest.ProtoReflect.Descriptor instead.
func (*DeleteMessageRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{67}
}

func (x *DeleteMessageRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *DeleteMessageRequest) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *DeleteMessageRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type DeleteMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*DeleteMessageResponse_Error
	//	*DeleteMessageResponse_Data
	Response isDeleteMessageResponse_Response `protobuf_oneof:"response"`
}

func (x *DeleteMessageResponse) Reset() {
	*x = DeleteMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageResponse) ProtoMessage() {}

func (x *DeleteMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageResponse.ProtoReflect.Descriptor instead.
func (*DeleteMessageResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{68}
}

func (m *DeleteMessageResponse) GetResponse() isDeleteMessageResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *DeleteMessageResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*DeleteMessageResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *DeleteMessageResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*DeleteMessageResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isDeleteMessageResponse_Response interface {
	isDeleteMessageResponse_Response()
}

type DeleteMessageResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type DeleteMessageResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*DeleteMessageResponse_Error) isDeleteMessageResponse_Response() {}

func (*DeleteMessageResponse_Data) isDeleteMessageResponse_Response() {}

type BulkDeleteMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId      uint64                `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageIds     []uint64              `protobuf:"fixed64,2,rep,packed,name=message_ids,json=messageIds,proto3" json:"message_ids,omitempty"`
	AuditLogReason *wrappers.StringValue `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *BulkDeleteMessagesRequest) Reset() {
	*x = BulkDeleteMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkDeleteMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkDeleteMessagesRequest) ProtoMessage() {}

func (x *BulkDeleteMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkDeleteMessagesRequest.ProtoReflect.Descriptor instead.
func (*BulkDeleteMessagesRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{69}
}

func (x *BulkDeleteMessagesRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *BulkDeleteMessagesRequest) GetMessageIds() []uint64 {
	if x != nil {
		return x.MessageIds
	}
	return nil
}

func (x *BulkDeleteMessagesRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type BulkDeleteMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*BulkDeleteMessagesResponse_Error
	//	*BulkDeleteMessagesResponse_Data
	Response isBulkDeleteMessagesResponse_Response `protobuf_oneof:"response"`
}

func (x *BulkDeleteMessagesResponse) Reset() {
	*x = BulkDeleteMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkDeleteMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkDeleteMessagesResponse) ProtoMessage() {}

func (x *BulkDeleteMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkDeleteMessagesResponse.ProtoReflect.Descriptor instead.
func (*BulkDeleteMessagesResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{70}
}

func (m *BulkDeleteMessagesResponse) GetResponse() isBulkDeleteMessagesResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *BulkDeleteMessagesResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*BulkDeleteMessagesResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *BulkDeleteMessagesResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*BulkDeleteMessagesResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isBulkDeleteMessagesResponse_Response interface {
	isBulkDeleteMessagesResponse_Response()
}

type BulkDeleteMessagesResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type BulkDeleteMessagesResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*BulkDeleteMessagesResponse_Error) isBulkDeleteMessagesResponse_Response() {}

func (*BulkDeleteMessagesResponse_Data) isBulkDeleteMessagesResponse_Response() {}

type EditChannelPermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId      uint64                                                                          `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	OverwriteId    uint64                                                                          `protobuf:"fixed64,2,opt,name=overwrite_id,json=overwriteId,proto3" json:"overwrite_id,omitempty"`
	Allow          uint64                                                                          `protobuf:"varint,3,opt,name=allow,proto3" json:"allow,omitempty"`
	Deny           uint64                                                                          `protobuf:"varint,4,opt,name=deny,proto3" json:"deny,omitempty"`
	Type           model.ChannelData_ChannelPermissionOverwriteData_ChannelPermissionOverwriteType `protobuf:"varint,5,opt,name=type,proto3,enum=pylon.discord.v1.model.ChannelData_ChannelPermissionOverwriteData_ChannelPermissionOverwriteType" json:"type,omitempty"`
	AuditLogReason *wrappers.StringValue                                                           `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *EditChannelPermissionsRequest) Reset() {
	*x = EditChannelPermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditChannelPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditChannelPermissionsRequest) ProtoMessage() {}

func (x *EditChannelPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditChannelPermissionsRequest.ProtoReflect.Descriptor instead.
func (*EditChannelPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{71}
}

func (x *EditChannelPermissionsRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *EditChannelPermissionsRequest) GetOverwriteId() uint64 {
	if x != nil {
		return x.OverwriteId
	}
	return 0
}

func (x *EditChannelPermissionsRequest) GetAllow() uint64 {
	if x != nil {
		return x.Allow
	}
	return 0
}

func (x *EditChannelPermissionsRequest) GetDeny() uint64 {
	if x != nil {
		return x.Deny
	}
	return 0
}

func (x *EditChannelPermissionsRequest) GetType() model.ChannelData_ChannelPermissionOverwriteData_ChannelPermissionOverwriteType {
	if x != nil {
		return x.Type
	}
	return model.ChannelData_ChannelPermissionOverwriteData_UNKNOWN
}

func (x *EditChannelPermissionsRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type EditChannelPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*EditChannelPermissionsResponse_Error
	//	*EditChannelPermissionsResponse_Data
	Response isEditChannelPermissionsResponse_Response `protobuf_oneof:"response"`
}

func (x *EditChannelPermissionsResponse) Reset() {
	*x = EditChannelPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditChannelPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditChannelPermissionsResponse) ProtoMessage() {}

func (x *EditChannelPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditChannelPermissionsResponse.ProtoReflect.Descriptor instead.
func (*EditChannelPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{72}
}

func (m *EditChannelPermissionsResponse) GetResponse() isEditChannelPermissionsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *EditChannelPermissionsResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*EditChannelPermissionsResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *EditChannelPermissionsResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*EditChannelPermissionsResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isEditChannelPermissionsResponse_Response interface {
	isEditChannelPermissionsResponse_Response()
}

type EditChannelPermissionsResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type EditChannelPermissionsResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*EditChannelPermissionsResponse_Error) isEditChannelPermissionsResponse_Response() {}

func (*EditChannelPermissionsResponse_Data) isEditChannelPermissionsResponse_Response() {}

type GetChannelInvitesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId uint64 `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *GetChannelInvitesRequest) Reset() {
	*x = GetChannelInvitesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelInvitesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelInvitesRequest) ProtoMessage() {}

func (x *GetChannelInvitesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelInvitesRequest.ProtoReflect.Descriptor instead.
func (*GetChannelInvitesRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{73}
}

func (x *GetChannelInvitesRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

type GetChannelInvitesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetChannelInvitesResponse_Error
	//	*GetChannelInvitesResponse_Data_
	Response isGetChannelInvitesResponse_Response `protobuf_oneof:"response"`
}

func (x *GetChannelInvitesResponse) Reset() {
	*x = GetChannelInvitesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelInvitesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelInvitesResponse) ProtoMessage() {}

func (x *GetChannelInvitesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelInvitesResponse.ProtoReflect.Descriptor instead.
func (*GetChannelInvitesResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{74}
}

func (m *GetChannelInvitesResponse) GetResponse() isGetChannelInvitesResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetChannelInvitesResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*GetChannelInvitesResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetChannelInvitesResponse) GetData() *GetChannelInvitesResponse_Data {
	if x, ok := x.GetResponse().(*GetChannelInvitesResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isGetChannelInvitesResponse_Response interface {
	isGetChannelInvitesResponse_Response()
}

type GetChannelInvitesResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetChannelInvitesResponse_Data_ struct {
	Data *GetChannelInvitesResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetChannelInvitesResponse_Error) isGetChannelInvitesResponse_Response() {}

func (*GetChannelInvitesResponse_Data_) isGetChannelInvitesResponse_Response() {}

type CreateChannelInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId      uint64                                `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MaxAge         *wrappers.UInt32Value                 `protobuf:"bytes,2,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
	MaxUses        *wrappers.UInt32Value                 `protobuf:"bytes,3,opt,name=max_uses,json=maxUses,proto3" json:"max_uses,omitempty"`
	Temporary      *wrappers.BoolValue                   `protobuf:"bytes,4,opt,name=temporary,proto3" json:"temporary,omitempty"`
	Unique         *wrappers.BoolValue                   `protobuf:"bytes,5,opt,name=unique,proto3" json:"unique,omitempty"`
	TargetUser     *model.SnowflakeValue                 `protobuf:"bytes,6,opt,name=target_user,json=targetUser,proto3" json:"target_user,omitempty"`
	TargetUserType model.InviteData_InviteTargetUserType `protobuf:"varint,7,opt,name=target_user_type,json=targetUserType,proto3,enum=pylon.discord.v1.model.InviteData_InviteTargetUserType" json:"target_user_type,omitempty"`
	AuditLogReason *wrappers.StringValue                 `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *CreateChannelInviteRequest) Reset() {
	*x = CreateChannelInviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChannelInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChannelInviteRequest) ProtoMessage() {}

func (x *CreateChannelInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChannelInviteRequest.ProtoReflect.Descriptor instead.
func (*CreateChannelInviteRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{75}
}

func (x *CreateChannelInviteRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *CreateChannelInviteRequest) GetMaxAge() *wrappers.UInt32Value {
	if x != nil {
		return x.MaxAge
	}
	return nil
}

func (x *CreateChannelInviteRequest) GetMaxUses() *wrappers.UInt32Value {
	if x != nil {
		return x.MaxUses
	}
	return nil
}

func (x *CreateChannelInviteRequest) GetTemporary() *wrappers.BoolValue {
	if x != nil {
		return x.Temporary
	}
	return nil
}

func (x *CreateChannelInviteRequest) GetUnique() *wrappers.BoolValue {
	if x != nil {
		return x.Unique
	}
	return nil
}

func (x *CreateChannelInviteRequest) GetTargetUser() *model.SnowflakeValue {
	if x != nil {
		return x.TargetUser
	}
	return nil
}

func (x *CreateChannelInviteRequest) GetTargetUserType() model.InviteData_InviteTargetUserType {
	if x != nil {
		return x.TargetUserType
	}
	return model.InviteData_UNKNOWN
}

func (x *CreateChannelInviteRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type CreateChannelInviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*CreateChannelInviteResponse_Error
	//	*CreateChannelInviteResponse_Data_
	Response isCreateChannelInviteResponse_Response `protobuf_oneof:"response"`
}

func (x *CreateChannelInviteResponse) Reset() {
	*x = CreateChannelInviteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChannelInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChannelInviteResponse) ProtoMessage() {}

func (x *CreateChannelInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChannelInviteResponse.ProtoReflect.Descriptor instead.
func (*CreateChannelInviteResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{76}
}

func (m *CreateChannelInviteResponse) GetResponse() isCreateChannelInviteResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CreateChannelInviteResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*CreateChannelInviteResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CreateChannelInviteResponse) GetData() *CreateChannelInviteResponse_Data {
	if x, ok := x.GetResponse().(*CreateChannelInviteResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isCreateChannelInviteResponse_Response interface {
	isCreateChannelInviteResponse_Response()
}

type CreateChannelInviteResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CreateChannelInviteResponse_Data_ struct {
	Data *CreateChannelInviteResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*CreateChannelInviteResponse_Error) isCreateChannelInviteResponse_Response() {}

func (*CreateChannelInviteResponse_Data_) isCreateChannelInviteResponse_Response() {}

type DeleteChannelPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId      uint64                `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	OverwriteId    uint64                `protobuf:"fixed64,2,opt,name=overwrite_id,json=overwriteId,proto3" json:"overwrite_id,omitempty"`
	AuditLogReason *wrappers.StringValue `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *DeleteChannelPermissionRequest) Reset() {
	*x = DeleteChannelPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChannelPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChannelPermissionRequest) ProtoMessage() {}

func (x *DeleteChannelPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChannelPermissionRequest.ProtoReflect.Descriptor instead.
func (*DeleteChannelPermissionRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{77}
}

func (x *DeleteChannelPermissionRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *DeleteChannelPermissionRequest) GetOverwriteId() uint64 {
	if x != nil {
		return x.OverwriteId
	}
	return 0
}

func (x *DeleteChannelPermissionRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type DeleteChannelPermissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*DeleteChannelPermissionResponse_Error
	//	*DeleteChannelPermissionResponse_Data
	Response isDeleteChannelPermissionResponse_Response `protobuf_oneof:"response"`
}

func (x *DeleteChannelPermissionResponse) Reset() {
	*x = DeleteChannelPermissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChannelPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChannelPermissionResponse) ProtoMessage() {}

func (x *DeleteChannelPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChannelPermissionResponse.ProtoReflect.Descriptor instead.
func (*DeleteChannelPermissionResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{78}
}

func (m *DeleteChannelPermissionResponse) GetResponse() isDeleteChannelPermissionResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *DeleteChannelPermissionResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*DeleteChannelPermissionResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *DeleteChannelPermissionResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*DeleteChannelPermissionResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isDeleteChannelPermissionResponse_Response interface {
	isDeleteChannelPermissionResponse_Response()
}

type DeleteChannelPermissionResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type DeleteChannelPermissionResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*DeleteChannelPermissionResponse_Error) isDeleteChannelPermissionResponse_Response() {}

func (*DeleteChannelPermissionResponse_Data) isDeleteChannelPermissionResponse_Response() {}

type FollowNewsChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId        uint64 `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	WebhookChannelId uint64 `protobuf:"fixed64,2,opt,name=webhook_channel_id,json=webhookChannelId,proto3" json:"webhook_channel_id,omitempty"`
}

func (x *FollowNewsChannelRequest) Reset() {
	*x = FollowNewsChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowNewsChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowNewsChannelRequest) ProtoMessage() {}

func (x *FollowNewsChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowNewsChannelRequest.ProtoReflect.Descriptor instead.
func (*FollowNewsChannelRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{79}
}

func (x *FollowNewsChannelRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *FollowNewsChannelRequest) GetWebhookChannelId() uint64 {
	if x != nil {
		return x.WebhookChannelId
	}
	return 0
}

type FollowNewsChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*FollowNewsChannelResponse_Error
	//	*FollowNewsChannelResponse_Data_
	Response isFollowNewsChannelResponse_Response `protobuf_oneof:"response"`
}

func (x *FollowNewsChannelResponse) Reset() {
	*x = FollowNewsChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowNewsChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowNewsChannelResponse) ProtoMessage() {}

func (x *FollowNewsChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowNewsChannelResponse.ProtoReflect.Descriptor instead.
func (*FollowNewsChannelResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{80}
}

func (m *FollowNewsChannelResponse) GetResponse() isFollowNewsChannelResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *FollowNewsChannelResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*FollowNewsChannelResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *FollowNewsChannelResponse) GetData() *FollowNewsChannelResponse_Data {
	if x, ok := x.GetResponse().(*FollowNewsChannelResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isFollowNewsChannelResponse_Response interface {
	isFollowNewsChannelResponse_Response()
}

type FollowNewsChannelResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type FollowNewsChannelResponse_Data_ struct {
	Data *FollowNewsChannelResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*FollowNewsChannelResponse_Error) isFollowNewsChannelResponse_Response() {}

func (*FollowNewsChannelResponse_Data_) isFollowNewsChannelResponse_Response() {}

type TriggerTypingIndicatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId uint64 `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *TriggerTypingIndicatorRequest) Reset() {
	*x = TriggerTypingIndicatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerTypingIndicatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerTypingIndicatorRequest) ProtoMessage() {}

func (x *TriggerTypingIndicatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerTypingIndicatorRequest.ProtoReflect.Descriptor instead.
func (*TriggerTypingIndicatorRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{81}
}

func (x *TriggerTypingIndicatorRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

type TriggerTypingIndicatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*TriggerTypingIndicatorResponse_Error
	//	*TriggerTypingIndicatorResponse_Data
	Response isTriggerTypingIndicatorResponse_Response `protobuf_oneof:"response"`
}

func (x *TriggerTypingIndicatorResponse) Reset() {
	*x = TriggerTypingIndicatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerTypingIndicatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerTypingIndicatorResponse) ProtoMessage() {}

func (x *TriggerTypingIndicatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerTypingIndicatorResponse.ProtoReflect.Descriptor instead.
func (*TriggerTypingIndicatorResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{82}
}

func (m *TriggerTypingIndicatorResponse) GetResponse() isTriggerTypingIndicatorResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *TriggerTypingIndicatorResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*TriggerTypingIndicatorResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *TriggerTypingIndicatorResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*TriggerTypingIndicatorResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isTriggerTypingIndicatorResponse_Response interface {
	isTriggerTypingIndicatorResponse_Response()
}

type TriggerTypingIndicatorResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type TriggerTypingIndicatorResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*TriggerTypingIndicatorResponse_Error) isTriggerTypingIndicatorResponse_Response() {}

func (*TriggerTypingIndicatorResponse_Data) isTriggerTypingIndicatorResponse_Response() {}

type GetPinnedMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId uint64 `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *GetPinnedMessagesRequest) Reset() {
	*x = GetPinnedMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPinnedMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPinnedMessagesRequest) ProtoMessage() {}

func (x *GetPinnedMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPinnedMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetPinnedMessagesRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{83}
}

func (x *GetPinnedMessagesRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

type GetPinnedMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetPinnedMessagesResponse_Error
	//	*GetPinnedMessagesResponse_Data_
	Response isGetPinnedMessagesResponse_Response `protobuf_oneof:"response"`
}

func (x *GetPinnedMessagesResponse) Reset() {
	*x = GetPinnedMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPinnedMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPinnedMessagesResponse) ProtoMessage() {}

func (x *GetPinnedMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPinnedMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetPinnedMessagesResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{84}
}

func (m *GetPinnedMessagesResponse) GetResponse() isGetPinnedMessagesResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetPinnedMessagesResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*GetPinnedMessagesResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetPinnedMessagesResponse) GetData() *GetPinnedMessagesResponse_Data {
	if x, ok := x.GetResponse().(*GetPinnedMessagesResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isGetPinnedMessagesResponse_Response interface {
	isGetPinnedMessagesResponse_Response()
}

type GetPinnedMessagesResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetPinnedMessagesResponse_Data_ struct {
	Data *GetPinnedMessagesResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetPinnedMessagesResponse_Error) isGetPinnedMessagesResponse_Response() {}

func (*GetPinnedMessagesResponse_Data_) isGetPinnedMessagesResponse_Response() {}

type AddPinnedChannelMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId      uint64                `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId      uint64                `protobuf:"fixed64,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	AuditLogReason *wrappers.StringValue `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *AddPinnedChannelMessageRequest) Reset() {
	*x = AddPinnedChannelMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPinnedChannelMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPinnedChannelMessageRequest) ProtoMessage() {}

func (x *AddPinnedChannelMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPinnedChannelMessageRequest.ProtoReflect.Descriptor instead.
func (*AddPinnedChannelMessageRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{85}
}

func (x *AddPinnedChannelMessageRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *AddPinnedChannelMessageRequest) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *AddPinnedChannelMessageRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type AddPinnedChannelMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*AddPinnedChannelMessageResponse_Error
	//	*AddPinnedChannelMessageResponse_Data
	Response isAddPinnedChannelMessageResponse_Response `protobuf_oneof:"response"`
}

func (x *AddPinnedChannelMessageResponse) Reset() {
	*x = AddPinnedChannelMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPinnedChannelMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPinnedChannelMessageResponse) ProtoMessage() {}

func (x *AddPinnedChannelMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPinnedChannelMessageResponse.ProtoReflect.Descriptor instead.
func (*AddPinnedChannelMessageResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{86}
}

func (m *AddPinnedChannelMessageResponse) GetResponse() isAddPinnedChannelMessageResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *AddPinnedChannelMessageResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*AddPinnedChannelMessageResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *AddPinnedChannelMessageResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*AddPinnedChannelMessageResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isAddPinnedChannelMessageResponse_Response interface {
	isAddPinnedChannelMessageResponse_Response()
}

type AddPinnedChannelMessageResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type AddPinnedChannelMessageResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*AddPinnedChannelMessageResponse_Error) isAddPinnedChannelMessageResponse_Response() {}

func (*AddPinnedChannelMessageResponse_Data) isAddPinnedChannelMessageResponse_Response() {}

type DeletePinnedChannelMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId      uint64                `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId      uint64                `protobuf:"fixed64,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	AuditLogReason *wrappers.StringValue `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *DeletePinnedChannelMessageRequest) Reset() {
	*x = DeletePinnedChannelMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePinnedChannelMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePinnedChannelMessageRequest) ProtoMessage() {}

func (x *DeletePinnedChannelMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePinnedChannelMessageRequest.ProtoReflect.Descriptor instead.
func (*DeletePinnedChannelMessageRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{87}
}

func (x *DeletePinnedChannelMessageRequest) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *DeletePinnedChannelMessageRequest) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *DeletePinnedChannelMessageRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type DeletePinnedChannelMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*DeletePinnedChannelMessageResponse_Error
	//	*DeletePinnedChannelMessageResponse_Data
	Response isDeletePinnedChannelMessageResponse_Response `protobuf_oneof:"response"`
}

func (x *DeletePinnedChannelMessageResponse) Reset() {
	*x = DeletePinnedChannelMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePinnedChannelMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePinnedChannelMessageResponse) ProtoMessage() {}

func (x *DeletePinnedChannelMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePinnedChannelMessageResponse.ProtoReflect.Descriptor instead.
func (*DeletePinnedChannelMessageResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{88}
}

func (m *DeletePinnedChannelMessageResponse) GetResponse() isDeletePinnedChannelMessageResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *DeletePinnedChannelMessageResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*DeletePinnedChannelMessageResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *DeletePinnedChannelMessageResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*DeletePinnedChannelMessageResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isDeletePinnedChannelMessageResponse_Response interface {
	isDeletePinnedChannelMessageResponse_Response()
}

type DeletePinnedChannelMessageResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type DeletePinnedChannelMessageResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*DeletePinnedChannelMessageResponse_Error) isDeletePinnedChannelMessageResponse_Response() {}

func (*DeletePinnedChannelMessageResponse_Data) isDeletePinnedChannelMessageResponse_Response() {}

type ListGuildEmojisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListGuildEmojisRequest) Reset() {
	*x = ListGuildEmojisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGuildEmojisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGuildEmojisRequest) ProtoMessage() {}

func (x *ListGuildEmojisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGuildEmojisRequest.ProtoReflect.Descriptor instead.
func (*ListGuildEmojisRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{89}
}

type ListGuildEmojisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*ListGuildEmojisResponse_Error
	//	*ListGuildEmojisResponse_Data_
	Response isListGuildEmojisResponse_Response `protobuf_oneof:"response"`
}

func (x *ListGuildEmojisResponse) Reset() {
	*x = ListGuildEmojisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGuildEmojisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGuildEmojisResponse) ProtoMessage() {}

func (x *ListGuildEmojisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGuildEmojisResponse.ProtoReflect.Descriptor instead.
func (*ListGuildEmojisResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{90}
}

func (m *ListGuildEmojisResponse) GetResponse() isListGuildEmojisResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ListGuildEmojisResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*ListGuildEmojisResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ListGuildEmojisResponse) GetData() *ListGuildEmojisResponse_Data {
	if x, ok := x.GetResponse().(*ListGuildEmojisResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isListGuildEmojisResponse_Response interface {
	isListGuildEmojisResponse_Response()
}

type ListGuildEmojisResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ListGuildEmojisResponse_Data_ struct {
	Data *ListGuildEmojisResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*ListGuildEmojisResponse_Error) isListGuildEmojisResponse_Response() {}

func (*ListGuildEmojisResponse_Data_) isListGuildEmojisResponse_Response() {}

type GetGuildEmojiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiId uint64 `protobuf:"fixed64,1,opt,name=emoji_id,json=emojiId,proto3" json:"emoji_id,omitempty"`
}

func (x *GetGuildEmojiRequest) Reset() {
	*x = GetGuildEmojiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuildEmojiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildEmojiRequest) ProtoMessage() {}

func (x *GetGuildEmojiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildEmojiRequest.ProtoReflect.Descriptor instead.
func (*GetGuildEmojiRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{91}
}

func (x *GetGuildEmojiRequest) GetEmojiId() uint64 {
	if x != nil {
		return x.EmojiId
	}
	return 0
}

type GetGuildEmojiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetGuildEmojiResponse_Error
	//	*GetGuildEmojiResponse_Data_
	Response isGetGuildEmojiResponse_Response `protobuf_oneof:"response"`
}

func (x *GetGuildEmojiResponse) Reset() {
	*x = GetGuildEmojiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuildEmojiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildEmojiResponse) ProtoMessage() {}

func (x *GetGuildEmojiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildEmojiResponse.ProtoReflect.Descriptor instead.
func (*GetGuildEmojiResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{92}
}

func (m *GetGuildEmojiResponse) GetResponse() isGetGuildEmojiResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetGuildEmojiResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*GetGuildEmojiResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetGuildEmojiResponse) GetData() *GetGuildEmojiResponse_Data {
	if x, ok := x.GetResponse().(*GetGuildEmojiResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isGetGuildEmojiResponse_Response interface {
	isGetGuildEmojiResponse_Response()
}

type GetGuildEmojiResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetGuildEmojiResponse_Data_ struct {
	Data *GetGuildEmojiResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetGuildEmojiResponse_Error) isGetGuildEmojiResponse_Response() {}

func (*GetGuildEmojiResponse_Data_) isGetGuildEmojiResponse_Response() {}

type CreateGuildEmojiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image          *wrappers.BytesValue      `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Roles          *model.SnowflakeListValue `protobuf:"bytes,3,opt,name=roles,proto3" json:"roles,omitempty"`
	AuditLogReason *wrappers.StringValue     `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *CreateGuildEmojiRequest) Reset() {
	*x = CreateGuildEmojiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGuildEmojiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGuildEmojiRequest) ProtoMessage() {}

func (x *CreateGuildEmojiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGuildEmojiRequest.ProtoReflect.Descriptor instead.
func (*CreateGuildEmojiRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{93}
}

func (x *CreateGuildEmojiRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateGuildEmojiRequest) GetImage() *wrappers.BytesValue {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *CreateGuildEmojiRequest) GetRoles() *model.SnowflakeListValue {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *CreateGuildEmojiRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type CreateGuildEmojiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*CreateGuildEmojiResponse_Error
	//	*CreateGuildEmojiResponse_Data_
	Response isCreateGuildEmojiResponse_Response `protobuf_oneof:"response"`
}

func (x *CreateGuildEmojiResponse) Reset() {
	*x = CreateGuildEmojiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGuildEmojiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGuildEmojiResponse) ProtoMessage() {}

func (x *CreateGuildEmojiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGuildEmojiResponse.ProtoReflect.Descriptor instead.
func (*CreateGuildEmojiResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{94}
}

func (m *CreateGuildEmojiResponse) GetResponse() isCreateGuildEmojiResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CreateGuildEmojiResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*CreateGuildEmojiResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CreateGuildEmojiResponse) GetData() *CreateGuildEmojiResponse_Data {
	if x, ok := x.GetResponse().(*CreateGuildEmojiResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isCreateGuildEmojiResponse_Response interface {
	isCreateGuildEmojiResponse_Response()
}

type CreateGuildEmojiResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CreateGuildEmojiResponse_Data_ struct {
	Data *CreateGuildEmojiResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*CreateGuildEmojiResponse_Error) isCreateGuildEmojiResponse_Response() {}

func (*CreateGuildEmojiResponse_Data_) isCreateGuildEmojiResponse_Response() {}

type ModifyGuildEmojiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiId        uint64                    `protobuf:"fixed64,1,opt,name=emoji_id,json=emojiId,proto3" json:"emoji_id,omitempty"`
	Name           *wrappers.StringValue     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Roles          *model.SnowflakeListValue `protobuf:"bytes,3,opt,name=roles,proto3" json:"roles,omitempty"`
	AuditLogReason *wrappers.StringValue     `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *ModifyGuildEmojiRequest) Reset() {
	*x = ModifyGuildEmojiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGuildEmojiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGuildEmojiRequest) ProtoMessage() {}

func (x *ModifyGuildEmojiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGuildEmojiRequest.ProtoReflect.Descriptor instead.
func (*ModifyGuildEmojiRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{95}
}

func (x *ModifyGuildEmojiRequest) GetEmojiId() uint64 {
	if x != nil {
		return x.EmojiId
	}
	return 0
}

func (x *ModifyGuildEmojiRequest) GetName() *wrappers.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ModifyGuildEmojiRequest) GetRoles() *model.SnowflakeListValue {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *ModifyGuildEmojiRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type ModifyGuildEmojiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*ModifyGuildEmojiResponse_Error
	//	*ModifyGuildEmojiResponse_Data_
	Response isModifyGuildEmojiResponse_Response `protobuf_oneof:"response"`
}

func (x *ModifyGuildEmojiResponse) Reset() {
	*x = ModifyGuildEmojiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGuildEmojiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGuildEmojiResponse) ProtoMessage() {}

func (x *ModifyGuildEmojiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGuildEmojiResponse.ProtoReflect.Descriptor instead.
func (*ModifyGuildEmojiResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{96}
}

func (m *ModifyGuildEmojiResponse) GetResponse() isModifyGuildEmojiResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ModifyGuildEmojiResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*ModifyGuildEmojiResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ModifyGuildEmojiResponse) GetData() *ModifyGuildEmojiResponse_Data {
	if x, ok := x.GetResponse().(*ModifyGuildEmojiResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isModifyGuildEmojiResponse_Response interface {
	isModifyGuildEmojiResponse_Response()
}

type ModifyGuildEmojiResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ModifyGuildEmojiResponse_Data_ struct {
	Data *ModifyGuildEmojiResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*ModifyGuildEmojiResponse_Error) isModifyGuildEmojiResponse_Response() {}

func (*ModifyGuildEmojiResponse_Data_) isModifyGuildEmojiResponse_Response() {}

type DeleteGuildEmojiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiId        uint64                `protobuf:"fixed64,1,opt,name=emoji_id,json=emojiId,proto3" json:"emoji_id,omitempty"`
	AuditLogReason *wrappers.StringValue `protobuf:"bytes,100,opt,name=audit_log_reason,json=auditLogReason,proto3" json:"audit_log_reason,omitempty"`
}

func (x *DeleteGuildEmojiRequest) Reset() {
	*x = DeleteGuildEmojiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGuildEmojiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGuildEmojiRequest) ProtoMessage() {}

func (x *DeleteGuildEmojiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGuildEmojiRequest.ProtoReflect.Descriptor instead.
func (*DeleteGuildEmojiRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{97}
}

func (x *DeleteGuildEmojiRequest) GetEmojiId() uint64 {
	if x != nil {
		return x.EmojiId
	}
	return 0
}

func (x *DeleteGuildEmojiRequest) GetAuditLogReason() *wrappers.StringValue {
	if x != nil {
		return x.AuditLogReason
	}
	return nil
}

type DeleteGuildEmojiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*DeleteGuildEmojiResponse_Error
	//	*DeleteGuildEmojiResponse_Data
	Response isDeleteGuildEmojiResponse_Response `protobuf_oneof:"response"`
}

func (x *DeleteGuildEmojiResponse) Reset() {
	*x = DeleteGuildEmojiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGuildEmojiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGuildEmojiResponse) ProtoMessage() {}

func (x *DeleteGuildEmojiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGuildEmojiResponse.ProtoReflect.Descriptor instead.
func (*DeleteGuildEmojiResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{98}
}

func (m *DeleteGuildEmojiResponse) GetResponse() isDeleteGuildEmojiResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *DeleteGuildEmojiResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*DeleteGuildEmojiResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *DeleteGuildEmojiResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*DeleteGuildEmojiResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isDeleteGuildEmojiResponse_Response interface {
	isDeleteGuildEmojiResponse_Response()
}

type DeleteGuildEmojiResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type DeleteGuildEmojiResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*DeleteGuildEmojiResponse_Error) isDeleteGuildEmojiResponse_Response() {}

func (*DeleteGuildEmojiResponse_Data) isDeleteGuildEmojiResponse_Response() {}

type GetCurrentUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCurrentUserRequest) Reset() {
	*x = GetCurrentUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentUserRequest) ProtoMessage() {}

func (x *GetCurrentUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentUserRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentUserRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{99}
}

type GetCurrentUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetCurrentUserResponse_Error
	//	*GetCurrentUserResponse_Data_
	Response isGetCurrentUserResponse_Response `protobuf_oneof:"response"`
}

func (x *GetCurrentUserResponse) Reset() {
	*x = GetCurrentUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentUserResponse) ProtoMessage() {}

func (x *GetCurrentUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentUserResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentUserResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{100}
}

func (m *GetCurrentUserResponse) GetResponse() isGetCurrentUserResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetCurrentUserResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*GetCurrentUserResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetCurrentUserResponse) GetData() *GetCurrentUserResponse_Data {
	if x, ok := x.GetResponse().(*GetCurrentUserResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isGetCurrentUserResponse_Response interface {
	isGetCurrentUserResponse_Response()
}

type GetCurrentUserResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetCurrentUserResponse_Data_ struct {
	Data *GetCurrentUserResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetCurrentUserResponse_Error) isGetCurrentUserResponse_Response() {}

func (*GetCurrentUserResponse_Data_) isGetCurrentUserResponse_Response() {}

type GetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"fixed64,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{101}
}

func (x *GetUserRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetUserResponse_Error
	//	*GetUserResponse_Data_
	Response isGetUserResponse_Response `protobuf_oneof:"response"`
}

func (x *GetUserResponse) Reset() {
	*x = GetUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse) ProtoMessage() {}

func (x *GetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{102}
}

func (m *GetUserResponse) GetResponse() isGetUserResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetUserResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*GetUserResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetUserResponse) GetData() *GetUserResponse_Data {
	if x, ok := x.GetResponse().(*GetUserResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isGetUserResponse_Response interface {
	isGetUserResponse_Response()
}

type GetUserResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetUserResponse_Data_ struct {
	Data *GetUserResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetUserResponse_Error) isGetUserResponse_Response() {}

func (*GetUserResponse_Data_) isGetUserResponse_Response() {}

type ModifyCurrentUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username *wrappers.StringValue `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Avatar   *wrappers.BytesValue  `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *ModifyCurrentUserRequest) Reset() {
	*x = ModifyCurrentUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyCurrentUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyCurrentUserRequest) ProtoMessage() {}

func (x *ModifyCurrentUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyCurrentUserRequest.ProtoReflect.Descriptor instead.
func (*ModifyCurrentUserRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{103}
}

func (x *ModifyCurrentUserRequest) GetUsername() *wrappers.StringValue {
	if x != nil {
		return x.Username
	}
	return nil
}

func (x *ModifyCurrentUserRequest) GetAvatar() *wrappers.BytesValue {
	if x != nil {
		return x.Avatar
	}
	return nil
}

type ModifyCurrentUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*ModifyCurrentUserResponse_Error
	//	*ModifyCurrentUserResponse_Data_
	Response isModifyCurrentUserResponse_Response `protobuf_oneof:"response"`
}

func (x *ModifyCurrentUserResponse) Reset() {
	*x = ModifyCurrentUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyCurrentUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyCurrentUserResponse) ProtoMessage() {}

func (x *ModifyCurrentUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyCurrentUserResponse.ProtoReflect.Descriptor instead.
func (*ModifyCurrentUserResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{104}
}

func (m *ModifyCurrentUserResponse) GetResponse() isModifyCurrentUserResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ModifyCurrentUserResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*ModifyCurrentUserResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ModifyCurrentUserResponse) GetData() *ModifyCurrentUserResponse_Data {
	if x, ok := x.GetResponse().(*ModifyCurrentUserResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isModifyCurrentUserResponse_Response interface {
	isModifyCurrentUserResponse_Response()
}

type ModifyCurrentUserResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ModifyCurrentUserResponse_Data_ struct {
	Data *ModifyCurrentUserResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*ModifyCurrentUserResponse_Error) isModifyCurrentUserResponse_Response() {}

func (*ModifyCurrentUserResponse_Data_) isModifyCurrentUserResponse_Response() {}

type LeaveGuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaveGuildRequest) Reset() {
	*x = LeaveGuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveGuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveGuildRequest) ProtoMessage() {}

func (x *LeaveGuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveGuildRequest.ProtoReflect.Descriptor instead.
func (*LeaveGuildRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{105}
}

type LeaveGuildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*LeaveGuildResponse_Error
	//	*LeaveGuildResponse_Data
	Response isLeaveGuildResponse_Response `protobuf_oneof:"response"`
}

func (x *LeaveGuildResponse) Reset() {
	*x = LeaveGuildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveGuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveGuildResponse) ProtoMessage() {}

func (x *LeaveGuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveGuildResponse.ProtoReflect.Descriptor instead.
func (*LeaveGuildResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{106}
}

func (m *LeaveGuildResponse) GetResponse() isLeaveGuildResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *LeaveGuildResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*LeaveGuildResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *LeaveGuildResponse) GetData() *empty.Empty {
	if x, ok := x.GetResponse().(*LeaveGuildResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isLeaveGuildResponse_Response interface {
	isLeaveGuildResponse_Response()
}

type LeaveGuildResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type LeaveGuildResponse_Data struct {
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*LeaveGuildResponse_Error) isLeaveGuildResponse_Response() {}

func (*LeaveGuildResponse_Data) isLeaveGuildResponse_Response() {}

type CreateDmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipientId uint64 `protobuf:"fixed64,1,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
}

func (x *CreateDmRequest) Reset() {
	*x = CreateDmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDmRequest) ProtoMessage() {}

func (x *CreateDmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDmRequest.ProtoReflect.Descriptor instead.
func (*CreateDmRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{107}
}

func (x *CreateDmRequest) GetRecipientId() uint64 {
	if x != nil {
		return x.RecipientId
	}
	return 0
}

type CreateDmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*CreateDmResponse_Error
	//	*CreateDmResponse_Data_
	Response isCreateDmResponse_Response `protobuf_oneof:"response"`
}

func (x *CreateDmResponse) Reset() {
	*x = CreateDmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDmResponse) ProtoMessage() {}

func (x *CreateDmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDmResponse.ProtoReflect.Descriptor instead.
func (*CreateDmResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{108}
}

func (m *CreateDmResponse) GetResponse() isCreateDmResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CreateDmResponse) GetError() *RestError {
	if x, ok := x.GetResponse().(*CreateDmResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CreateDmResponse) GetData() *CreateDmResponse_Data {
	if x, ok := x.GetResponse().(*CreateDmResponse_Data_); ok {
		return x.Data
	}
	return nil
}

type isCreateDmResponse_Response interface {
	isCreateDmResponse_Response()
}

type CreateDmResponse_Error struct {
	Error *RestError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CreateDmResponse_Data_ struct {
	Data *CreateDmResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*CreateDmResponse_Error) isCreateDmResponse_Response() {}

func (*CreateDmResponse_Data_) isCreateDmResponse_Response() {}

type RestError_UnknownError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HttpStatus uint32 `protobuf:"varint,1,opt,name=http_status,json=httpStatus,proto3" json:"http_status,omitempty"`
	Code       uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RestError_UnknownError) Reset() {
	*x = RestError_UnknownError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestError_UnknownError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestError_UnknownError) ProtoMessage() {}

func (x *RestError_UnknownError) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestError_UnknownError.ProtoReflect.Descriptor instead.
func (*RestError_UnknownError) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{0, 0}
}

func (x *RestError_UnknownError) GetHttpStatus() uint32 {
	if x != nil {
		return x.HttpStatus
	}
	return 0
}

func (x *RestError_UnknownError) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RestError_UnknownError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RestError_ValidationError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string                             `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Fields  []*RestError_ValidationError_Field `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *RestError_ValidationError) Reset() {
	*x = RestError_ValidationError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestError_ValidationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestError_ValidationError) ProtoMessage() {}

func (x *RestError_ValidationError) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestError_ValidationError.ProtoReflect.Descriptor instead.
func (*RestError_ValidationError) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{0, 1}
}

func (x *RestError_ValidationError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RestError_ValidationError) GetFields() []*RestError_ValidationError_Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

type RestError_ResourceNotFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RestError_ResourceNotFound) Reset() {
	*x = RestError_ResourceNotFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestError_ResourceNotFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestError_ResourceNotFound) ProtoMessage() {}

func (x *RestError_ResourceNotFound) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestError_ResourceNotFound.ProtoReflect.Descriptor instead.
func (*RestError_ResourceNotFound) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{0, 2}
}

func (x *RestError_ResourceNotFound) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RestError_ResourceNotFound) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RestError_AccessDenied struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RestError_AccessDenied) Reset() {
	*x = RestError_AccessDenied{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestError_AccessDenied) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestError_AccessDenied) ProtoMessage() {}

func (x *RestError_AccessDenied) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestError_AccessDenied.ProtoReflect.Descriptor instead.
func (*RestError_AccessDenied) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{0, 3}
}

func (x *RestError_AccessDenied) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RestError_AccessDenied) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RestError_RateLimited struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Global  bool   `protobuf:"varint,1,opt,name=global,proto3" json:"global,omitempty"`
	RetryAt uint32 `protobuf:"varint,2,opt,name=retry_at,json=retryAt,proto3" json:"retry_at,omitempty"`
}

func (x *RestError_RateLimited) Reset() {
	*x = RestError_RateLimited{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestError_RateLimited) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestError_RateLimited) ProtoMessage() {}

func (x *RestError_RateLimited) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestError_RateLimited.ProtoReflect.Descriptor instead.
func (*RestError_RateLimited) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{0, 4}
}

func (x *RestError_RateLimited) GetGlobal() bool {
	if x != nil {
		return x.Global
	}
	return false
}

func (x *RestError_RateLimited) GetRetryAt() uint32 {
	if x != nil {
		return x.RetryAt
	}
	return 0
}

type RestError_ValidationError_Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Code    string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RestError_ValidationError_Field) Reset() {
	*x = RestError_ValidationError_Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestError_ValidationError_Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestError_ValidationError_Field) ProtoMessage() {}

func (x *RestError_ValidationError_Field) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestError_ValidationError_Field.ProtoReflect.Descriptor instead.
func (*RestError_ValidationError_Field) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *RestError_ValidationError_Field) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RestError_ValidationError_Field) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RestError_ValidationError_Field) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ModifyGuildResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guild *model.GuildData `protobuf:"bytes,1,opt,name=guild,proto3" json:"guild,omitempty"`
}

func (x *ModifyGuildResponse_Data) Reset() {
	*x = ModifyGuildResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGuildResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGuildResponse_Data) ProtoMessage() {}

func (x *ModifyGuildResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGuildResponse_Data.ProtoReflect.Descriptor instead.
func (*ModifyGuildResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ModifyGuildResponse_Data) GetGuild() *model.GuildData {
	if x != nil {
		return x.Guild
	}
	return nil
}

type CreateGuildChannelResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *model.ChannelData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *CreateGuildChannelResponse_Data) Reset() {
	*x = CreateGuildChannelResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGuildChannelResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGuildChannelResponse_Data) ProtoMessage() {}

func (x *CreateGuildChannelResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGuildChannelResponse_Data.ProtoReflect.Descriptor instead.
func (*CreateGuildChannelResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CreateGuildChannelResponse_Data) GetChannel() *model.ChannelData {
	if x != nil {
		return x.Channel
	}
	return nil
}

type ModifyGuildChannelPositionsRequest_ChannelPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64 `protobuf:"fixed64,1,opt,name=id,proto3" json:"id,omitempty"`
	Position uint32 `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *ModifyGuildChannelPositionsRequest_ChannelPosition) Reset() {
	*x = ModifyGuildChannelPositionsRequest_ChannelPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGuildChannelPositionsRequest_ChannelPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGuildChannelPositionsRequest_ChannelPosition) ProtoMessage() {}

func (x *ModifyGuildChannelPositionsRequest_ChannelPosition) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGuildChannelPositionsRequest_ChannelPosition.ProtoReflect.Descriptor instead.
func (*ModifyGuildChannelPositionsRequest_ChannelPosition) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ModifyGuildChannelPositionsRequest_ChannelPosition) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModifyGuildChannelPositionsRequest_ChannelPosition) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type AddGuildMemberResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Added bool `protobuf:"varint,1,opt,name=added,proto3" json:"added,omitempty"`
}

func (x *AddGuildMemberResponse_Data) Reset() {
	*x = AddGuildMemberResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGuildMemberResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGuildMemberResponse_Data) ProtoMessage() {}

func (x *AddGuildMemberResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGuildMemberResponse_Data.ProtoReflect.Descriptor instead.
func (*AddGuildMemberResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{8, 0}
}

func (x *AddGuildMemberResponse_Data) GetAdded() bool {
	if x != nil {
		return x.Added
	}
	return false
}

type GetGuildBansResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bans []*model.GuildBanData `protobuf:"bytes,1,rep,name=bans,proto3" json:"bans,omitempty"`
}

func (x *GetGuildBansResponse_Data) Reset() {
	*x = GetGuildBansResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuildBansResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildBansResponse_Data) ProtoMessage() {}

func (x *GetGuildBansResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildBansResponse_Data.ProtoReflect.Descriptor instead.
func (*GetGuildBansResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{20, 0}
}

func (x *GetGuildBansResponse_Data) GetBans() []*model.GuildBanData {
	if x != nil {
		return x.Bans
	}
	return nil
}

type GetGuildBanResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ban *model.GuildBanData `protobuf:"bytes,1,opt,name=ban,proto3" json:"ban,omitempty"`
}

func (x *GetGuildBanResponse_Data) Reset() {
	*x = GetGuildBanResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuildBanResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildBanResponse_Data) ProtoMessage() {}

func (x *GetGuildBanResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildBanResponse_Data.ProtoReflect.Descriptor instead.
func (*GetGuildBanResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{22, 0}
}

func (x *GetGuildBanResponse_Data) GetBan() *model.GuildBanData {
	if x != nil {
		return x.Ban
	}
	return nil
}

type CreateGuildRoleResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *model.RoleData `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *CreateGuildRoleResponse_Data) Reset() {
	*x = CreateGuildRoleResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGuildRoleResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGuildRoleResponse_Data) ProtoMessage() {}

func (x *CreateGuildRoleResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGuildRoleResponse_Data.ProtoReflect.Descriptor instead.
func (*CreateGuildRoleResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{28, 0}
}

func (x *CreateGuildRoleResponse_Data) GetRole() *model.RoleData {
	if x != nil {
		return x.Role
	}
	return nil
}

type ModifyGuildRolePositionsRequest_RolePosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64 `protobuf:"fixed64,1,opt,name=id,proto3" json:"id,omitempty"`
	Position uint32 `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *ModifyGuildRolePositionsRequest_RolePosition) Reset() {
	*x = ModifyGuildRolePositionsRequest_RolePosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGuildRolePositionsRequest_RolePosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGuildRolePositionsRequest_RolePosition) ProtoMessage() {}

func (x *ModifyGuildRolePositionsRequest_RolePosition) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGuildRolePositionsRequest_RolePosition.ProtoReflect.Descriptor instead.
func (*ModifyGuildRolePositionsRequest_RolePosition) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{29, 0}
}

func (x *ModifyGuildRolePositionsRequest_RolePosition) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModifyGuildRolePositionsRequest_RolePosition) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type ModifyGuildRolePositionsResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []*model.RoleData `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *ModifyGuildRolePositionsResponse_Data) Reset() {
	*x = ModifyGuildRolePositionsResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGuildRolePositionsResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGuildRolePositionsResponse_Data) ProtoMessage() {}

func (x *ModifyGuildRolePositionsResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGuildRolePositionsResponse_Data.ProtoReflect.Descriptor instead.
func (*ModifyGuildRolePositionsResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{30, 0}
}

func (x *ModifyGuildRolePositionsResponse_Data) GetRoles() []*model.RoleData {
	if x != nil {
		return x.Roles
	}
	return nil
}

type ModifyGuildRoleResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *model.RoleData `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *ModifyGuildRoleResponse_Data) Reset() {
	*x = ModifyGuildRoleResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGuildRoleResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGuildRoleResponse_Data) ProtoMessage() {}

func (x *ModifyGuildRoleResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGuildRoleResponse_Data.ProtoReflect.Descriptor instead.
func (*ModifyGuildRoleResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{32, 0}
}

func (x *ModifyGuildRoleResponse_Data) GetRole() *model.RoleData {
	if x != nil {
		return x.Role
	}
	return nil
}

type GetGuildVoiceRegionsResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regions []string `protobuf:"bytes,1,rep,name=regions,proto3" json:"regions,omitempty"`
}

func (x *GetGuildVoiceRegionsResponse_Data) Reset() {
	*x = GetGuildVoiceRegionsResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuildVoiceRegionsResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildVoiceRegionsResponse_Data) ProtoMessage() {}

func (x *GetGuildVoiceRegionsResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildVoiceRegionsResponse_Data.ProtoReflect.Descriptor instead.
func (*GetGuildVoiceRegionsResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{40, 0}
}

func (x *GetGuildVoiceRegionsResponse_Data) GetRegions() []string {
	if x != nil {
		return x.Regions
	}
	return nil
}

type GetGuildInvitesResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Invites []*model.InviteData `protobuf:"bytes,1,rep,name=invites,proto3" json:"invites,omitempty"`
}

func (x *GetGuildInvitesResponse_Data) Reset() {
	*x = GetGuildInvitesResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuildInvitesResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildInvitesResponse_Data) ProtoMessage() {}

func (x *GetGuildInvitesResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildInvitesResponse_Data.ProtoReflect.Descriptor instead.
func (*GetGuildInvitesResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{42, 0}
}

func (x *GetGuildInvitesResponse_Data) GetInvites() []*model.InviteData {
	if x != nil {
		return x.Invites
	}
	return nil
}

type ModifyChannelRequest_ChannelPermissionOverwritesValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*model.ChannelData_ChannelPermissionOverwriteData `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ModifyChannelRequest_ChannelPermissionOverwritesValue) Reset() {
	*x = ModifyChannelRequest_ChannelPermissionOverwritesValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyChannelRequest_ChannelPermissionOverwritesValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyChannelRequest_ChannelPermissionOverwritesValue) ProtoMessage() {}

func (x *ModifyChannelRequest_ChannelPermissionOverwritesValue) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyChannelRequest_ChannelPermissionOverwritesValue.ProtoReflect.Descriptor instead.
func (*ModifyChannelRequest_ChannelPermissionOverwritesValue) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{43, 0}
}

func (x *ModifyChannelRequest_ChannelPermissionOverwritesValue) GetValues() []*model.ChannelData_ChannelPermissionOverwriteData {
	if x != nil {
		return x.Values
	}
	return nil
}

type ModifyChannelResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *model.ChannelData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *ModifyChannelResponse_Data) Reset() {
	*x = ModifyChannelResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyChannelResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyChannelResponse_Data) ProtoMessage() {}

func (x *ModifyChannelResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyChannelResponse_Data.ProtoReflect.Descriptor instead.
func (*ModifyChannelResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{44, 0}
}

func (x *ModifyChannelResponse_Data) GetChannel() *model.ChannelData {
	if x != nil {
		return x.Channel
	}
	return nil
}

type GetChannelMessagesResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*model.MessageData `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *GetChannelMessagesResponse_Data) Reset() {
	*x = GetChannelMessagesResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelMessagesResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelMessagesResponse_Data) ProtoMessage() {}

func (x *GetChannelMessagesResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelMessagesResponse_Data.ProtoReflect.Descriptor instead.
func (*GetChannelMessagesResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{48, 0}
}

func (x *GetChannelMessagesResponse_Data) GetMessages() []*model.MessageData {
	if x != nil {
		return x.Messages
	}
	return nil
}

type GetChannelMessageResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *model.MessageData `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetChannelMessageResponse_Data) Reset() {
	*x = GetChannelMessageResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelMessageResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelMessageResponse_Data) ProtoMessage() {}

func (x *GetChannelMessageResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelMessageResponse_Data.ProtoReflect.Descriptor instead.
func (*GetChannelMessageResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{50, 0}
}

func (x *GetChannelMessageResponse_Data) GetMessage() *model.MessageData {
	if x != nil {
		return x.Message
	}
	return nil
}

type CreateMessageRequest_AllowedMentions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parse *CreateMessageRequest_AllowedMentions_AllowedMentionTypes `protobuf:"bytes,1,opt,name=parse,proto3" json:"parse,omitempty"`
	Roles *model.SnowflakeListValue                                 `protobuf:"bytes,2,opt,name=roles,proto3" json:"roles,omitempty"`
	Users *model.SnowflakeListValue                                 `protobuf:"bytes,3,opt,name=users,proto3" json:"users,omitempty"`
}

func (x *CreateMessageRequest_AllowedMentions) Reset() {
	*x = CreateMessageRequest_AllowedMentions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMessageRequest_AllowedMentions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMessageRequest_AllowedMentions) ProtoMessage() {}

func (x *CreateMessageRequest_AllowedMentions) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMessageRequest_AllowedMentions.ProtoReflect.Descriptor instead.
func (*CreateMessageRequest_AllowedMentions) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{51, 0}
}

func (x *CreateMessageRequest_AllowedMentions) GetParse() *CreateMessageRequest_AllowedMentions_AllowedMentionTypes {
	if x != nil {
		return x.Parse
	}
	return nil
}

func (x *CreateMessageRequest_AllowedMentions) GetRoles() *model.SnowflakeListValue {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *CreateMessageRequest_AllowedMentions) GetUsers() *model.SnowflakeListValue {
	if x != nil {
		return x.Users
	}
	return nil
}

type CreateMessageRequest_Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *CreateMessageRequest_Attachment) Reset() {
	*x = CreateMessageRequest_Attachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMessageRequest_Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMessageRequest_Attachment) ProtoMessage() {}

func (x *CreateMessageRequest_Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMessageRequest_Attachment.ProtoReflect.Descriptor instead.
func (*CreateMessageRequest_Attachment) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{51, 1}
}

func (x *CreateMessageRequest_Attachment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMessageRequest_Attachment) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type CreateMessageRequest_AllowedMentions_AllowedMentionTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles    bool `protobuf:"varint,1,opt,name=roles,proto3" json:"roles,omitempty"`
	Users    bool `protobuf:"varint,2,opt,name=users,proto3" json:"users,omitempty"`
	Everyone bool `protobuf:"varint,3,opt,name=everyone,proto3" json:"everyone,omitempty"`
}

func (x *CreateMessageRequest_AllowedMentions_AllowedMentionTypes) Reset() {
	*x = CreateMessageRequest_AllowedMentions_AllowedMentionTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMessageRequest_AllowedMentions_AllowedMentionTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMessageRequest_AllowedMentions_AllowedMentionTypes) ProtoMessage() {}

func (x *CreateMessageRequest_AllowedMentions_AllowedMentionTypes) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMessageRequest_AllowedMentions_AllowedMentionTypes.ProtoReflect.Descriptor instead.
func (*CreateMessageRequest_AllowedMentions_AllowedMentionTypes) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{51, 0, 0}
}

func (x *CreateMessageRequest_AllowedMentions_AllowedMentionTypes) GetRoles() bool {
	if x != nil {
		return x.Roles
	}
	return false
}

func (x *CreateMessageRequest_AllowedMentions_AllowedMentionTypes) GetUsers() bool {
	if x != nil {
		return x.Users
	}
	return false
}

func (x *CreateMessageRequest_AllowedMentions_AllowedMentionTypes) GetEveryone() bool {
	if x != nil {
		return x.Everyone
	}
	return false
}

type CreateMessageResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *model.MessageData `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateMessageResponse_Data) Reset() {
	*x = CreateMessageResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMessageResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMessageResponse_Data) ProtoMessage() {}

func (x *CreateMessageResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMessageResponse_Data.ProtoReflect.Descriptor instead.
func (*CreateMessageResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{52, 0}
}

func (x *CreateMessageResponse_Data) GetMessage() *model.MessageData {
	if x != nil {
		return x.Message
	}
	return nil
}

type CrosspostMessageResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *model.MessageData `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CrosspostMessageResponse_Data) Reset() {
	*x = CrosspostMessageResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrosspostMessageResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrosspostMessageResponse_Data) ProtoMessage() {}

func (x *CrosspostMessageResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrosspostMessageResponse_Data.ProtoReflect.Descriptor instead.
func (*CrosspostMessageResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{54, 0}
}

func (x *CrosspostMessageResponse_Data) GetMessage() *model.MessageData {
	if x != nil {
		return x.Message
	}
	return nil
}

type EditMessageResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *model.MessageData `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EditMessageResponse_Data) Reset() {
	*x = EditMessageResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditMessageResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditMessageResponse_Data) ProtoMessage() {}

func (x *EditMessageResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditMessageResponse_Data.ProtoReflect.Descriptor instead.
func (*EditMessageResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{66, 0}
}

func (x *EditMessageResponse_Data) GetMessage() *model.MessageData {
	if x != nil {
		return x.Message
	}
	return nil
}

type GetChannelInvitesResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Invites []*model.InviteData `protobuf:"bytes,1,rep,name=invites,proto3" json:"invites,omitempty"`
}

func (x *GetChannelInvitesResponse_Data) Reset() {
	*x = GetChannelInvitesResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelInvitesResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelInvitesResponse_Data) ProtoMessage() {}

func (x *GetChannelInvitesResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelInvitesResponse_Data.ProtoReflect.Descriptor instead.
func (*GetChannelInvitesResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{74, 0}
}

func (x *GetChannelInvitesResponse_Data) GetInvites() []*model.InviteData {
	if x != nil {
		return x.Invites
	}
	return nil
}

type CreateChannelInviteResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Invite *model.InviteData `protobuf:"bytes,1,opt,name=invite,proto3" json:"invite,omitempty"`
}

func (x *CreateChannelInviteResponse_Data) Reset() {
	*x = CreateChannelInviteResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChannelInviteResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChannelInviteResponse_Data) ProtoMessage() {}

func (x *CreateChannelInviteResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChannelInviteResponse_Data.ProtoReflect.Descriptor instead.
func (*CreateChannelInviteResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{76, 0}
}

func (x *CreateChannelInviteResponse_Data) GetInvite() *model.InviteData {
	if x != nil {
		return x.Invite
	}
	return nil
}

type FollowNewsChannelResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId uint64 `protobuf:"fixed64,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	WebhookId uint64 `protobuf:"fixed64,2,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
}

func (x *FollowNewsChannelResponse_Data) Reset() {
	*x = FollowNewsChannelResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowNewsChannelResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowNewsChannelResponse_Data) ProtoMessage() {}

func (x *FollowNewsChannelResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowNewsChannelResponse_Data.ProtoReflect.Descriptor instead.
func (*FollowNewsChannelResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{80, 0}
}

func (x *FollowNewsChannelResponse_Data) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *FollowNewsChannelResponse_Data) GetWebhookId() uint64 {
	if x != nil {
		return x.WebhookId
	}
	return 0
}

type GetPinnedMessagesResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*model.MessageData `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *GetPinnedMessagesResponse_Data) Reset() {
	*x = GetPinnedMessagesResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPinnedMessagesResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPinnedMessagesResponse_Data) ProtoMessage() {}

func (x *GetPinnedMessagesResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPinnedMessagesResponse_Data.ProtoReflect.Descriptor instead.
func (*GetPinnedMessagesResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{84, 0}
}

func (x *GetPinnedMessagesResponse_Data) GetMessages() []*model.MessageData {
	if x != nil {
		return x.Messages
	}
	return nil
}

type ListGuildEmojisResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Emojis []*model.EmojiData `protobuf:"bytes,1,rep,name=emojis,proto3" json:"emojis,omitempty"`
}

func (x *ListGuildEmojisResponse_Data) Reset() {
	*x = ListGuildEmojisResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGuildEmojisResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGuildEmojisResponse_Data) ProtoMessage() {}

func (x *ListGuildEmojisResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGuildEmojisResponse_Data.ProtoReflect.Descriptor instead.
func (*ListGuildEmojisResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{90, 0}
}

func (x *ListGuildEmojisResponse_Data) GetEmojis() []*model.EmojiData {
	if x != nil {
		return x.Emojis
	}
	return nil
}

type GetGuildEmojiResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Emoji *model.EmojiData `protobuf:"bytes,1,opt,name=emoji,proto3" json:"emoji,omitempty"`
}

func (x *GetGuildEmojiResponse_Data) Reset() {
	*x = GetGuildEmojiResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuildEmojiResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildEmojiResponse_Data) ProtoMessage() {}

func (x *GetGuildEmojiResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildEmojiResponse_Data.ProtoReflect.Descriptor instead.
func (*GetGuildEmojiResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{92, 0}
}

func (x *GetGuildEmojiResponse_Data) GetEmoji() *model.EmojiData {
	if x != nil {
		return x.Emoji
	}
	return nil
}

type CreateGuildEmojiResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Emoji *model.EmojiData `protobuf:"bytes,1,opt,name=emoji,proto3" json:"emoji,omitempty"`
}

func (x *CreateGuildEmojiResponse_Data) Reset() {
	*x = CreateGuildEmojiResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGuildEmojiResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGuildEmojiResponse_Data) ProtoMessage() {}

func (x *CreateGuildEmojiResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGuildEmojiResponse_Data.ProtoReflect.Descriptor instead.
func (*CreateGuildEmojiResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{94, 0}
}

func (x *CreateGuildEmojiResponse_Data) GetEmoji() *model.EmojiData {
	if x != nil {
		return x.Emoji
	}
	return nil
}

type ModifyGuildEmojiResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Emoji *model.EmojiData `protobuf:"bytes,1,opt,name=emoji,proto3" json:"emoji,omitempty"`
}

func (x *ModifyGuildEmojiResponse_Data) Reset() {
	*x = ModifyGuildEmojiResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGuildEmojiResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGuildEmojiResponse_Data) ProtoMessage() {}

func (x *ModifyGuildEmojiResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGuildEmojiResponse_Data.ProtoReflect.Descriptor instead.
func (*ModifyGuildEmojiResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{96, 0}
}

func (x *ModifyGuildEmojiResponse_Data) GetEmoji() *model.EmojiData {
	if x != nil {
		return x.Emoji
	}
	return nil
}

type GetCurrentUserResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *model.UserData `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetCurrentUserResponse_Data) Reset() {
	*x = GetCurrentUserResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentUserResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentUserResponse_Data) ProtoMessage() {}

func (x *GetCurrentUserResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentUserResponse_Data.ProtoReflect.Descriptor instead.
func (*GetCurrentUserResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{100, 0}
}

func (x *GetCurrentUserResponse_Data) GetUser() *model.UserData {
	if x != nil {
		return x.User
	}
	return nil
}

type GetUserResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *model.UserData `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetUserResponse_Data) Reset() {
	*x = GetUserResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse_Data) ProtoMessage() {}

func (x *GetUserResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResponse_Data.ProtoReflect.Descriptor instead.
func (*GetUserResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{102, 0}
}

func (x *GetUserResponse_Data) GetUser() *model.UserData {
	if x != nil {
		return x.User
	}
	return nil
}

type ModifyCurrentUserResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *model.UserData `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ModifyCurrentUserResponse_Data) Reset() {
	*x = ModifyCurrentUserResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyCurrentUserResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyCurrentUserResponse_Data) ProtoMessage() {}

func (x *ModifyCurrentUserResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyCurrentUserResponse_Data.ProtoReflect.Descriptor instead.
func (*ModifyCurrentUserResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{104, 0}
}

func (x *ModifyCurrentUserResponse_Data) GetUser() *model.UserData {
	if x != nil {
		return x.User
	}
	return nil
}

type CreateDmResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *model.ChannelData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *CreateDmResponse_Data) Reset() {
	*x = CreateDmResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_v1_rest_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDmResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDmResponse_Data) ProtoMessage() {}

func (x *CreateDmResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_rest_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDmResponse_Data.ProtoReflect.Descriptor instead.
func (*CreateDmResponse_Data) Descriptor() ([]byte, []int) {
	return file_discord_v1_rest_proto_rawDescGZIP(), []int{108, 0}
}

func (x *CreateDmResponse_Data) GetChannel() *model.ChannelData {
	if x != nil {
		return x.Channel
	}
	return nil
}

var File_discord_v1_rest_proto protoreflect.FileDescriptor

var file_discord_v1_rest_proto_rawDesc = []byte{
	0x0a, 0x15, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x07, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x54, 0x0a, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x5d, 0x0a, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x61, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x6f, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x54, 0x0a, 0x0d, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x64, 0x65, 0x6e, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6e, 0x69, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6e, 0x69, 0x65, 0x64, 0x12,
	0x51, 0x0a, 0x0c, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x65, 0x64, 0x1a, 0x5d, 0x0a, 0x0c, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0xc6, 0x01, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x4e, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a,
	0x49, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x40, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x3c, 0x0a, 0x0c,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6e, 0x69, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x40, 0x0a, 0x0b, 0x52, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x74, 0x72, 0x79, 0x41, 0x74, 0x42, 0x0c, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x86, 0x09, 0x0a, 0x12, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x12, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x60, 0x0a, 0x1d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x1b, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x54, 0x0a, 0x17, 0x65, 0x78, 0x70, 0x6c,
	0x69, 0x63, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x15, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x4c,
	0x0a, 0x0e, 0x61, 0x66, 0x6b, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c,
	0x61, 0x66, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0b,
	0x61, 0x66, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0a, 0x61, 0x66, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x08,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x33, 0x0a, 0x06, 0x73, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x73, 0x70,
	0x6c, 0x61, 0x73, 0x68, 0x12, 0x33, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x11, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6e,
	0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x50, 0x0a,
	0x10, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0e, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x61, 0x0a, 0x19, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6e, 0x6f, 0x77,
	0x66, 0x6c, 0x61, 0x6b, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x16, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x47, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x22, 0xe3, 0x01, 0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c,
	0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65,
	0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3f, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x05, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xda, 0x05, 0x0a, 0x19, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x70, 0x79, 0x6c, 0x6f,
	0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x32, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x12, 0x36, 0x0a, 0x07, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x07, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x4b, 0x0a, 0x13, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x77, 0x0a, 0x15, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6f,
	0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x42, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x14, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f,
	0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x09, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70,
	0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x04, 0x6e, 0x73, 0x66, 0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x73, 0x66, 0x77, 0x12, 0x46,
	0x0a, 0x10, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xf7, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x4c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x45, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xdf, 0x01, 0x0a, 0x22, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x76, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x49, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x41, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x99, 0x01, 0x0a, 0x23, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f,
	0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xab,
	0x02, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12, 0x40, 0x0a, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x79, 0x6c, 0x6f,
	0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x04,
	0x6d, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6d, 0x75, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x04,
	0x64, 0x65, 0x61, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x65, 0x61, 0x66, 0x22, 0xc6, 0x01, 0x0a,
	0x16, 0x41, 0x64, 0x64, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x48, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x1c, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9a, 0x03, 0x0a, 0x18, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x30, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x69, 0x63,
	0x6b, 0x12, 0x40, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c,
	0x61, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x75, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6d,
	0x75, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x65, 0x61, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64,
	0x65, 0x61, 0x66, 0x12, 0x45, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x19, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x0a, 0x1c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x22, 0x93, 0x01, 0x0a, 0x1d, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9d, 0x01, 0x0a,
	0x19, 0x41, 0x64, 0x64, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f,
	0x67, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x90, 0x01, 0x0a,
	0x1a, 0x41, 0x64, 0x64, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c,
	0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65,
	0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xa0, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0x93, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7f, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x46, 0x0a, 0x10, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x19, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42,
	0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0xe6, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x46, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x42, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x40, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x38, 0x0a, 0x04, 0x62, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42,
	0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x62, 0x61, 0x6e, 0x73, 0x42, 0x0a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x45, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x79,
	0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x3e, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x03,
	0x62, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x79, 0x6c, 0x6f,
	0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x03, 0x62, 0x61, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xca, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x46, 0x0a, 0x10, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c,
	0x6f, 0x67, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x8c, 0x01,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7c, 0x0a, 0x15,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x16, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x82, 0x03, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x79,
	0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x05, 0x68, 0x6f, 0x69, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x68, 0x6f, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x6d, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f,
	0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xe8,
	0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f,
	0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x3c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x1f, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6a, 0x0a,
	0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x72, 0x6f, 0x6c, 0x65,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3e, 0x0a, 0x0c, 0x52, 0x6f, 0x6c,
	0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfc, 0x01, 0x0a, 0x20, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3e, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x42, 0x0a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9f, 0x03, 0x0a, 0x16, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32,
	0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x30, 0x0a, 0x05, 0x68, 0x6f, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x68,
	0x6f, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xe8, 0x01, 0x0a, 0x17, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x49, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3c, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x10,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x22, 0x8d, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x50, 0x72, 0x75, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04,
	0x64, 0x61, 0x79, 0x73, 0x12, 0x4f, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x79,
	0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x50, 0x72, 0x75, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xaf, 0x02, 0x0a, 0x16, 0x42, 0x65, 0x67,
	0x69, 0x6e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x75, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x04, 0x64, 0x61, 0x79, 0x73, 0x12, 0x4f, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70,
	0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x5f, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x11, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x50, 0x72, 0x75, 0x6e, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x46, 0x0a, 0x10, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x8d, 0x01, 0x0a, 0x17, 0x42,
	0x65, 0x67, 0x69, 0x6e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x75, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd6, 0x01, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f,
	0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x20, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xf0, 0x01, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x44, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xa1, 0x07, 0x0a, 0x14, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x70, 0x79,
	0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x05,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x12, 0x2e, 0x0a, 0x04, 0x6e, 0x73, 0x66, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x73, 0x66, 0x77,
	0x12, 0x4b, 0x0a, 0x13, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x72, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x36, 0x0a,
	0x07, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x62, 0x69,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x81, 0x01, 0x0a, 0x15, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x14, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x79, 0x6c, 0x6f,
	0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x1a, 0x7e, 0x0a, 0x20, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x5a, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x76,
	0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x22, 0xed, 0x01, 0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70,
	0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x45, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x79, 0x6c, 0x6f,
	0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x46, 0x0a, 0x10, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x8b, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x92, 0x02, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x06, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06,
	0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x3e, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06,
	0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53,
	0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xf9, 0x01, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x47, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x79,
	0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x60, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xf5, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x4b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x45, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xdb, 0x06, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x03, 0x74, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x03, 0x74, 0x74, 0x73, 0x12, 0x4a, 0x0a, 0x05, 0x65, 0x6d, 0x62, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x65,
	0x6d, 0x62, 0x65, 0x64, 0x12, 0x66, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f,
	0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x1a, 0xdb, 0x02, 0x0a, 0x0f, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x65, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x05, 0x70, 0x61, 0x72, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x12, 0x40, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c,
	0x61, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x1a, 0x5d, 0x0a, 0x13, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x72, 0x79, 0x6f,
	0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x76, 0x65, 0x72, 0x79, 0x6f,
	0x6e, 0x65, 0x1a, 0x3a, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xed,
	0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x45, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5f,
	0x0a, 0x17, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x70, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0a,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22,
	0xf3, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x70, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79,
	0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x6f,
	0x73, 0x73, 0x70, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x45, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x79,
	0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x73, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x22, 0x8c, 0x01, 0x0a, 0x16, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x76, 0x0a, 0x18, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x77, 0x6e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x22, 0x8f, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x77, 0x6e, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48,
	0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x1b, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x1a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x0a,
	0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x22, 0x90, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48,
	0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x7f, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x45, 0x6d, 0x6f, 0x6a,
	0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0a, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x22, 0x98, 0x01, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x45, 0x6d,
	0x6f, 0x6a, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c,
	0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65,
	0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x92, 0x02, 0x0a, 0x12, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0a, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64,
	0x12, 0x32, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x66,
	0x6c, 0x61, 0x67, 0x73, 0x22, 0xe9, 0x01, 0x0a, 0x13, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79,
	0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x45, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xa4, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0a,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x46, 0x0a, 0x10, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x8b, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x19, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x12, 0x46, 0x0a, 0x10, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x22, 0x90, 0x01, 0x0a, 0x1a, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xda, 0x02, 0x0a, 0x1d, 0x45, 0x64, 0x69, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0c, 0x6f,
	0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x05, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x05, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x04,
	0x64, 0x65, 0x6e, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x04,
	0x64, 0x65, 0x6e, 0x79, 0x12, 0x75, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x61, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x22, 0x94, 0x01, 0x0a, 0x1e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0xf4, 0x01, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x4b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x44,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x91, 0x04, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x61, 0x78,
	0x5f, 0x75, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x55, 0x73,
	0x65, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x06,
	0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x12, 0x47, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53,
	0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x61, 0x0a, 0x10, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x46, 0x0a, 0x10,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x22, 0xf6, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4d,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x70,
	0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x42, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x06, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb2, 0x01,
	0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0c, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x6f,
	0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0x95, 0x01, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6f, 0x0a, 0x18, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x12, 0x77, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x10, 0x77, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0xfc, 0x01, 0x0a, 0x19,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x4e, 0x65, 0x77, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x4c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0a, 0x77,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x42, 0x0a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x0a, 0x1d, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x94,
	0x01, 0x0a, 0x1e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x69, 0x6e, 0x6e,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x22, 0xf7, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x69, 0x6e, 0x6e,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x79, 0x6c,
	0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65,
	0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x47, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xae,
	0x01, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x95, 0x01, 0x0a, 0x1f, 0x41, 0x64, 0x64, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x98, 0x01, 0x0a, 0x22,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0xed, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d,
	0x6f, 0x6a, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79,
	0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x41, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x06, 0x65, 0x6d, 0x6f,
	0x6a, 0x69, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x79, 0x6c, 0x6f,
	0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x35, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a,
	0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x08, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x64, 0x22, 0xe7, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x79, 0x6c, 0x6f,
	0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x3f, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x05,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x79,
	0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xea, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6e, 0x6f,
	0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x10, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f,
	0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xed,
	0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d,
	0x6f, 0x6a, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c,
	0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65,
	0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x3f, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x6d, 0x6f,
	0x6a, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x65, 0x6d, 0x6f,
	0x6a, 0x69, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf4,
	0x01, 0x0a, 0x17, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d,
	0x6f, 0x6a, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x08, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x07, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x79, 0x6c,
	0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x46, 0x0a,
	0x10, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xed, 0x01, 0x0a, 0x18, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x79, 0x6c,
	0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65,
	0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d,
	0x6f, 0x6a, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3f, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x37, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x08, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x64,
	0x12, 0x46, 0x0a, 0x10, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xe6, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70,
	0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x48, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x3c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x42,
	0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xd8, 0x01, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3c, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x18, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x22, 0xec, 0x01, 0x0a, 0x19, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x34,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70,
	0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x13, 0x0a, 0x11, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x12, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79,
	0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x38, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xe3, 0x01, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x45, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x62, 0x0a, 0x1f, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x50, 0x01, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x70, 0x79, 0x6c, 0x6f, 0x6e, 0x62, 0x6f, 0x74, 0x2f, 0x70, 0x79, 0x6c, 0x6f, 0x6e,
	0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2d, 0x67, 0x6f, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_discord_v1_rest_proto_rawDescOnce sync.Once
	file_discord_v1_rest_proto_rawDescData = file_discord_v1_rest_proto_rawDesc
)

func file_discord_v1_rest_proto_rawDescGZIP() []byte {
	file_discord_v1_rest_proto_rawDescOnce.Do(func() {
		file_discord_v1_rest_proto_rawDescData = protoimpl.X.CompressGZIP(file_discord_v1_rest_proto_rawDescData)
	})
	return file_discord_v1_rest_proto_rawDescData
}

var file_discord_v1_rest_proto_msgTypes = make([]protoimpl.MessageInfo, 149)
var file_discord_v1_rest_proto_goTypes = []interface{}{
	(*RestError)(nil),                                                // 0: pylon.discord.v1.rest.RestError
	(*ModifyGuildRequest)(nil),                                       // 1: pylon.discord.v1.rest.ModifyGuildRequest
	(*ModifyGuildResponse)(nil),                                      // 2: pylon.discord.v1.rest.ModifyGuildResponse
	(*CreateGuildChannelRequest)(nil),                                // 3: pylon.discord.v1.rest.CreateGuildChannelRequest
	(*CreateGuildChannelResponse)(nil),                               // 4: pylon.discord.v1.rest.CreateGuildChannelResponse
	(*ModifyGuildChannelPositionsRequest)(nil),                       // 5: pylon.discord.v1.rest.ModifyGuildChannelPositionsRequest
	(*ModifyGuildChannelPositionsResponse)(nil),                      // 6: pylon.discord.v1.rest.ModifyGuildChannelPositionsResponse
	(*AddGuildMemberRequest)(nil),                                    // 7: pylon.discord.v1.rest.AddGuildMemberRequest
	(*AddGuildMemberResponse)(nil),                                   // 8: pylon.discord.v1.rest.AddGuildMemberResponse
	(*ModifyGuildMemberRequest)(nil),                                 // 9: pylon.discord.v1.rest.ModifyGuildMemberRequest
	(*ModifyGuildMemberResponse)(nil),                                // 10: pylon.discord.v1.rest.ModifyGuildMemberResponse
	(*ModifyCurrentUserNickRequest)(nil),                             // 11: pylon.discord.v1.rest.ModifyCurrentUserNickRequest
	(*ModifyCurrentUserNickResponse)(nil),                            // 12: pylon.discord.v1.rest.ModifyCurrentUserNickResponse
	(*AddGuildMemberRoleRequest)(nil),                                // 13: pylon.discord.v1.rest.AddGuildMemberRoleRequest
	(*AddGuildMemberRoleResponse)(nil),                               // 14: pylon.discord.v1.rest.AddGuildMemberRoleResponse
	(*RemoveGuildMemberRoleRequest)(nil),                             // 15: pylon.discord.v1.rest.RemoveGuildMemberRoleRequest
	(*RemoveGuildMemberRoleResponse)(nil),                            // 16: pylon.discord.v1.rest.RemoveGuildMemberRoleResponse
	(*RemoveGuildMemberRequest)(nil),                                 // 17: pylon.discord.v1.rest.RemoveGuildMemberRequest
	(*RemoveGuildMemberResponse)(nil),                                // 18: pylon.discord.v1.rest.RemoveGuildMemberResponse
	(*GetGuildBansRequest)(nil),                                      // 19: pylon.discord.v1.rest.GetGuildBansRequest
	(*GetGuildBansResponse)(nil),                                     // 20: pylon.discord.v1.rest.GetGuildBansResponse
	(*GetGuildBanRequest)(nil),                                       // 21: pylon.discord.v1.rest.GetGuildBanRequest
	(*GetGuildBanResponse)(nil),                                      // 22: pylon.discord.v1.rest.GetGuildBanResponse
	(*CreateGuildBanRequest)(nil),                                    // 23: pylon.discord.v1.rest.CreateGuildBanRequest
	(*CreateGuildBanResponse)(nil),                                   // 24: pylon.discord.v1.rest.CreateGuildBanResponse
	(*RemoveGuildBanRequest)(nil),                                    // 25: pylon.discord.v1.rest.RemoveGuildBanRequest
	(*RemoveGuildBanResponse)(nil),                                   // 26: pylon.discord.v1.rest.RemoveGuildBanResponse
	(*CreateGuildRoleRequest)(nil),                                   // 27: pylon.discord.v1.rest.CreateGuildRoleRequest
	(*CreateGuildRoleResponse)(nil),                                  // 28: pylon.discord.v1.rest.CreateGuildRoleResponse
	(*ModifyGuildRolePositionsRequest)(nil),                          // 29: pylon.discord.v1.rest.ModifyGuildRolePositionsRequest
	(*ModifyGuildRolePositionsResponse)(nil),                         // 30: pylon.discord.v1.rest.ModifyGuildRolePositionsResponse
	(*ModifyGuildRoleRequest)(nil),                                   // 31: pylon.discord.v1.rest.ModifyGuildRoleRequest
	(*ModifyGuildRoleResponse)(nil),                                  // 32: pylon.discord.v1.rest.ModifyGuildRoleResponse
	(*DeleteGuildRoleRequest)(nil),                                   // 33: pylon.discord.v1.rest.DeleteGuildRoleRequest
	(*DeleteGuildRoleResponse)(nil),                                  // 34: pylon.discord.v1.rest.DeleteGuildRoleResponse
	(*GetGuildPruneCountRequest)(nil),                                // 35: pylon.discord.v1.rest.GetGuildPruneCountRequest
	(*GetGuildPruneCountResponse)(nil),                               // 36: pylon.discord.v1.rest.GetGuildPruneCountResponse
	(*BeginGuildPruneRequest)(nil),                                   // 37: pylon.discord.v1.rest.BeginGuildPruneRequest
	(*BeginGuildPruneResponse)(nil),                                  // 38: pylon.discord.v1.rest.BeginGuildPruneResponse
	(*GetGuildVoiceRegionsRequest)(nil),                              // 39: pylon.discord.v1.rest.GetGuildVoiceRegionsRequest
	(*GetGuildVoiceRegionsResponse)(nil),                             // 40: pylon.discord.v1.rest.GetGuildVoiceRegionsResponse
	(*GetGuildInvitesRequest)(nil),                                   // 41: pylon.discord.v1.rest.GetGuildInvitesRequest
	(*GetGuildInvitesResponse)(nil),                                  // 42: pylon.discord.v1.rest.GetGuildInvitesResponse
	(*ModifyChannelRequest)(nil),                                     // 43: pylon.discord.v1.rest.ModifyChannelRequest
	(*ModifyChannelResponse)(nil),                                    // 44: pylon.discord.v1.rest.ModifyChannelResponse
	(*DeleteChannelRequest)(nil),                                     // 45: pylon.discord.v1.rest.DeleteChannelRequest
	(*DeleteChannelResponse)(nil),                                    // 46: pylon.discord.v1.rest.DeleteChannelResponse
	(*GetChannelMessagesRequest)(nil),                                // 47: pylon.discord.v1.rest.GetChannelMessagesRequest
	(*GetChannelMessagesResponse)(nil),                               // 48: pylon.discord.v1.rest.GetChannelMessagesResponse
	(*GetChannelMessageRequest)(nil),                                 // 49: pylon.discord.v1.rest.GetChannelMessageRequest
	(*GetChannelMessageResponse)(nil),                                // 50: pylon.discord.v1.rest.GetChannelMessageResponse
	(*CreateMessageRequest)(nil),                                     // 51: pylon.discord.v1.rest.CreateMessageRequest
	(*CreateMessageResponse)(nil),                                    // 52: pylon.discord.v1.rest.CreateMessageResponse
	(*CrosspostMessageRequest)(nil),                                  // 53: pylon.discord.v1.rest.CrosspostMessageRequest
	(*CrosspostMessageResponse)(nil),                                 // 54: pylon.discord.v1.rest.CrosspostMessageResponse
	(*CreateReactionRequest)(nil),                                    // 55: pylon.discord.v1.rest.CreateReactionRequest
	(*CreateReactionResponse)(nil),                                   // 56: pylon.discord.v1.rest.CreateReactionResponse
	(*DeleteOwnReactionRequest)(nil),                                 // 57: pylon.discord.v1.rest.DeleteOwnReactionRequest
	(*DeleteOwnReactionResponse)(nil),                                // 58: pylon.discord.v1.rest.DeleteOwnReactionResponse
	(*DeleteUserReactionRequest)(nil),                                // 59: pylon.discord.v1.rest.DeleteUserReactionRequest
	(*DeleteUserReactionResponse)(nil),                               // 60: pylon.discord.v1.rest.DeleteUserReactionResponse
	(*DeleteAllReactionsRequest)(nil),                                // 61: pylon.discord.v1.rest.DeleteAllReactionsRequest
	(*DeleteAllReactionsResponse)(nil),                               // 62: pylon.discord.v1.rest.DeleteAllReactionsResponse
	(*DeleteAllReactionsForEmojiRequest)(nil),                        // 63: pylon.discord.v1.rest.DeleteAllReactionsForEmojiRequest
	(*DeleteAllReactionsForEmojiResponse)(nil),                       // 64: pylon.discord.v1.rest.DeleteAllReactionsForEmojiResponse
	(*EditMessageRequest)(nil),                                       // 65: pylon.discord.v1.rest.EditMessageRequest
	(*EditMessageResponse)(nil),                                      // 66: pylon.discord.v1.rest.EditMessageResponse
	(*DeleteMessageRequest)(nil),                                     // 67: pylon.discord.v1.rest.DeleteMessageRequest
	(*DeleteMessageResponse)(nil),                                    // 68: pylon.discord.v1.rest.DeleteMessageResponse
	(*BulkDeleteMessagesRequest)(nil),                                // 69: pylon.discord.v1.rest.BulkDeleteMessagesRequest
	(*BulkDeleteMessagesResponse)(nil),                               // 70: pylon.discord.v1.rest.BulkDeleteMessagesResponse
	(*EditChannelPermissionsRequest)(nil),                            // 71: pylon.discord.v1.rest.EditChannelPermissionsRequest
	(*EditChannelPermissionsResponse)(nil),                           // 72: pylon.discord.v1.rest.EditChannelPermissionsResponse
	(*GetChannelInvitesRequest)(nil),                                 // 73: pylon.discord.v1.rest.GetChannelInvitesRequest
	(*GetChannelInvitesResponse)(nil),                                // 74: pylon.discord.v1.rest.GetChannelInvitesResponse
	(*CreateChannelInviteRequest)(nil),                               // 75: pylon.discord.v1.rest.CreateChannelInviteRequest
	(*CreateChannelInviteResponse)(nil),                              // 76: pylon.discord.v1.rest.CreateChannelInviteResponse
	(*DeleteChannelPermissionRequest)(nil),                           // 77: pylon.discord.v1.rest.DeleteChannelPermissionRequest
	(*DeleteChannelPermissionResponse)(nil),                          // 78: pylon.discord.v1.rest.DeleteChannelPermissionResponse
	(*FollowNewsChannelRequest)(nil),                                 // 79: pylon.discord.v1.rest.FollowNewsChannelRequest
	(*FollowNewsChannelResponse)(nil),                                // 80: pylon.discord.v1.rest.FollowNewsChannelResponse
	(*TriggerTypingIndicatorRequest)(nil),                            // 81: pylon.discord.v1.rest.TriggerTypingIndicatorRequest
	(*TriggerTypingIndicatorResponse)(nil),                           // 82: pylon.discord.v1.rest.TriggerTypingIndicatorResponse
	(*GetPinnedMessagesRequest)(nil),                                 // 83: pylon.discord.v1.rest.GetPinnedMessagesRequest
	(*GetPinnedMessagesResponse)(nil),                                // 84: pylon.discord.v1.rest.GetPinnedMessagesResponse
	(*AddPinnedChannelMessageRequest)(nil),                           // 85: pylon.discord.v1.rest.AddPinnedChannelMessageRequest
	(*AddPinnedChannelMessageResponse)(nil),                          // 86: pylon.discord.v1.rest.AddPinnedChannelMessageResponse
	(*DeletePinnedChannelMessageRequest)(nil),                        // 87: pylon.discord.v1.rest.DeletePinnedChannelMessageRequest
	(*DeletePinnedChannelMessageResponse)(nil),                       // 88: pylon.discord.v1.rest.DeletePinnedChannelMessageResponse
	(*ListGuildEmojisRequest)(nil),                                   // 89: pylon.discord.v1.rest.ListGuildEmojisRequest
	(*ListGuildEmojisResponse)(nil),                                  // 90: pylon.discord.v1.rest.ListGuildEmojisResponse
	(*GetGuildEmojiRequest)(nil),                                     // 91: pylon.discord.v1.rest.GetGuildEmojiRequest
	(*GetGuildEmojiResponse)(nil),                                    // 92: pylon.discord.v1.rest.GetGuildEmojiResponse
	(*CreateGuildEmojiRequest)(nil),                                  // 93: pylon.discord.v1.rest.CreateGuildEmojiRequest
	(*CreateGuildEmojiResponse)(nil),                                 // 94: pylon.discord.v1.rest.CreateGuildEmojiResponse
	(*ModifyGuildEmojiRequest)(nil),                                  // 95: pylon.discord.v1.rest.ModifyGuildEmojiRequest
	(*ModifyGuildEmojiResponse)(nil),                                 // 96: pylon.discord.v1.rest.ModifyGuildEmojiResponse
	(*DeleteGuildEmojiRequest)(nil),                                  // 97: pylon.discord.v1.rest.DeleteGuildEmojiRequest
	(*DeleteGuildEmojiResponse)(nil),                                 // 98: pylon.discord.v1.rest.DeleteGuildEmojiResponse
	(*GetCurrentUserRequest)(nil),                                    // 99: pylon.discord.v1.rest.GetCurrentUserRequest
	(*GetCurrentUserResponse)(nil),                                   // 100: pylon.discord.v1.rest.GetCurrentUserResponse
	(*GetUserRequest)(nil),                                           // 101: pylon.discord.v1.rest.GetUserRequest
	(*GetUserResponse)(nil),                                          // 102: pylon.discord.v1.rest.GetUserResponse
	(*ModifyCurrentUserRequest)(nil),                                 // 103: pylon.discord.v1.rest.ModifyCurrentUserRequest
	(*ModifyCurrentUserResponse)(nil),                                // 104: pylon.discord.v1.rest.ModifyCurrentUserResponse
	(*LeaveGuildRequest)(nil),                                        // 105: pylon.discord.v1.rest.LeaveGuildRequest
	(*LeaveGuildResponse)(nil),                                       // 106: pylon.discord.v1.rest.LeaveGuildResponse
	(*CreateDmRequest)(nil),                                          // 107: pylon.discord.v1.rest.CreateDmRequest
	(*CreateDmResponse)(nil),                                         // 108: pylon.discord.v1.rest.CreateDmResponse
	(*RestError_UnknownError)(nil),                                   // 109: pylon.discord.v1.rest.RestError.UnknownError
	(*RestError_ValidationError)(nil),                                // 110: pylon.discord.v1.rest.RestError.ValidationError
	(*RestError_ResourceNotFound)(nil),                               // 111: pylon.discord.v1.rest.RestError.ResourceNotFound
	(*RestError_AccessDenied)(nil),                                   // 112: pylon.discord.v1.rest.RestError.AccessDenied
	(*RestError_RateLimited)(nil),                                    // 113: pylon.discord.v1.rest.RestError.RateLimited
	(*RestError_ValidationError_Field)(nil),                          // 114: pylon.discord.v1.rest.RestError.ValidationError.Field
	(*ModifyGuildResponse_Data)(nil),                                 // 115: pylon.discord.v1.rest.ModifyGuildResponse.Data
	(*CreateGuildChannelResponse_Data)(nil),                          // 116: pylon.discord.v1.rest.CreateGuildChannelResponse.Data
	(*ModifyGuildChannelPositionsRequest_ChannelPosition)(nil),       // 117: pylon.discord.v1.rest.ModifyGuildChannelPositionsRequest.ChannelPosition
	(*AddGuildMemberResponse_Data)(nil),                              // 118: pylon.discord.v1.rest.AddGuildMemberResponse.Data
	(*GetGuildBansResponse_Data)(nil),                                // 119: pylon.discord.v1.rest.GetGuildBansResponse.Data
	(*GetGuildBanResponse_Data)(nil),                                 // 120: pylon.discord.v1.rest.GetGuildBanResponse.Data
	(*CreateGuildRoleResponse_Data)(nil),                             // 121: pylon.discord.v1.rest.CreateGuildRoleResponse.Data
	(*ModifyGuildRolePositionsRequest_RolePosition)(nil),             // 122: pylon.discord.v1.rest.ModifyGuildRolePositionsRequest.RolePosition
	(*ModifyGuildRolePositionsResponse_Data)(nil),                    // 123: pylon.discord.v1.rest.ModifyGuildRolePositionsResponse.Data
	(*ModifyGuildRoleResponse_Data)(nil),                             // 124: pylon.discord.v1.rest.ModifyGuildRoleResponse.Data
	(*GetGuildVoiceRegionsResponse_Data)(nil),                        // 125: pylon.discord.v1.rest.GetGuildVoiceRegionsResponse.Data
	(*GetGuildInvitesResponse_Data)(nil),                             // 126: pylon.discord.v1.rest.GetGuildInvitesResponse.Data
	(*ModifyChannelRequest_ChannelPermissionOverwritesValue)(nil),    // 127: pylon.discord.v1.rest.ModifyChannelRequest.ChannelPermissionOverwritesValue
	(*ModifyChannelResponse_Data)(nil),                               // 128: pylon.discord.v1.rest.ModifyChannelResponse.Data
	(*GetChannelMessagesResponse_Data)(nil),                          // 129: pylon.discord.v1.rest.GetChannelMessagesResponse.Data
	(*GetChannelMessageResponse_Data)(nil),                           // 130: pylon.discord.v1.rest.GetChannelMessageResponse.Data
	(*CreateMessageRequest_AllowedMentions)(nil),                     // 131: pylon.discord.v1.rest.CreateMessageRequest.AllowedMentions
	(*CreateMessageRequest_Attachment)(nil),                          // 132: pylon.discord.v1.rest.CreateMessageRequest.Attachment
	(*CreateMessageRequest_AllowedMentions_AllowedMentionTypes)(nil), // 133: pylon.discord.v1.rest.CreateMessageRequest.AllowedMentions.AllowedMentionTypes
	(*CreateMessageResponse_Data)(nil),                               // 134: pylon.discord.v1.rest.CreateMessageResponse.Data
	(*CrosspostMessageResponse_Data)(nil),                            // 135: pylon.discord.v1.rest.CrosspostMessageResponse.Data
	(*EditMessageResponse_Data)(nil),                                 // 136: pylon.discord.v1.rest.EditMessageResponse.Data
	(*GetChannelInvitesResponse_Data)(nil),                           // 137: pylon.discord.v1.rest.GetChannelInvitesResponse.Data
	(*CreateChannelInviteResponse_Data)(nil),                         // 138: pylon.discord.v1.rest.CreateChannelInviteResponse.Data
	(*FollowNewsChannelResponse_Data)(nil),                           // 139: pylon.discord.v1.rest.FollowNewsChannelResponse.Data
	(*GetPinnedMessagesResponse_Data)(nil),                           // 140: pylon.discord.v1.rest.GetPinnedMessagesResponse.Data
	(*ListGuildEmojisResponse_Data)(nil),                             // 141: pylon.discord.v1.rest.ListGuildEmojisResponse.Data
	(*GetGuildEmojiResponse_Data)(nil),                               // 142: pylon.discord.v1.rest.GetGuildEmojiResponse.Data
	(*CreateGuildEmojiResponse_Data)(nil),                            // 143: pylon.discord.v1.rest.CreateGuildEmojiResponse.Data
	(*ModifyGuildEmojiResponse_Data)(nil),                            // 144: pylon.discord.v1.rest.ModifyGuildEmojiResponse.Data
	(*GetCurrentUserResponse_Data)(nil),                              // 145: pylon.discord.v1.rest.GetCurrentUserResponse.Data
	(*GetUserResponse_Data)(nil),                                     // 146: pylon.discord.v1.rest.GetUserResponse.Data
	(*ModifyCurrentUserResponse_Data)(nil),                           // 147: pylon.discord.v1.rest.ModifyCurrentUserResponse.Data
	(*CreateDmResponse_Data)(nil),                                    // 148: pylon.discord.v1.rest.CreateDmResponse.Data
	(*wrappers.StringValue)(nil),                                     // 149: google.protobuf.StringValue
	(*wrappers.UInt32Value)(nil),                                     // 150: google.protobuf.UInt32Value
	(*model.SnowflakeValue)(nil),                                     // 151: pylon.discord.v1.model.SnowflakeValue
	(*wrappers.BytesValue)(nil),                                      // 152: google.protobuf.BytesValue
	(model.ChannelData_ChannelType)(0),                               // 153: pylon.discord.v1.model.ChannelData.ChannelType
	(*model.ChannelData_ChannelPermissionOverwriteData)(nil),         // 154: pylon.discord.v1.model.ChannelData.ChannelPermissionOverwriteData
	(*wrappers.BoolValue)(nil),                                       // 155: google.protobuf.BoolValue
	(*empty.Empty)(nil),                                              // 156: google.protobuf.Empty
	(*model.SnowflakeListValue)(nil),                                 // 157: pylon.discord.v1.model.SnowflakeListValue
	(*model.PermissionsValue)(nil),                                   // 158: pylon.discord.v1.model.PermissionsValue
	(*model.MessageData_MessageEmbedData)(nil),                       // 159: pylon.discord.v1.model.MessageData.MessageEmbedData
	(model.ChannelData_ChannelPermissionOverwriteData_ChannelPermissionOverwriteType)(0), // 160: pylon.discord.v1.model.ChannelData.ChannelPermissionOverwriteData.ChannelPermissionOverwriteType
	(model.InviteData_InviteTargetUserType)(0),                                           // 161: pylon.discord.v1.model.InviteData.InviteTargetUserType
	(*model.GuildData)(nil),    // 162: pylon.discord.v1.model.GuildData
	(*model.ChannelData)(nil),  // 163: pylon.discord.v1.model.ChannelData
	(*model.GuildBanData)(nil), // 164: pylon.discord.v1.model.GuildBanData
	(*model.RoleData)(nil),     // 165: pylon.discord.v1.model.RoleData
	(*model.InviteData)(nil),   // 166: pylon.discord.v1.model.InviteData
	(*model.MessageData)(nil),  // 167: pylon.discord.v1.model.MessageData
	(*model.EmojiData)(nil),    // 168: pylon.discord.v1.model.EmojiData
	(*model.UserData)(nil),     // 169: pylon.discord.v1.model.UserData
}
var file_discord_v1_rest_proto_depIdxs = []int32{
	109, // 0: pylon.discord.v1.rest.RestError.unknown_error:type_name -> pylon.discord.v1.rest.RestError.UnknownError
	110, // 1: pylon.discord.v1.rest.RestError.validation_error:type_name -> pylon.discord.v1.rest.RestError.ValidationError
	111, // 2: pylon.discord.v1.rest.RestError.resource_not_found:type_name -> pylon.discord.v1.rest.RestError.ResourceNotFound
	112, // 3: pylon.discord.v1.rest.RestError.access_denied:type_name -> pylon.discord.v1.rest.RestError.AccessDenied
	113, // 4: pylon.discord.v1.rest.RestError.rate_limited:type_name -> pylon.discord.v1.rest.RestError.RateLimited
	149, // 5: pylon.discord.v1.rest.ModifyGuildRequest.name:type_name -> google.protobuf.StringValue
	149, // 6: pylon.discord.v1.rest.ModifyGuildRequest.region:type_name -> google.protobuf.StringValue
	150, // 7: pylon.discord.v1.rest.ModifyGuildRequest.verification_level:type_name -> google.protobuf.UInt32Value
	150, // 8: pylon.discord.v1.rest.ModifyGuildRequest.default_message_notifications:type_name -> google.protobuf.UInt32Value
	150, // 9: pylon.discord.v1.rest.ModifyGuildRequest.explicit_content_filter:type_name -> google.protobuf.UInt32Value
	151, // 10: pylon.discord.v1.rest.ModifyGuildRequest.afk_channel_id:type_name -> pylon.discord.v1.model.SnowflakeValue
	150, // 11: pylon.discord.v1.rest.ModifyGuildRequest.afk_timeout:type_name -> google.protobuf.UInt32Value
	152, // 12: pylon.discord.v1.rest.ModifyGuildRequest.icon:type_name -> google.protobuf.BytesValue
	151, // 13: pylon.discord.v1.rest.ModifyGuildRequest.owner_id:type_name -> pylon.discord.v1.model.SnowflakeValue
	152, // 14: pylon.discord.v1.rest.ModifyGuildRequest.splash:type_name -> google.protobuf.BytesValue
	152, // 15: pylon.discord.v1.rest.ModifyGuildRequest.banner:type_name -> google.protobuf.BytesValue
	151, // 16: pylon.discord.v1.rest.ModifyGuildRequest.system_channel_id:type_name -> pylon.discord.v1.model.SnowflakeValue
	151, // 17: pylon.discord.v1.rest.ModifyGuildRequest.rules_channel_id:type_name -> pylon.discord.v1.model.SnowflakeValue
	151, // 18: pylon.discord.v1.rest.ModifyGuildRequest.public_updates_channel_id:type_name -> pylon.discord.v1.model.SnowflakeValue
	149, // 19: pylon.discord.v1.rest.ModifyGuildRequest.preferred_locale:type_name -> google.protobuf.StringValue
	149, // 20: pylon.discord.v1.rest.ModifyGuildRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 21: pylon.discord.v1.rest.ModifyGuildResponse.error:type_name -> pylon.discord.v1.rest.RestError
	115, // 22: pylon.discord.v1.rest.ModifyGuildResponse.data:type_name -> pylon.discord.v1.rest.ModifyGuildResponse.Data
	153, // 23: pylon.discord.v1.rest.CreateGuildChannelRequest.type:type_name -> pylon.discord.v1.model.ChannelData.ChannelType
	149, // 24: pylon.discord.v1.rest.CreateGuildChannelRequest.topic:type_name -> google.protobuf.StringValue
	150, // 25: pylon.discord.v1.rest.CreateGuildChannelRequest.bitrate:type_name -> google.protobuf.UInt32Value
	150, // 26: pylon.discord.v1.rest.CreateGuildChannelRequest.user_limit:type_name -> google.protobuf.UInt32Value
	150, // 27: pylon.discord.v1.rest.CreateGuildChannelRequest.rate_limit_per_user:type_name -> google.protobuf.UInt32Value
	150, // 28: pylon.discord.v1.rest.CreateGuildChannelRequest.position:type_name -> google.protobuf.UInt32Value
	154, // 29: pylon.discord.v1.rest.CreateGuildChannelRequest.permission_overwrites:type_name -> pylon.discord.v1.model.ChannelData.ChannelPermissionOverwriteData
	151, // 30: pylon.discord.v1.rest.CreateGuildChannelRequest.parent_id:type_name -> pylon.discord.v1.model.SnowflakeValue
	155, // 31: pylon.discord.v1.rest.CreateGuildChannelRequest.nsfw:type_name -> google.protobuf.BoolValue
	149, // 32: pylon.discord.v1.rest.CreateGuildChannelRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 33: pylon.discord.v1.rest.CreateGuildChannelResponse.error:type_name -> pylon.discord.v1.rest.RestError
	116, // 34: pylon.discord.v1.rest.CreateGuildChannelResponse.data:type_name -> pylon.discord.v1.rest.CreateGuildChannelResponse.Data
	117, // 35: pylon.discord.v1.rest.ModifyGuildChannelPositionsRequest.channel_positions:type_name -> pylon.discord.v1.rest.ModifyGuildChannelPositionsRequest.ChannelPosition
	0,   // 36: pylon.discord.v1.rest.ModifyGuildChannelPositionsResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 37: pylon.discord.v1.rest.ModifyGuildChannelPositionsResponse.data:type_name -> google.protobuf.Empty
	149, // 38: pylon.discord.v1.rest.AddGuildMemberRequest.nick:type_name -> google.protobuf.StringValue
	157, // 39: pylon.discord.v1.rest.AddGuildMemberRequest.roles:type_name -> pylon.discord.v1.model.SnowflakeListValue
	155, // 40: pylon.discord.v1.rest.AddGuildMemberRequest.mute:type_name -> google.protobuf.BoolValue
	155, // 41: pylon.discord.v1.rest.AddGuildMemberRequest.deaf:type_name -> google.protobuf.BoolValue
	0,   // 42: pylon.discord.v1.rest.AddGuildMemberResponse.error:type_name -> pylon.discord.v1.rest.RestError
	118, // 43: pylon.discord.v1.rest.AddGuildMemberResponse.data:type_name -> pylon.discord.v1.rest.AddGuildMemberResponse.Data
	149, // 44: pylon.discord.v1.rest.ModifyGuildMemberRequest.nick:type_name -> google.protobuf.StringValue
	157, // 45: pylon.discord.v1.rest.ModifyGuildMemberRequest.roles:type_name -> pylon.discord.v1.model.SnowflakeListValue
	155, // 46: pylon.discord.v1.rest.ModifyGuildMemberRequest.mute:type_name -> google.protobuf.BoolValue
	155, // 47: pylon.discord.v1.rest.ModifyGuildMemberRequest.deaf:type_name -> google.protobuf.BoolValue
	151, // 48: pylon.discord.v1.rest.ModifyGuildMemberRequest.channel_id:type_name -> pylon.discord.v1.model.SnowflakeValue
	149, // 49: pylon.discord.v1.rest.ModifyGuildMemberRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 50: pylon.discord.v1.rest.ModifyGuildMemberResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 51: pylon.discord.v1.rest.ModifyGuildMemberResponse.data:type_name -> google.protobuf.Empty
	149, // 52: pylon.discord.v1.rest.ModifyCurrentUserNickRequest.nick:type_name -> google.protobuf.StringValue
	0,   // 53: pylon.discord.v1.rest.ModifyCurrentUserNickResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 54: pylon.discord.v1.rest.ModifyCurrentUserNickResponse.data:type_name -> google.protobuf.Empty
	149, // 55: pylon.discord.v1.rest.AddGuildMemberRoleRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 56: pylon.discord.v1.rest.AddGuildMemberRoleResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 57: pylon.discord.v1.rest.AddGuildMemberRoleResponse.data:type_name -> google.protobuf.Empty
	149, // 58: pylon.discord.v1.rest.RemoveGuildMemberRoleRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 59: pylon.discord.v1.rest.RemoveGuildMemberRoleResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 60: pylon.discord.v1.rest.RemoveGuildMemberRoleResponse.data:type_name -> google.protobuf.Empty
	149, // 61: pylon.discord.v1.rest.RemoveGuildMemberRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 62: pylon.discord.v1.rest.RemoveGuildMemberResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 63: pylon.discord.v1.rest.RemoveGuildMemberResponse.data:type_name -> google.protobuf.Empty
	0,   // 64: pylon.discord.v1.rest.GetGuildBansResponse.error:type_name -> pylon.discord.v1.rest.RestError
	119, // 65: pylon.discord.v1.rest.GetGuildBansResponse.data:type_name -> pylon.discord.v1.rest.GetGuildBansResponse.Data
	0,   // 66: pylon.discord.v1.rest.GetGuildBanResponse.error:type_name -> pylon.discord.v1.rest.RestError
	120, // 67: pylon.discord.v1.rest.GetGuildBanResponse.data:type_name -> pylon.discord.v1.rest.GetGuildBanResponse.Data
	150, // 68: pylon.discord.v1.rest.CreateGuildBanRequest.delete_message_days:type_name -> google.protobuf.UInt32Value
	149, // 69: pylon.discord.v1.rest.CreateGuildBanRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 70: pylon.discord.v1.rest.CreateGuildBanResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 71: pylon.discord.v1.rest.CreateGuildBanResponse.data:type_name -> google.protobuf.Empty
	149, // 72: pylon.discord.v1.rest.RemoveGuildBanRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 73: pylon.discord.v1.rest.RemoveGuildBanResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 74: pylon.discord.v1.rest.RemoveGuildBanResponse.data:type_name -> google.protobuf.Empty
	149, // 75: pylon.discord.v1.rest.CreateGuildRoleRequest.name:type_name -> google.protobuf.StringValue
	158, // 76: pylon.discord.v1.rest.CreateGuildRoleRequest.permissions:type_name -> pylon.discord.v1.model.PermissionsValue
	150, // 77: pylon.discord.v1.rest.CreateGuildRoleRequest.color:type_name -> google.protobuf.UInt32Value
	155, // 78: pylon.discord.v1.rest.CreateGuildRoleRequest.hoist:type_name -> google.protobuf.BoolValue
	155, // 79: pylon.discord.v1.rest.CreateGuildRoleRequest.mentionable:type_name -> google.protobuf.BoolValue
	149, // 80: pylon.discord.v1.rest.CreateGuildRoleRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 81: pylon.discord.v1.rest.CreateGuildRoleResponse.error:type_name -> pylon.discord.v1.rest.RestError
	121, // 82: pylon.discord.v1.rest.CreateGuildRoleResponse.data:type_name -> pylon.discord.v1.rest.CreateGuildRoleResponse.Data
	122, // 83: pylon.discord.v1.rest.ModifyGuildRolePositionsRequest.role_positions:type_name -> pylon.discord.v1.rest.ModifyGuildRolePositionsRequest.RolePosition
	0,   // 84: pylon.discord.v1.rest.ModifyGuildRolePositionsResponse.error:type_name -> pylon.discord.v1.rest.RestError
	123, // 85: pylon.discord.v1.rest.ModifyGuildRolePositionsResponse.data:type_name -> pylon.discord.v1.rest.ModifyGuildRolePositionsResponse.Data
	149, // 86: pylon.discord.v1.rest.ModifyGuildRoleRequest.name:type_name -> google.protobuf.StringValue
	158, // 87: pylon.discord.v1.rest.ModifyGuildRoleRequest.permissions:type_name -> pylon.discord.v1.model.PermissionsValue
	150, // 88: pylon.discord.v1.rest.ModifyGuildRoleRequest.color:type_name -> google.protobuf.UInt32Value
	155, // 89: pylon.discord.v1.rest.ModifyGuildRoleRequest.hoist:type_name -> google.protobuf.BoolValue
	155, // 90: pylon.discord.v1.rest.ModifyGuildRoleRequest.mentionable:type_name -> google.protobuf.BoolValue
	149, // 91: pylon.discord.v1.rest.ModifyGuildRoleRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 92: pylon.discord.v1.rest.ModifyGuildRoleResponse.error:type_name -> pylon.discord.v1.rest.RestError
	124, // 93: pylon.discord.v1.rest.ModifyGuildRoleResponse.data:type_name -> pylon.discord.v1.rest.ModifyGuildRoleResponse.Data
	149, // 94: pylon.discord.v1.rest.DeleteGuildRoleRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 95: pylon.discord.v1.rest.DeleteGuildRoleResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 96: pylon.discord.v1.rest.DeleteGuildRoleResponse.data:type_name -> google.protobuf.Empty
	150, // 97: pylon.discord.v1.rest.GetGuildPruneCountRequest.days:type_name -> google.protobuf.UInt32Value
	157, // 98: pylon.discord.v1.rest.GetGuildPruneCountRequest.include_roles:type_name -> pylon.discord.v1.model.SnowflakeListValue
	0,   // 99: pylon.discord.v1.rest.GetGuildPruneCountResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 100: pylon.discord.v1.rest.GetGuildPruneCountResponse.data:type_name -> google.protobuf.Empty
	150, // 101: pylon.discord.v1.rest.BeginGuildPruneRequest.days:type_name -> google.protobuf.UInt32Value
	157, // 102: pylon.discord.v1.rest.BeginGuildPruneRequest.include_roles:type_name -> pylon.discord.v1.model.SnowflakeListValue
	155, // 103: pylon.discord.v1.rest.BeginGuildPruneRequest.compute_prune_count:type_name -> google.protobuf.BoolValue
	149, // 104: pylon.discord.v1.rest.BeginGuildPruneRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 105: pylon.discord.v1.rest.BeginGuildPruneResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 106: pylon.discord.v1.rest.BeginGuildPruneResponse.data:type_name -> google.protobuf.Empty
	0,   // 107: pylon.discord.v1.rest.GetGuildVoiceRegionsResponse.error:type_name -> pylon.discord.v1.rest.RestError
	125, // 108: pylon.discord.v1.rest.GetGuildVoiceRegionsResponse.data:type_name -> pylon.discord.v1.rest.GetGuildVoiceRegionsResponse.Data
	0,   // 109: pylon.discord.v1.rest.GetGuildInvitesResponse.error:type_name -> pylon.discord.v1.rest.RestError
	126, // 110: pylon.discord.v1.rest.GetGuildInvitesResponse.data:type_name -> pylon.discord.v1.rest.GetGuildInvitesResponse.Data
	149, // 111: pylon.discord.v1.rest.ModifyChannelRequest.name:type_name -> google.protobuf.StringValue
	153, // 112: pylon.discord.v1.rest.ModifyChannelRequest.type:type_name -> pylon.discord.v1.model.ChannelData.ChannelType
	150, // 113: pylon.discord.v1.rest.ModifyChannelRequest.position:type_name -> google.protobuf.UInt32Value
	149, // 114: pylon.discord.v1.rest.ModifyChannelRequest.topic:type_name -> google.protobuf.StringValue
	155, // 115: pylon.discord.v1.rest.ModifyChannelRequest.nsfw:type_name -> google.protobuf.BoolValue
	150, // 116: pylon.discord.v1.rest.ModifyChannelRequest.rate_limit_per_user:type_name -> google.protobuf.UInt32Value
	150, // 117: pylon.discord.v1.rest.ModifyChannelRequest.bitrate:type_name -> google.protobuf.UInt32Value
	150, // 118: pylon.discord.v1.rest.ModifyChannelRequest.user_limit:type_name -> google.protobuf.UInt32Value
	127, // 119: pylon.discord.v1.rest.ModifyChannelRequest.permission_overwrites:type_name -> pylon.discord.v1.rest.ModifyChannelRequest.ChannelPermissionOverwritesValue
	151, // 120: pylon.discord.v1.rest.ModifyChannelRequest.parent_id:type_name -> pylon.discord.v1.model.SnowflakeValue
	149, // 121: pylon.discord.v1.rest.ModifyChannelRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 122: pylon.discord.v1.rest.ModifyChannelResponse.error:type_name -> pylon.discord.v1.rest.RestError
	128, // 123: pylon.discord.v1.rest.ModifyChannelResponse.data:type_name -> pylon.discord.v1.rest.ModifyChannelResponse.Data
	149, // 124: pylon.discord.v1.rest.DeleteChannelRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 125: pylon.discord.v1.rest.DeleteChannelResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 126: pylon.discord.v1.rest.DeleteChannelResponse.data:type_name -> google.protobuf.Empty
	151, // 127: pylon.discord.v1.rest.GetChannelMessagesRequest.around:type_name -> pylon.discord.v1.model.SnowflakeValue
	151, // 128: pylon.discord.v1.rest.GetChannelMessagesRequest.before:type_name -> pylon.discord.v1.model.SnowflakeValue
	151, // 129: pylon.discord.v1.rest.GetChannelMessagesRequest.after:type_name -> pylon.discord.v1.model.SnowflakeValue
	0,   // 130: pylon.discord.v1.rest.GetChannelMessagesResponse.error:type_name -> pylon.discord.v1.rest.RestError
	129, // 131: pylon.discord.v1.rest.GetChannelMessagesResponse.data:type_name -> pylon.discord.v1.rest.GetChannelMessagesResponse.Data
	0,   // 132: pylon.discord.v1.rest.GetChannelMessageResponse.error:type_name -> pylon.discord.v1.rest.RestError
	130, // 133: pylon.discord.v1.rest.GetChannelMessageResponse.data:type_name -> pylon.discord.v1.rest.GetChannelMessageResponse.Data
	149, // 134: pylon.discord.v1.rest.CreateMessageRequest.nonce:type_name -> google.protobuf.StringValue
	155, // 135: pylon.discord.v1.rest.CreateMessageRequest.tts:type_name -> google.protobuf.BoolValue
	159, // 136: pylon.discord.v1.rest.CreateMessageRequest.embed:type_name -> pylon.discord.v1.model.MessageData.MessageEmbedData
	131, // 137: pylon.discord.v1.rest.CreateMessageRequest.allowed_mentions:type_name -> pylon.discord.v1.rest.CreateMessageRequest.AllowedMentions
	132, // 138: pylon.discord.v1.rest.CreateMessageRequest.attachment:type_name -> pylon.discord.v1.rest.CreateMessageRequest.Attachment
	0,   // 139: pylon.discord.v1.rest.CreateMessageResponse.error:type_name -> pylon.discord.v1.rest.RestError
	134, // 140: pylon.discord.v1.rest.CreateMessageResponse.data:type_name -> pylon.discord.v1.rest.CreateMessageResponse.Data
	0,   // 141: pylon.discord.v1.rest.CrosspostMessageResponse.error:type_name -> pylon.discord.v1.rest.RestError
	135, // 142: pylon.discord.v1.rest.CrosspostMessageResponse.data:type_name -> pylon.discord.v1.rest.CrosspostMessageResponse.Data
	0,   // 143: pylon.discord.v1.rest.CreateReactionResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 144: pylon.discord.v1.rest.CreateReactionResponse.data:type_name -> google.protobuf.Empty
	0,   // 145: pylon.discord.v1.rest.DeleteOwnReactionResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 146: pylon.discord.v1.rest.DeleteOwnReactionResponse.data:type_name -> google.protobuf.Empty
	0,   // 147: pylon.discord.v1.rest.DeleteUserReactionResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 148: pylon.discord.v1.rest.DeleteUserReactionResponse.data:type_name -> google.protobuf.Empty
	0,   // 149: pylon.discord.v1.rest.DeleteAllReactionsResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 150: pylon.discord.v1.rest.DeleteAllReactionsResponse.data:type_name -> google.protobuf.Empty
	0,   // 151: pylon.discord.v1.rest.DeleteAllReactionsForEmojiResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 152: pylon.discord.v1.rest.DeleteAllReactionsForEmojiResponse.data:type_name -> google.protobuf.Empty
	149, // 153: pylon.discord.v1.rest.EditMessageRequest.content:type_name -> google.protobuf.StringValue
	159, // 154: pylon.discord.v1.rest.EditMessageRequest.embed:type_name -> pylon.discord.v1.model.MessageData.MessageEmbedData
	150, // 155: pylon.discord.v1.rest.EditMessageRequest.flags:type_name -> google.protobuf.UInt32Value
	0,   // 156: pylon.discord.v1.rest.EditMessageResponse.error:type_name -> pylon.discord.v1.rest.RestError
	136, // 157: pylon.discord.v1.rest.EditMessageResponse.data:type_name -> pylon.discord.v1.rest.EditMessageResponse.Data
	149, // 158: pylon.discord.v1.rest.DeleteMessageRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 159: pylon.discord.v1.rest.DeleteMessageResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 160: pylon.discord.v1.rest.DeleteMessageResponse.data:type_name -> google.protobuf.Empty
	149, // 161: pylon.discord.v1.rest.BulkDeleteMessagesRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 162: pylon.discord.v1.rest.BulkDeleteMessagesResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 163: pylon.discord.v1.rest.BulkDeleteMessagesResponse.data:type_name -> google.protobuf.Empty
	160, // 164: pylon.discord.v1.rest.EditChannelPermissionsRequest.type:type_name -> pylon.discord.v1.model.ChannelData.ChannelPermissionOverwriteData.ChannelPermissionOverwriteType
	149, // 165: pylon.discord.v1.rest.EditChannelPermissionsRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 166: pylon.discord.v1.rest.EditChannelPermissionsResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 167: pylon.discord.v1.rest.EditChannelPermissionsResponse.data:type_name -> google.protobuf.Empty
	0,   // 168: pylon.discord.v1.rest.GetChannelInvitesResponse.error:type_name -> pylon.discord.v1.rest.RestError
	137, // 169: pylon.discord.v1.rest.GetChannelInvitesResponse.data:type_name -> pylon.discord.v1.rest.GetChannelInvitesResponse.Data
	150, // 170: pylon.discord.v1.rest.CreateChannelInviteRequest.max_age:type_name -> google.protobuf.UInt32Value
	150, // 171: pylon.discord.v1.rest.CreateChannelInviteRequest.max_uses:type_name -> google.protobuf.UInt32Value
	155, // 172: pylon.discord.v1.rest.CreateChannelInviteRequest.temporary:type_name -> google.protobuf.BoolValue
	155, // 173: pylon.discord.v1.rest.CreateChannelInviteRequest.unique:type_name -> google.protobuf.BoolValue
	151, // 174: pylon.discord.v1.rest.CreateChannelInviteRequest.target_user:type_name -> pylon.discord.v1.model.SnowflakeValue
	161, // 175: pylon.discord.v1.rest.CreateChannelInviteRequest.target_user_type:type_name -> pylon.discord.v1.model.InviteData.InviteTargetUserType
	149, // 176: pylon.discord.v1.rest.CreateChannelInviteRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 177: pylon.discord.v1.rest.CreateChannelInviteResponse.error:type_name -> pylon.discord.v1.rest.RestError
	138, // 178: pylon.discord.v1.rest.CreateChannelInviteResponse.data:type_name -> pylon.discord.v1.rest.CreateChannelInviteResponse.Data
	149, // 179: pylon.discord.v1.rest.DeleteChannelPermissionRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 180: pylon.discord.v1.rest.DeleteChannelPermissionResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 181: pylon.discord.v1.rest.DeleteChannelPermissionResponse.data:type_name -> google.protobuf.Empty
	0,   // 182: pylon.discord.v1.rest.FollowNewsChannelResponse.error:type_name -> pylon.discord.v1.rest.RestError
	139, // 183: pylon.discord.v1.rest.FollowNewsChannelResponse.data:type_name -> pylon.discord.v1.rest.FollowNewsChannelResponse.Data
	0,   // 184: pylon.discord.v1.rest.TriggerTypingIndicatorResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 185: pylon.discord.v1.rest.TriggerTypingIndicatorResponse.data:type_name -> google.protobuf.Empty
	0,   // 186: pylon.discord.v1.rest.GetPinnedMessagesResponse.error:type_name -> pylon.discord.v1.rest.RestError
	140, // 187: pylon.discord.v1.rest.GetPinnedMessagesResponse.data:type_name -> pylon.discord.v1.rest.GetPinnedMessagesResponse.Data
	149, // 188: pylon.discord.v1.rest.AddPinnedChannelMessageRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 189: pylon.discord.v1.rest.AddPinnedChannelMessageResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 190: pylon.discord.v1.rest.AddPinnedChannelMessageResponse.data:type_name -> google.protobuf.Empty
	149, // 191: pylon.discord.v1.rest.DeletePinnedChannelMessageRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 192: pylon.discord.v1.rest.DeletePinnedChannelMessageResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 193: pylon.discord.v1.rest.DeletePinnedChannelMessageResponse.data:type_name -> google.protobuf.Empty
	0,   // 194: pylon.discord.v1.rest.ListGuildEmojisResponse.error:type_name -> pylon.discord.v1.rest.RestError
	141, // 195: pylon.discord.v1.rest.ListGuildEmojisResponse.data:type_name -> pylon.discord.v1.rest.ListGuildEmojisResponse.Data
	0,   // 196: pylon.discord.v1.rest.GetGuildEmojiResponse.error:type_name -> pylon.discord.v1.rest.RestError
	142, // 197: pylon.discord.v1.rest.GetGuildEmojiResponse.data:type_name -> pylon.discord.v1.rest.GetGuildEmojiResponse.Data
	152, // 198: pylon.discord.v1.rest.CreateGuildEmojiRequest.image:type_name -> google.protobuf.BytesValue
	157, // 199: pylon.discord.v1.rest.CreateGuildEmojiRequest.roles:type_name -> pylon.discord.v1.model.SnowflakeListValue
	149, // 200: pylon.discord.v1.rest.CreateGuildEmojiRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 201: pylon.discord.v1.rest.CreateGuildEmojiResponse.error:type_name -> pylon.discord.v1.rest.RestError
	143, // 202: pylon.discord.v1.rest.CreateGuildEmojiResponse.data:type_name -> pylon.discord.v1.rest.CreateGuildEmojiResponse.Data
	149, // 203: pylon.discord.v1.rest.ModifyGuildEmojiRequest.name:type_name -> google.protobuf.StringValue
	157, // 204: pylon.discord.v1.rest.ModifyGuildEmojiRequest.roles:type_name -> pylon.discord.v1.model.SnowflakeListValue
	149, // 205: pylon.discord.v1.rest.ModifyGuildEmojiRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 206: pylon.discord.v1.rest.ModifyGuildEmojiResponse.error:type_name -> pylon.discord.v1.rest.RestError
	144, // 207: pylon.discord.v1.rest.ModifyGuildEmojiResponse.data:type_name -> pylon.discord.v1.rest.ModifyGuildEmojiResponse.Data
	149, // 208: pylon.discord.v1.rest.DeleteGuildEmojiRequest.audit_log_reason:type_name -> google.protobuf.StringValue
	0,   // 209: pylon.discord.v1.rest.DeleteGuildEmojiResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 210: pylon.discord.v1.rest.DeleteGuildEmojiResponse.data:type_name -> google.protobuf.Empty
	0,   // 211: pylon.discord.v1.rest.GetCurrentUserResponse.error:type_name -> pylon.discord.v1.rest.RestError
	145, // 212: pylon.discord.v1.rest.GetCurrentUserResponse.data:type_name -> pylon.discord.v1.rest.GetCurrentUserResponse.Data
	0,   // 213: pylon.discord.v1.rest.GetUserResponse.error:type_name -> pylon.discord.v1.rest.RestError
	146, // 214: pylon.discord.v1.rest.GetUserResponse.data:type_name -> pylon.discord.v1.rest.GetUserResponse.Data
	149, // 215: pylon.discord.v1.rest.ModifyCurrentUserRequest.username:type_name -> google.protobuf.StringValue
	152, // 216: pylon.discord.v1.rest.ModifyCurrentUserRequest.avatar:type_name -> google.protobuf.BytesValue
	0,   // 217: pylon.discord.v1.rest.ModifyCurrentUserResponse.error:type_name -> pylon.discord.v1.rest.RestError
	147, // 218: pylon.discord.v1.rest.ModifyCurrentUserResponse.data:type_name -> pylon.discord.v1.rest.ModifyCurrentUserResponse.Data
	0,   // 219: pylon.discord.v1.rest.LeaveGuildResponse.error:type_name -> pylon.discord.v1.rest.RestError
	156, // 220: pylon.discord.v1.rest.LeaveGuildResponse.data:type_name -> google.protobuf.Empty
	0,   // 221: pylon.discord.v1.rest.CreateDmResponse.error:type_name -> pylon.discord.v1.rest.RestError
	148, // 222: pylon.discord.v1.rest.CreateDmResponse.data:type_name -> pylon.discord.v1.rest.CreateDmResponse.Data
	114, // 223: pylon.discord.v1.rest.RestError.ValidationError.fields:type_name -> pylon.discord.v1.rest.RestError.ValidationError.Field
	162, // 224: pylon.discord.v1.rest.ModifyGuildResponse.Data.guild:type_name -> pylon.discord.v1.model.GuildData
	163, // 225: pylon.discord.v1.rest.CreateGuildChannelResponse.Data.channel:type_name -> pylon.discord.v1.model.ChannelData
	164, // 226: pylon.discord.v1.rest.GetGuildBansResponse.Data.bans:type_name -> pylon.discord.v1.model.GuildBanData
	164, // 227: pylon.discord.v1.rest.GetGuildBanResponse.Data.ban:type_name -> pylon.discord.v1.model.GuildBanData
	165, // 228: pylon.discord.v1.rest.CreateGuildRoleResponse.Data.role:type_name -> pylon.discord.v1.model.RoleData
	165, // 229: pylon.discord.v1.rest.ModifyGuildRolePositionsResponse.Data.roles:type_name -> pylon.discord.v1.model.RoleData
	165, // 230: pylon.discord.v1.rest.ModifyGuildRoleResponse.Data.role:type_name -> pylon.discord.v1.model.RoleData
	166, // 231: pylon.discord.v1.rest.GetGuildInvitesResponse.Data.invites:type_name -> pylon.discord.v1.model.InviteData
	154, // 232: pylon.discord.v1.rest.ModifyChannelRequest.ChannelPermissionOverwritesValue.values:type_name -> pylon.discord.v1.model.ChannelData.ChannelPermissionOverwriteData
	163, // 233: pylon.discord.v1.rest.ModifyChannelResponse.Data.channel:type_name -> pylon.discord.v1.model.ChannelData
	167, // 234: pylon.discord.v1.rest.GetChannelMessagesResponse.Data.messages:type_name -> pylon.discord.v1.model.MessageData
	167, // 235: pylon.discord.v1.rest.GetChannelMessageResponse.Data.message:type_name -> pylon.discord.v1.model.MessageData
	133, // 236: pylon.discord.v1.rest.CreateMessageRequest.AllowedMentions.parse:type_name -> pylon.discord.v1.rest.CreateMessageRequest.AllowedMentions.AllowedMentionTypes
	157, // 237: pylon.discord.v1.rest.CreateMessageRequest.AllowedMentions.roles:type_name -> pylon.discord.v1.model.SnowflakeListValue
	157, // 238: pylon.discord.v1.rest.CreateMessageRequest.AllowedMentions.users:type_name -> pylon.discord.v1.model.SnowflakeListValue
	167, // 239: pylon.discord.v1.rest.CreateMessageResponse.Data.message:type_name -> pylon.discord.v1.model.MessageData
	167, // 240: pylon.discord.v1.rest.CrosspostMessageResponse.Data.message:type_name -> pylon.discord.v1.model.MessageData
	167, // 241: pylon.discord.v1.rest.EditMessageResponse.Data.message:type_name -> pylon.discord.v1.model.MessageData
	166, // 242: pylon.discord.v1.rest.GetChannelInvitesResponse.Data.invites:type_name -> pylon.discord.v1.model.InviteData
	166, // 243: pylon.discord.v1.rest.CreateChannelInviteResponse.Data.invite:type_name -> pylon.discord.v1.model.InviteData
	167, // 244: pylon.discord.v1.rest.GetPinnedMessagesResponse.Data.messages:type_name -> pylon.discord.v1.model.MessageData
	168, // 245: pylon.discord.v1.rest.ListGuildEmojisResponse.Data.emojis:type_name -> pylon.discord.v1.model.EmojiData
	168, // 246: pylon.discord.v1.rest.GetGuildEmojiResponse.Data.emoji:type_name -> pylon.discord.v1.model.EmojiData
	168, // 247: pylon.discord.v1.rest.CreateGuildEmojiResponse.Data.emoji:type_name -> pylon.discord.v1.model.EmojiData
	168, // 248: pylon.discord.v1.rest.ModifyGuildEmojiResponse.Data.emoji:type_name -> pylon.discord.v1.model.EmojiData
	169, // 249: pylon.discord.v1.rest.GetCurrentUserResponse.Data.user:type_name -> pylon.discord.v1.model.UserData
	169, // 250: pylon.discord.v1.rest.GetUserResponse.Data.user:type_name -> pylon.discord.v1.model.UserData
	169, // 251: pylon.discord.v1.rest.ModifyCurrentUserResponse.Data.user:type_name -> pylon.discord.v1.model.UserData
	163, // 252: pylon.discord.v1.rest.CreateDmResponse.Data.channel:type_name -> pylon.discord.v1.model.ChannelData
	253, // [253:253] is the sub-list for method output_type
	253, // [253:253] is the sub-list for method input_type
	253, // [253:253] is the sub-list for extension type_name
	253, // [253:253] is the sub-list for extension extendee
	0,   // [0:253] is the sub-list for field type_name
}

func init() { file_discord_v1_rest_proto_init() }
func file_discord_v1_rest_proto_init() {
	if File_discord_v1_rest_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_discord_v1_rest_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyGuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyGuildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGuildChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGuildChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyGuildChannelPositionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyGuildChannelPositionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGuildMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGuildMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyGuildMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyGuildMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyCurrentUserNickRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyCurrentUserNickResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGuildMemberRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGuildMemberRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGuildMemberRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGuildMemberRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGuildMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGuildMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuildBansRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuildBansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuildBanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuildBanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGuildBanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGuildBanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGuildBanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGuildBanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGuildRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGuildRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyGuildRolePositionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyGuildRolePositionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyGuildRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyGuildRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGuildRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGuildRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuildPruneCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuildPruneCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginGuildPruneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginGuildPruneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuildVoiceRegionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuildVoiceRegionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuildInvitesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuildInvitesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrosspostMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrosspostMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOwnReactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOwnReactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserReactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserReactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAllReactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAllReactionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAllReactionsForEmojiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAllReactionsForEmojiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkDeleteMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkDeleteMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditChannelPermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditChannelPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelInvitesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelInvitesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChannelInviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChannelInviteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChannelPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChannelPermissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowNewsChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowNewsChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerTypingIndicatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerTypingIndicatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPinnedMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPinnedMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPinnedChannelMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPinnedChannelMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePinnedChannelMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePinnedChannelMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGuildEmojisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGuildEmojisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuildEmojiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuildEmojiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGuildEmojiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGuildEmojiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyGuildEmojiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyGuildEmojiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGuildEmojiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGuildEmojiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyCurrentUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyCurrentUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveGuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveGuildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestError_UnknownError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestError_ValidationError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestError_ResourceNotFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestError_AccessDenied); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestError_RateLimited); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestError_ValidationError_Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyGuildResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGuildChannelResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyGuildChannelPositionsRequest_ChannelPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGuildMemberResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuildBansResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuildBanResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGuildRoleResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyGuildRolePositionsRequest_RolePosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyGuildRolePositionsResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyGuildRoleResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuildVoiceRegionsResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuildInvitesResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyChannelRequest_ChannelPermissionOverwritesValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyChannelResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelMessagesResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelMessageResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMessageRequest_AllowedMentions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMessageRequest_Attachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMessageRequest_AllowedMentions_AllowedMentionTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMessageResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrosspostMessageResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditMessageResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelInvitesResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChannelInviteResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowNewsChannelResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPinnedMessagesResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGuildEmojisResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuildEmojiResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGuildEmojiResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyGuildEmojiResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentUserResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyCurrentUserResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_v1_rest_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDmResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_discord_v1_rest_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*RestError_UnknownError_)(nil),
		(*RestError_ValidationError_)(nil),
		(*RestError_ResourceNotFound_)(nil),
		(*RestError_AccessDenied_)(nil),
		(*RestError_RateLimited_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ModifyGuildResponse_Error)(nil),
		(*ModifyGuildResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*CreateGuildChannelResponse_Error)(nil),
		(*CreateGuildChannelResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ModifyGuildChannelPositionsResponse_Error)(nil),
		(*ModifyGuildChannelPositionsResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*AddGuildMemberResponse_Error)(nil),
		(*AddGuildMemberResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*ModifyGuildMemberResponse_Error)(nil),
		(*ModifyGuildMemberResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*ModifyCurrentUserNickResponse_Error)(nil),
		(*ModifyCurrentUserNickResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*AddGuildMemberRoleResponse_Error)(nil),
		(*AddGuildMemberRoleResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*RemoveGuildMemberRoleResponse_Error)(nil),
		(*RemoveGuildMemberRoleResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*RemoveGuildMemberResponse_Error)(nil),
		(*RemoveGuildMemberResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*GetGuildBansResponse_Error)(nil),
		(*GetGuildBansResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*GetGuildBanResponse_Error)(nil),
		(*GetGuildBanResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*CreateGuildBanResponse_Error)(nil),
		(*CreateGuildBanResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*RemoveGuildBanResponse_Error)(nil),
		(*RemoveGuildBanResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[28].OneofWrappers = []interface{}{
		(*CreateGuildRoleResponse_Error)(nil),
		(*CreateGuildRoleResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[30].OneofWrappers = []interface{}{
		(*ModifyGuildRolePositionsResponse_Error)(nil),
		(*ModifyGuildRolePositionsResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[32].OneofWrappers = []interface{}{
		(*ModifyGuildRoleResponse_Error)(nil),
		(*ModifyGuildRoleResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[34].OneofWrappers = []interface{}{
		(*DeleteGuildRoleResponse_Error)(nil),
		(*DeleteGuildRoleResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[36].OneofWrappers = []interface{}{
		(*GetGuildPruneCountResponse_Error)(nil),
		(*GetGuildPruneCountResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[38].OneofWrappers = []interface{}{
		(*BeginGuildPruneResponse_Error)(nil),
		(*BeginGuildPruneResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[40].OneofWrappers = []interface{}{
		(*GetGuildVoiceRegionsResponse_Error)(nil),
		(*GetGuildVoiceRegionsResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[42].OneofWrappers = []interface{}{
		(*GetGuildInvitesResponse_Error)(nil),
		(*GetGuildInvitesResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[44].OneofWrappers = []interface{}{
		(*ModifyChannelResponse_Error)(nil),
		(*ModifyChannelResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[46].OneofWrappers = []interface{}{
		(*DeleteChannelResponse_Error)(nil),
		(*DeleteChannelResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[48].OneofWrappers = []interface{}{
		(*GetChannelMessagesResponse_Error)(nil),
		(*GetChannelMessagesResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[50].OneofWrappers = []interface{}{
		(*GetChannelMessageResponse_Error)(nil),
		(*GetChannelMessageResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[52].OneofWrappers = []interface{}{
		(*CreateMessageResponse_Error)(nil),
		(*CreateMessageResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[54].OneofWrappers = []interface{}{
		(*CrosspostMessageResponse_Error)(nil),
		(*CrosspostMessageResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[56].OneofWrappers = []interface{}{
		(*CreateReactionResponse_Error)(nil),
		(*CreateReactionResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[58].OneofWrappers = []interface{}{
		(*DeleteOwnReactionResponse_Error)(nil),
		(*DeleteOwnReactionResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[60].OneofWrappers = []interface{}{
		(*DeleteUserReactionResponse_Error)(nil),
		(*DeleteUserReactionResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[62].OneofWrappers = []interface{}{
		(*DeleteAllReactionsResponse_Error)(nil),
		(*DeleteAllReactionsResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[64].OneofWrappers = []interface{}{
		(*DeleteAllReactionsForEmojiResponse_Error)(nil),
		(*DeleteAllReactionsForEmojiResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[66].OneofWrappers = []interface{}{
		(*EditMessageResponse_Error)(nil),
		(*EditMessageResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[68].OneofWrappers = []interface{}{
		(*DeleteMessageResponse_Error)(nil),
		(*DeleteMessageResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[70].OneofWrappers = []interface{}{
		(*BulkDeleteMessagesResponse_Error)(nil),
		(*BulkDeleteMessagesResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[72].OneofWrappers = []interface{}{
		(*EditChannelPermissionsResponse_Error)(nil),
		(*EditChannelPermissionsResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[74].OneofWrappers = []interface{}{
		(*GetChannelInvitesResponse_Error)(nil),
		(*GetChannelInvitesResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[76].OneofWrappers = []interface{}{
		(*CreateChannelInviteResponse_Error)(nil),
		(*CreateChannelInviteResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[78].OneofWrappers = []interface{}{
		(*DeleteChannelPermissionResponse_Error)(nil),
		(*DeleteChannelPermissionResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[80].OneofWrappers = []interface{}{
		(*FollowNewsChannelResponse_Error)(nil),
		(*FollowNewsChannelResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[82].OneofWrappers = []interface{}{
		(*TriggerTypingIndicatorResponse_Error)(nil),
		(*TriggerTypingIndicatorResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[84].OneofWrappers = []interface{}{
		(*GetPinnedMessagesResponse_Error)(nil),
		(*GetPinnedMessagesResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[86].OneofWrappers = []interface{}{
		(*AddPinnedChannelMessageResponse_Error)(nil),
		(*AddPinnedChannelMessageResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[88].OneofWrappers = []interface{}{
		(*DeletePinnedChannelMessageResponse_Error)(nil),
		(*DeletePinnedChannelMessageResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[90].OneofWrappers = []interface{}{
		(*ListGuildEmojisResponse_Error)(nil),
		(*ListGuildEmojisResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[92].OneofWrappers = []interface{}{
		(*GetGuildEmojiResponse_Error)(nil),
		(*GetGuildEmojiResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[94].OneofWrappers = []interface{}{
		(*CreateGuildEmojiResponse_Error)(nil),
		(*CreateGuildEmojiResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[96].OneofWrappers = []interface{}{
		(*ModifyGuildEmojiResponse_Error)(nil),
		(*ModifyGuildEmojiResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[98].OneofWrappers = []interface{}{
		(*DeleteGuildEmojiResponse_Error)(nil),
		(*DeleteGuildEmojiResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[100].OneofWrappers = []interface{}{
		(*GetCurrentUserResponse_Error)(nil),
		(*GetCurrentUserResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[102].OneofWrappers = []interface{}{
		(*GetUserResponse_Error)(nil),
		(*GetUserResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[104].OneofWrappers = []interface{}{
		(*ModifyCurrentUserResponse_Error)(nil),
		(*ModifyCurrentUserResponse_Data_)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[106].OneofWrappers = []interface{}{
		(*LeaveGuildResponse_Error)(nil),
		(*LeaveGuildResponse_Data)(nil),
	}
	file_discord_v1_rest_proto_msgTypes[108].OneofWrappers = []interface{}{
		(*CreateDmResponse_Error)(nil),
		(*CreateDmResponse_Data_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_discord_v1_rest_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   149,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_discord_v1_rest_proto_goTypes,
		DependencyIndexes: file_discord_v1_rest_proto_depIdxs,
		MessageInfos:      file_discord_v1_rest_proto_msgTypes,
	}.Build()
	File_discord_v1_rest_proto = out.File
	file_discord_v1_rest_proto_rawDesc = nil
	file_discord_v1_rest_proto_goTypes = nil
	file_discord_v1_rest_proto_depIdxs = nil
}
